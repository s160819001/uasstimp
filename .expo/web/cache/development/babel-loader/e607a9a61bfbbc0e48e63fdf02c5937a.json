{"ast":null,"code":"import { FlipType } from \"../ImageManipulator.types\";\nimport { getContext } from \"../utils/getContext.web\";\nexport default (function (canvas, flip) {\n  var xFlip = flip === FlipType.Horizontal;\n  var yFlip = flip === FlipType.Vertical;\n  var result = document.createElement('canvas');\n  result.width = canvas.width;\n  result.height = canvas.height;\n  var context = getContext(result);\n  context.translate(canvas.width / 2, canvas.height / 2);\n  var xScale = xFlip ? -1 : 1;\n  var yScale = yFlip ? -1 : 1;\n  context.scale(xScale, yScale);\n  context.drawImage(canvas, -canvas.width / 2, -canvas.height / 2, canvas.width, canvas.height);\n  return result;\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,QAArB;AACA,SAASC,UAAT;AAEA,gBAAe,UAACC,MAAD,EAA4BC,IAA5B,EAAwD;EACrE,IAAMC,KAAK,GAAGD,IAAI,KAAKH,QAAQ,CAACK,UAAhC;EACA,IAAMC,KAAK,GAAGH,IAAI,KAAKH,QAAQ,CAACO,QAAhC;EAEA,IAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;EACAF,MAAM,CAACG,KAAP,GAAeT,MAAM,CAACS,KAAtB;EACAH,MAAM,CAACI,MAAP,GAAgBV,MAAM,CAACU,MAAvB;EAEA,IAAMC,OAAO,GAAGZ,UAAU,CAACO,MAAD,CAA1B;EAGAK,OAAO,CAACC,SAAR,CAAkBZ,MAAM,CAACS,KAAP,GAAe,CAAjC,EAAoCT,MAAM,CAACU,MAAP,GAAgB,CAApD;EAGA,IAAMG,MAAM,GAAGX,KAAK,GAAG,CAAC,CAAJ,GAAQ,CAA5B;EACA,IAAMY,MAAM,GAAGV,KAAK,GAAG,CAAC,CAAJ,GAAQ,CAA5B;EACAO,OAAO,CAACI,KAAR,CAAcF,MAAd,EAAsBC,MAAtB;EAGAH,OAAO,CAACK,SAAR,CAAkBhB,MAAlB,EAA0B,CAACA,MAAM,CAACS,KAAR,GAAgB,CAA1C,EAA6C,CAACT,MAAM,CAACU,MAAR,GAAiB,CAA9D,EAAiEV,MAAM,CAACS,KAAxE,EAA+ET,MAAM,CAACU,MAAtF;EAEA,OAAOJ,MAAP;AACD,CAtBD","names":["FlipType","getContext","canvas","flip","xFlip","Horizontal","yFlip","Vertical","result","document","createElement","width","height","context","translate","xScale","yScale","scale","drawImage"],"sourceRoot":"","sources":["../../src/actions/FlipAction.web.ts"],"sourcesContent":["import { ActionFlip, FlipType } from '../ImageManipulator.types';\nimport { getContext } from '../utils/getContext.web';\n\nexport default (canvas: HTMLCanvasElement, flip: ActionFlip['flip']) => {\n  const xFlip = flip === FlipType.Horizontal;\n  const yFlip = flip === FlipType.Vertical;\n\n  const result = document.createElement('canvas');\n  result.width = canvas.width;\n  result.height = canvas.height;\n\n  const context = getContext(result);\n\n  // Set the origin to the center of the image\n  context.translate(canvas.width / 2, canvas.height / 2);\n\n  // Flip/flop the canvas\n  const xScale = xFlip ? -1 : 1;\n  const yScale = yFlip ? -1 : 1;\n  context.scale(xScale, yScale);\n\n  // Draw the image\n  context.drawImage(canvas, -canvas.width / 2, -canvas.height / 2, canvas.width, canvas.height);\n\n  return result;\n};\n"]},"metadata":{},"sourceType":"module"}