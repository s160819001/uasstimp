{"ast":null,"code":"import React from 'react';\nimport getIconType from \"../../helpers/getIconType\";\nexport var CheckBoxIcon = function CheckBoxIcon(_ref) {\n  var checked = _ref.checked,\n      onIconPress = _ref.onIconPress,\n      onLongIconPress = _ref.onLongIconPress,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      _ref$checkedIcon = _ref.checkedIcon,\n      checkedIcon = _ref$checkedIcon === void 0 ? 'check-square-o' : _ref$checkedIcon,\n      _ref$uncheckedIcon = _ref.uncheckedIcon,\n      uncheckedIcon = _ref$uncheckedIcon === void 0 ? 'square-o' : _ref$uncheckedIcon,\n      iconType = _ref.iconType,\n      checkedColor = _ref.checkedColor,\n      _ref$uncheckedColor = _ref.uncheckedColor,\n      uncheckedColor = _ref$uncheckedColor === void 0 ? '#bfbfbf' : _ref$uncheckedColor;\n\n  if (checked && React.isValidElement(checkedIcon)) {\n    return checkedIcon;\n  }\n\n  if (!checked && React.isValidElement(uncheckedIcon)) {\n    return uncheckedIcon;\n  }\n\n  var VectorIcon = iconType ? getIconType(iconType) : getIconType('font-awesome');\n  return React.createElement(VectorIcon, {\n    testID: \"RNE__Checkbox__Icon\",\n    color: checked ? checkedColor : uncheckedColor,\n    name: checked ? checkedIcon : uncheckedIcon,\n    size: size || 24,\n    style: {\n      minWidth: size || 24\n    },\n    onLongPress: onLongIconPress,\n    onPress: onIconPress\n  });\n};","map":{"version":3,"names":["React","getIconType","CheckBoxIcon","checked","onIconPress","onLongIconPress","size","checkedIcon","uncheckedIcon","iconType","checkedColor","uncheckedColor","isValidElement","VectorIcon","createElement","testID","color","name","style","minWidth","onLongPress","onPress"],"sources":["C:/Users/CHRIS/Documents/Kuliah/Semester7/STIMP/UAS/ZIP/uasstimp-master/node_modules/@rneui/base/dist/CheckBox/components/CheckBoxIcon.js"],"sourcesContent":["import React from 'react';\nimport getIconType from '../../helpers/getIconType';\nexport const CheckBoxIcon = ({ checked, onIconPress, onLongIconPress, size = 24, checkedIcon = 'check-square-o', uncheckedIcon = 'square-o', iconType, checkedColor, uncheckedColor = '#bfbfbf', }) => {\n    if (checked && React.isValidElement(checkedIcon)) {\n        return checkedIcon;\n    }\n    if (!checked && React.isValidElement(uncheckedIcon)) {\n        return uncheckedIcon;\n    }\n    const VectorIcon = iconType\n        ? getIconType(iconType)\n        : getIconType('font-awesome');\n    return (React.createElement(VectorIcon, { testID: \"RNE__Checkbox__Icon\", color: checked ? checkedColor : uncheckedColor, name: checked ? checkedIcon : uncheckedIcon, size: size || 24, style: { minWidth: size || 24 }, onLongPress: onLongIconPress, onPress: onIconPress }));\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAA2K;EAAA,IAAxKC,OAAwK,QAAxKA,OAAwK;EAAA,IAA/JC,WAA+J,QAA/JA,WAA+J;EAAA,IAAlJC,eAAkJ,QAAlJA,eAAkJ;EAAA,qBAAjIC,IAAiI;EAAA,IAAjIA,IAAiI,0BAA1H,EAA0H;EAAA,4BAAtHC,WAAsH;EAAA,IAAtHA,WAAsH,iCAAxG,gBAAwG;EAAA,8BAAtFC,aAAsF;EAAA,IAAtFA,aAAsF,mCAAtE,UAAsE;EAAA,IAA1DC,QAA0D,QAA1DA,QAA0D;EAAA,IAAhDC,YAAgD,QAAhDA,YAAgD;EAAA,+BAAlCC,cAAkC;EAAA,IAAlCA,cAAkC,oCAAjB,SAAiB;;EACnM,IAAIR,OAAO,IAAIH,KAAK,CAACY,cAAN,CAAqBL,WAArB,CAAf,EAAkD;IAC9C,OAAOA,WAAP;EACH;;EACD,IAAI,CAACJ,OAAD,IAAYH,KAAK,CAACY,cAAN,CAAqBJ,aAArB,CAAhB,EAAqD;IACjD,OAAOA,aAAP;EACH;;EACD,IAAMK,UAAU,GAAGJ,QAAQ,GACrBR,WAAW,CAACQ,QAAD,CADU,GAErBR,WAAW,CAAC,cAAD,CAFjB;EAGA,OAAQD,KAAK,CAACc,aAAN,CAAoBD,UAApB,EAAgC;IAAEE,MAAM,EAAE,qBAAV;IAAiCC,KAAK,EAAEb,OAAO,GAAGO,YAAH,GAAkBC,cAAjE;IAAiFM,IAAI,EAAEd,OAAO,GAAGI,WAAH,GAAiBC,aAA/G;IAA8HF,IAAI,EAAEA,IAAI,IAAI,EAA5I;IAAgJY,KAAK,EAAE;MAAEC,QAAQ,EAAEb,IAAI,IAAI;IAApB,CAAvJ;IAAiLc,WAAW,EAAEf,eAA9L;IAA+MgB,OAAO,EAAEjB;EAAxN,CAAhC,CAAR;AACH,CAXM"},"metadata":{},"sourceType":"module"}