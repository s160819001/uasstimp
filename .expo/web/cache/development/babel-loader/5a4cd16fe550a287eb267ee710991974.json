{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"allowTouchTrack\", \"animateTransitions\", \"animationConfig\", \"animationType\", \"containerStyle\", \"debugTouchArea\", \"disabled\", \"maximumTrackTintColor\", \"maximumValue\", \"minimumTrackTintColor\", \"minimumValue\", \"onSlidingComplete\", \"onSlidingStart\", \"onValueChange\", \"orientation\", \"step\", \"style\", \"thumbProps\", \"thumbStyle\", \"thumbTintColor\", \"thumbTouchSize\", \"trackStyle\", \"value\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Rect } from \"./components/Rect\";\nimport { SliderThumb } from \"./components/SliderThumb\";\nvar TRACK_SIZE = 4;\nvar THUMB_SIZE = 40;\nvar TRACK_STYLE = Platform.select({\n  web: 0,\n  default: -1\n});\nvar DEFAULT_ANIMATION_CONFIGS = {\n  spring: {\n    friction: 7,\n    tension: 100,\n    useNativeDriver: true\n  },\n  timing: {\n    duration: 150,\n    easing: Easing.inOut(Easing.ease),\n    delay: 0,\n    useNativeDriver: true\n  }\n};\n\nvar getBoundedValue = function getBoundedValue(value, maximumValue, minimumValue) {\n  return Math.max(Math.min(value, maximumValue), minimumValue);\n};\n\nvar handlePanResponderRequestEnd = function handlePanResponderRequestEnd() {\n  return false;\n};\n\nvar handleMoveShouldSetPanResponder = function handleMoveShouldSetPanResponder() {\n  return !TRACK_STYLE;\n};\n\nvar SizableVars;\n\n(function (SizableVars) {\n  SizableVars[\"containerSize\"] = \"containerSize\";\n  SizableVars[\"thumbSize\"] = \"thumbSize\";\n  SizableVars[\"trackSize\"] = \"trackSize\";\n})(SizableVars || (SizableVars = {}));\n\nvar EventTypes;\n\n(function (EventTypes) {\n  EventTypes[\"onSlidingStart\"] = \"onSlidingStart\";\n  EventTypes[\"onValueChange\"] = \"onValueChange\";\n  EventTypes[\"onSlidingComplete\"] = \"onSlidingComplete\";\n})(EventTypes || (EventTypes = {}));\n\nexport var Slider = function Slider(_ref) {\n  var _ref$allowTouchTrack = _ref.allowTouchTrack,\n      allowTouchTrack = _ref$allowTouchTrack === void 0 ? false : _ref$allowTouchTrack,\n      animateTransitions = _ref.animateTransitions,\n      animationConfig = _ref.animationConfig,\n      _ref$animationType = _ref.animationType,\n      animationType = _ref$animationType === void 0 ? 'timing' : _ref$animationType,\n      containerStyle = _ref.containerStyle,\n      _ref$debugTouchArea = _ref.debugTouchArea,\n      debugTouchArea = _ref$debugTouchArea === void 0 ? false : _ref$debugTouchArea,\n      disabled = _ref.disabled,\n      _ref$maximumTrackTint = _ref.maximumTrackTintColor,\n      maximumTrackTintColor = _ref$maximumTrackTint === void 0 ? '#b3b3b3' : _ref$maximumTrackTint,\n      _ref$maximumValue = _ref.maximumValue,\n      maximumValue = _ref$maximumValue === void 0 ? 1 : _ref$maximumValue,\n      _ref$minimumTrackTint = _ref.minimumTrackTintColor,\n      minimumTrackTintColor = _ref$minimumTrackTint === void 0 ? '#3f3f3f' : _ref$minimumTrackTint,\n      _ref$minimumValue = _ref.minimumValue,\n      minimumValue = _ref$minimumValue === void 0 ? 0 : _ref$minimumValue,\n      onSlidingComplete = _ref.onSlidingComplete,\n      onSlidingStart = _ref.onSlidingStart,\n      onValueChange = _ref.onValueChange,\n      _ref$orientation = _ref.orientation,\n      orientation = _ref$orientation === void 0 ? 'horizontal' : _ref$orientation,\n      _ref$step = _ref.step,\n      step = _ref$step === void 0 ? 0 : _ref$step,\n      style = _ref.style,\n      thumbProps = _ref.thumbProps,\n      thumbStyle = _ref.thumbStyle,\n      _ref$thumbTintColor = _ref.thumbTintColor,\n      thumbTintColor = _ref$thumbTintColor === void 0 ? 'red' : _ref$thumbTintColor,\n      _ref$thumbTouchSize = _ref.thumbTouchSize,\n      thumbTouchSize = _ref$thumbTouchSize === void 0 ? {\n    height: THUMB_SIZE,\n    width: THUMB_SIZE\n  } : _ref$thumbTouchSize,\n      trackStyle = _ref.trackStyle,\n      _ref$value = _ref.value,\n      _propValue = _ref$value === void 0 ? 0 : _ref$value,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  var propValue = getBoundedValue(_propValue, maximumValue, minimumValue);\n  var prevPropValue = useRef(propValue);\n  var animatedValue = useRef(new Animated.Value(propValue));\n\n  var _previousLeft = useRef(0);\n\n  var gestureStartPosition = useRef(0);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      allMeasured = _useState2[0],\n      setAllMeasured = _useState2[1];\n\n  var _useState3 = useState({\n    width: 0,\n    height: 0\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      containerSize = _useState4[0],\n      setContainerSize = _useState4[1];\n\n  var _useState5 = useState({\n    width: 0,\n    height: 0\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      trackSize = _useState6[0],\n      setTrackSize = _useState6[1];\n\n  var _useState7 = useState({\n    width: 0,\n    height: 0\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      thumbSize = _useState8[0],\n      setThumbSize = _useState8[1];\n\n  var isVertical = orientation === 'vertical';\n  var handleMeasure = useCallback(function (name, event) {\n    var _rect$width, _rect$height;\n\n    var varInfo = {\n      containerSize: {\n        size: containerSize,\n        setSize: setContainerSize\n      },\n      thumbSize: {\n        size: thumbSize,\n        setSize: setThumbSize\n      },\n      trackSize: {\n        size: trackSize,\n        setSize: setTrackSize\n      }\n    };\n    var _varInfo$name = varInfo[name],\n        size = _varInfo$name.size,\n        setSize = _varInfo$name.setSize;\n    var rect = event.nativeEvent.layout;\n    var rectWidth = (_rect$width = rect == null ? void 0 : rect.width) != null ? _rect$width : size.width;\n    var rectHeight = (_rect$height = rect == null ? void 0 : rect.height) != null ? _rect$height : size.height;\n    var newSize = {\n      height: isVertical ? rectWidth : rectHeight,\n      width: isVertical ? rectHeight : rectWidth\n    };\n    setSize(newSize);\n  }, [containerSize, isVertical, thumbSize, trackSize]);\n  useEffect(function () {\n    return setAllMeasured(!!(containerSize.height && containerSize.width && thumbSize.height && thumbSize.width && trackSize.height && trackSize.width));\n  }, [containerSize.height, containerSize.width, thumbSize.height, thumbSize.width, trackSize.height, trackSize.width]);\n  var measureContainer = useCallback(function (event) {\n    return handleMeasure(SizableVars.containerSize, event);\n  }, [handleMeasure]);\n  var measureTrack = useCallback(function (event) {\n    return handleMeasure(SizableVars.trackSize, event);\n  }, [handleMeasure]);\n  var measureThumb = useCallback(function (event) {\n    return handleMeasure(SizableVars.thumbSize, event);\n  }, [handleMeasure]);\n  var setCurrentValue = useCallback(function (v) {\n    return animatedValue.current.setValue(v);\n  }, [animatedValue]);\n  var setCurrentValueAnimated = useCallback(function (v) {\n    return Animated[animationType](animatedValue.current, _objectSpread(_objectSpread(_objectSpread({}, DEFAULT_ANIMATION_CONFIGS[animationType]), animationConfig), {}, {\n      toValue: v\n    })).start();\n  }, [animationConfig, animationType]);\n  useEffect(function () {\n    if (prevPropValue.current !== propValue) {\n      prevPropValue.current = propValue;\n\n      if (animateTransitions) {\n        setCurrentValueAnimated(propValue);\n      } else {\n        setCurrentValue(propValue);\n      }\n    }\n  }, [animateTransitions, maximumValue, minimumValue, setCurrentValue, setCurrentValueAnimated, propValue]);\n  var getValueForTouch = useCallback(function (location) {\n    var length = containerSize.width - thumbSize.width;\n    var ratio = location / length;\n    var newValue = ratio * (maximumValue - minimumValue);\n\n    if (step) {\n      newValue = Math.round(newValue / step) * step;\n    }\n\n    return getBoundedValue(newValue + minimumValue, maximumValue, minimumValue);\n  }, [containerSize.width, maximumValue, minimumValue, step, thumbSize.width]);\n  var getOnTouchValue = useCallback(function (_ref2) {\n    var nativeEvent = _ref2.nativeEvent;\n    var location = isVertical ? nativeEvent.locationY : nativeEvent.locationX;\n    return getValueForTouch(location);\n  }, [getValueForTouch, isVertical]);\n  var getThumbLeft = useCallback(function (v) {\n    var ratio = (v - minimumValue) / (maximumValue - minimumValue);\n    return ratio * (containerSize.width - thumbSize.width);\n  }, [containerSize.width, maximumValue, minimumValue, thumbSize.width]);\n  var getTouchOverflowSize = useCallback(function () {\n    return allMeasured ? {\n      height: Math.max(0, thumbTouchSize.height - containerSize.height),\n      width: Math.max(0, thumbTouchSize.width - thumbSize.width)\n    } : {\n      height: 0,\n      width: 0\n    };\n  }, [allMeasured, containerSize.height, thumbSize.width, thumbTouchSize.height, thumbTouchSize.width]);\n  var getCurrentValue = useCallback(function () {\n    return animatedValue.current.__getValue();\n  }, []);\n  var getThumbTouchRect = useCallback(function () {\n    var touchOverflowSize = getTouchOverflowSize();\n    var height = touchOverflowSize.height / 2 + (containerSize.height - thumbTouchSize.height) / 2;\n    var width = touchOverflowSize.width / 2 + getThumbLeft(getCurrentValue()) + (thumbSize.width - thumbTouchSize.width) / 2;\n    return isVertical ? new Rect(height, width, thumbTouchSize.width, thumbTouchSize.height) : new Rect(width, height, thumbTouchSize.width, thumbTouchSize.height);\n  }, [containerSize.height, getCurrentValue, getThumbLeft, getTouchOverflowSize, isVertical, thumbSize.width, thumbTouchSize.height, thumbTouchSize.width]);\n  var getValue = useCallback(function (gestureState) {\n    var delta = (isVertical ? gestureState.moveY : gestureState.moveX) - gestureStartPosition.current;\n    var location = _previousLeft.current + delta;\n    return getValueForTouch(location);\n  }, [getValueForTouch, isVertical]);\n  var fireChangeEvent = useCallback(function (event) {\n    var v = getCurrentValue();\n\n    if (event === EventTypes.onSlidingStart) {\n      onSlidingStart == null ? void 0 : onSlidingStart(v);\n    } else if (event === EventTypes.onSlidingComplete) {\n      onSlidingComplete == null ? void 0 : onSlidingComplete(v);\n    } else if (event === EventTypes.onValueChange) {\n      onValueChange == null ? void 0 : onValueChange(v);\n    }\n  }, [getCurrentValue, onSlidingComplete, onSlidingStart, onValueChange]);\n  var handlePanResponderGrant = useCallback(function (e, gestureState) {\n    _previousLeft.current = getThumbLeft(getCurrentValue());\n    gestureStartPosition.current = isVertical ? gestureState.y0 : gestureState.x0;\n    fireChangeEvent(EventTypes.onSlidingStart);\n  }, [fireChangeEvent, getCurrentValue, getThumbLeft, isVertical]);\n  var handlePanResponderMove = useCallback(function (_, gestureState) {\n    if (!disabled) {\n      setCurrentValue(getValue(gestureState));\n      fireChangeEvent(EventTypes.onValueChange);\n    }\n  }, [disabled, fireChangeEvent, getValue, setCurrentValue]);\n  var handlePanResponderEnd = useCallback(function () {\n    if (!disabled) {\n      fireChangeEvent(EventTypes.onSlidingComplete);\n    }\n  }, [disabled, fireChangeEvent]);\n  var thumbHitTest = useCallback(function (_ref3) {\n    var nativeEvent = _ref3.nativeEvent;\n    var thumbTouchRect = getThumbTouchRect();\n    return thumbTouchRect.containsPoint(nativeEvent.locationX, nativeEvent.locationY);\n  }, [getThumbTouchRect]);\n  var handleStartShouldSetPanResponder = useCallback(function (e) {\n    if (!allowTouchTrack) {\n      return thumbHitTest(e);\n    }\n\n    setCurrentValue(getOnTouchValue(e));\n    fireChangeEvent(EventTypes.onValueChange);\n    return true;\n  }, [allowTouchTrack, fireChangeEvent, getOnTouchValue, setCurrentValue, thumbHitTest]);\n  var getTouchOverflowStyle = useCallback(function () {\n    var _getTouchOverflowSize = getTouchOverflowSize(),\n        width = _getTouchOverflowSize.width,\n        height = _getTouchOverflowSize.height;\n\n    var touchOverflowStyle = {};\n    var verticalMargin = -height / 2;\n    touchOverflowStyle.marginTop = verticalMargin;\n    touchOverflowStyle.marginBottom = verticalMargin;\n    var horizontalMargin = -width / 2;\n    touchOverflowStyle.marginLeft = horizontalMargin;\n    touchOverflowStyle.marginRight = horizontalMargin;\n\n    if (debugTouchArea === true) {\n      touchOverflowStyle.backgroundColor = 'orange';\n      touchOverflowStyle.opacity = 0.5;\n    }\n\n    return touchOverflowStyle;\n  }, [debugTouchArea, getTouchOverflowSize]);\n  var renderDebugThumbTouchRect = useCallback(function (thumbLeft) {\n    var thumbTouchRect = getThumbTouchRect();\n    var positionStyle = {\n      left: thumbLeft,\n      top: thumbTouchRect.y,\n      width: thumbTouchRect.width,\n      height: thumbTouchRect.height\n    };\n    return React.createElement(Animated.View, {\n      style: positionStyle,\n      pointerEvents: \"none\"\n    });\n  }, [getThumbTouchRect]);\n  var getMinimumTrackStyles = useCallback(function (thumbStart) {\n    var minimumTrackStyle = {\n      position: 'absolute'\n    };\n\n    if (!allMeasured) {\n      minimumTrackStyle.height = 0;\n      minimumTrackStyle.width = 0;\n    } else if (isVertical) {\n      minimumTrackStyle.height = Animated.add(thumbStart, thumbSize.height / 2);\n      minimumTrackStyle.marginLeft = trackSize.width * TRACK_STYLE;\n    } else {\n      minimumTrackStyle.width = Animated.add(thumbStart, thumbSize.width / 2);\n      minimumTrackStyle.marginTop = trackSize.height * TRACK_STYLE;\n    }\n\n    return minimumTrackStyle;\n  }, [allMeasured, isVertical, thumbSize.height, thumbSize.width, trackSize.height, trackSize.width]);\n  var panResponder = useMemo(function () {\n    return PanResponder.create({\n      onStartShouldSetPanResponder: handleStartShouldSetPanResponder,\n      onMoveShouldSetPanResponder: handleMoveShouldSetPanResponder,\n      onPanResponderGrant: handlePanResponderGrant,\n      onPanResponderMove: handlePanResponderMove,\n      onPanResponderRelease: handlePanResponderEnd,\n      onPanResponderTerminationRequest: handlePanResponderRequestEnd,\n      onPanResponderTerminate: handlePanResponderEnd\n    });\n  }, [handleStartShouldSetPanResponder, handlePanResponderGrant, handlePanResponderMove, handlePanResponderEnd]);\n  var mainStyles = containerStyle != null ? containerStyle : styles;\n  var appliedTrackStyle = StyleSheet.flatten([styles.track, trackStyle]);\n  var thumbStart = animatedValue.current.interpolate({\n    inputRange: [minimumValue, maximumValue],\n    outputRange: [0, containerSize.width - thumbSize.width]\n  });\n\n  var minimumTrackStyle = _objectSpread(_objectSpread({}, getMinimumTrackStyles(thumbStart)), {}, {\n    backgroundColor: minimumTrackTintColor\n  });\n\n  var touchOverflowStyle = getTouchOverflowStyle();\n  return React.createElement(View, _objectSpread(_objectSpread({\n    testID: \"RNE__Slider_Container\"\n  }, other), {}, {\n    style: StyleSheet.flatten([isVertical ? mainStyles.containerVertical : mainStyles.containerHorizontal, style]),\n    onLayout: measureContainer,\n    accessibilityRole: \"adjustable\",\n    accessibilityValue: {\n      min: minimumValue,\n      max: maximumValue,\n      now: getCurrentValue()\n    }\n  }), React.createElement(View, {\n    testID: \"RNE__Slider_Track_maximum\",\n    style: StyleSheet.flatten([mainStyles.track, isVertical ? mainStyles.trackVertical : mainStyles.trackHorizontal, appliedTrackStyle, {\n      backgroundColor: maximumTrackTintColor\n    }]),\n    onLayout: measureTrack\n  }), React.createElement(Animated.View, {\n    testID: \"RNE__Slider_Track_minimum\",\n    style: StyleSheet.flatten([mainStyles.track, isVertical ? mainStyles.trackVertical : mainStyles.trackHorizontal, appliedTrackStyle, minimumTrackStyle])\n  }), React.createElement(SliderThumb, _objectSpread({\n    isVisible: allMeasured,\n    onLayout: measureThumb,\n    style: thumbStyle,\n    color: thumbTintColor,\n    start: thumbStart,\n    vertical: isVertical\n  }, thumbProps)), React.createElement(View, _objectSpread({\n    testID: \"RNE__Slider_TouchArea\",\n    style: StyleSheet.flatten([styles.touchArea, touchOverflowStyle])\n  }, panResponder.panHandlers), debugTouchArea === true && renderDebugThumbTouchRect(thumbStart)));\n};\nSlider.defaultProps = {\n  value: 0,\n  minimumValue: 0,\n  maximumValue: 1,\n  step: 0,\n  minimumTrackTintColor: '#3f3f3f',\n  maximumTrackTintColor: '#b3b3b3',\n  allowTouchTrack: false,\n  thumbTintColor: 'red',\n  thumbTouchSize: {\n    width: THUMB_SIZE,\n    height: THUMB_SIZE\n  },\n  debugTouchArea: false,\n  animationType: 'timing',\n  orientation: 'horizontal'\n};\nvar styles = StyleSheet.create({\n  containerHorizontal: {\n    height: 40,\n    justifyContent: 'center'\n  },\n  containerVertical: {\n    width: 40,\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  track: {\n    borderRadius: TRACK_SIZE / 2\n  },\n  trackHorizontal: {\n    height: TRACK_SIZE\n  },\n  trackVertical: {\n    flex: 1,\n    width: TRACK_SIZE\n  },\n  touchArea: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  debugThumbTouchArea: {\n    position: 'absolute',\n    backgroundColor: 'green',\n    opacity: 0.5\n  }\n});\nSlider.displayName = 'Slider';","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useRef","useState","Rect","SliderThumb","TRACK_SIZE","THUMB_SIZE","TRACK_STYLE","Platform","select","web","default","DEFAULT_ANIMATION_CONFIGS","spring","friction","tension","useNativeDriver","timing","duration","easing","Easing","inOut","ease","delay","getBoundedValue","value","maximumValue","minimumValue","Math","max","min","handlePanResponderRequestEnd","handleMoveShouldSetPanResponder","SizableVars","EventTypes","Slider","allowTouchTrack","animateTransitions","animationConfig","animationType","containerStyle","debugTouchArea","disabled","maximumTrackTintColor","minimumTrackTintColor","onSlidingComplete","onSlidingStart","onValueChange","orientation","step","style","thumbProps","thumbStyle","thumbTintColor","thumbTouchSize","height","width","trackStyle","_propValue","other","propValue","prevPropValue","animatedValue","Animated","Value","_previousLeft","gestureStartPosition","allMeasured","setAllMeasured","containerSize","setContainerSize","trackSize","setTrackSize","thumbSize","setThumbSize","isVertical","handleMeasure","name","event","varInfo","size","setSize","rect","nativeEvent","layout","rectWidth","rectHeight","newSize","measureContainer","measureTrack","measureThumb","setCurrentValue","v","current","setValue","setCurrentValueAnimated","toValue","start","getValueForTouch","location","length","ratio","newValue","round","getOnTouchValue","locationY","locationX","getThumbLeft","getTouchOverflowSize","getCurrentValue","__getValue","getThumbTouchRect","touchOverflowSize","getValue","gestureState","delta","moveY","moveX","fireChangeEvent","handlePanResponderGrant","e","y0","x0","handlePanResponderMove","_","handlePanResponderEnd","thumbHitTest","thumbTouchRect","containsPoint","handleStartShouldSetPanResponder","getTouchOverflowStyle","touchOverflowStyle","verticalMargin","marginTop","marginBottom","horizontalMargin","marginLeft","marginRight","backgroundColor","opacity","renderDebugThumbTouchRect","thumbLeft","positionStyle","left","top","y","createElement","View","pointerEvents","getMinimumTrackStyles","thumbStart","minimumTrackStyle","position","add","panResponder","PanResponder","create","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","onPanResponderGrant","onPanResponderMove","onPanResponderRelease","onPanResponderTerminationRequest","onPanResponderTerminate","mainStyles","styles","appliedTrackStyle","StyleSheet","flatten","track","interpolate","inputRange","outputRange","testID","containerVertical","containerHorizontal","onLayout","accessibilityRole","accessibilityValue","now","trackVertical","trackHorizontal","isVisible","color","vertical","touchArea","panHandlers","defaultProps","justifyContent","flexDirection","alignItems","borderRadius","flex","right","bottom","debugThumbTouchArea","displayName"],"sources":["/Users/davidkurniawan/Library/Mobile Documents/com~apple~CloudDocs/Documents/Semester 7/STMP/uts/fix/utsstimp/node_modules/@rneui/base/dist/Slider/Slider.js"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useRef, useState, } from 'react';\nimport { View, StyleSheet, Animated, Easing, PanResponder, Platform, } from 'react-native';\nimport { Rect } from './components/Rect';\nimport { SliderThumb } from './components/SliderThumb';\nconst TRACK_SIZE = 4;\nconst THUMB_SIZE = 40;\nconst TRACK_STYLE = Platform.select({ web: 0, default: -1 });\nconst DEFAULT_ANIMATION_CONFIGS = {\n    spring: {\n        friction: 7,\n        tension: 100,\n        useNativeDriver: true,\n    },\n    timing: {\n        duration: 150,\n        easing: Easing.inOut(Easing.ease),\n        delay: 0,\n        useNativeDriver: true,\n    },\n};\nconst getBoundedValue = (value, maximumValue, minimumValue) => Math.max(Math.min(value, maximumValue), minimumValue);\nconst handlePanResponderRequestEnd = () => false;\nconst handleMoveShouldSetPanResponder = () => !TRACK_STYLE;\nvar SizableVars;\n(function (SizableVars) {\n    SizableVars[\"containerSize\"] = \"containerSize\";\n    SizableVars[\"thumbSize\"] = \"thumbSize\";\n    SizableVars[\"trackSize\"] = \"trackSize\";\n})(SizableVars || (SizableVars = {}));\nvar EventTypes;\n(function (EventTypes) {\n    EventTypes[\"onSlidingStart\"] = \"onSlidingStart\";\n    EventTypes[\"onValueChange\"] = \"onValueChange\";\n    EventTypes[\"onSlidingComplete\"] = \"onSlidingComplete\";\n})(EventTypes || (EventTypes = {}));\nexport const Slider = ({ allowTouchTrack = false, animateTransitions, animationConfig, animationType = 'timing', containerStyle, debugTouchArea = false, disabled, maximumTrackTintColor = '#b3b3b3', maximumValue = 1, minimumTrackTintColor = '#3f3f3f', minimumValue = 0, onSlidingComplete, onSlidingStart, onValueChange, orientation = 'horizontal', step = 0, style, thumbProps, thumbStyle, thumbTintColor = 'red', thumbTouchSize = { height: THUMB_SIZE, width: THUMB_SIZE }, trackStyle, value: _propValue = 0, ...other }) => {\n    const propValue = getBoundedValue(_propValue, maximumValue, minimumValue);\n    const prevPropValue = useRef(propValue);\n    const animatedValue = useRef(new Animated.Value(propValue));\n    const _previousLeft = useRef(0);\n    const gestureStartPosition = useRef(0);\n    const [allMeasured, setAllMeasured] = useState(false);\n    const [containerSize, setContainerSize] = useState({\n        width: 0,\n        height: 0,\n    });\n    const [trackSize, setTrackSize] = useState({ width: 0, height: 0 });\n    const [thumbSize, setThumbSize] = useState({ width: 0, height: 0 });\n    const isVertical = orientation === 'vertical';\n    const handleMeasure = useCallback((name, event) => {\n        const varInfo = {\n            containerSize: { size: containerSize, setSize: setContainerSize },\n            thumbSize: { size: thumbSize, setSize: setThumbSize },\n            trackSize: { size: trackSize, setSize: setTrackSize },\n        };\n        const { size, setSize } = varInfo[name];\n        const rect = event.nativeEvent.layout;\n        const rectWidth = rect?.width ?? size.width;\n        const rectHeight = rect?.height ?? size.height;\n        const newSize = {\n            height: isVertical ? rectWidth : rectHeight,\n            width: isVertical ? rectHeight : rectWidth,\n        };\n        setSize(newSize);\n    }, [containerSize, isVertical, thumbSize, trackSize]);\n    useEffect(() => setAllMeasured(!!(containerSize.height &&\n        containerSize.width &&\n        thumbSize.height &&\n        thumbSize.width &&\n        trackSize.height &&\n        trackSize.width)), [\n        containerSize.height,\n        containerSize.width,\n        thumbSize.height,\n        thumbSize.width,\n        trackSize.height,\n        trackSize.width,\n    ]);\n    const measureContainer = useCallback((event) => handleMeasure(SizableVars.containerSize, event), [handleMeasure]);\n    const measureTrack = useCallback((event) => handleMeasure(SizableVars.trackSize, event), [handleMeasure]);\n    const measureThumb = useCallback((event) => handleMeasure(SizableVars.thumbSize, event), [handleMeasure]);\n    const setCurrentValue = useCallback((v) => animatedValue.current.setValue(v), [animatedValue]);\n    const setCurrentValueAnimated = useCallback((v) => Animated[animationType](animatedValue.current, {\n        ...DEFAULT_ANIMATION_CONFIGS[animationType],\n        ...animationConfig,\n        toValue: v,\n    }).start(), [animationConfig, animationType]);\n    useEffect(() => {\n        if (prevPropValue.current !== propValue) {\n            prevPropValue.current = propValue;\n            if (animateTransitions) {\n                setCurrentValueAnimated(propValue);\n            }\n            else {\n                setCurrentValue(propValue);\n            }\n        }\n    }, [\n        animateTransitions,\n        maximumValue,\n        minimumValue,\n        setCurrentValue,\n        setCurrentValueAnimated,\n        propValue,\n    ]);\n    const getValueForTouch = useCallback((location) => {\n        const length = containerSize.width - thumbSize.width;\n        const ratio = location / length;\n        let newValue = ratio * (maximumValue - minimumValue);\n        if (step) {\n            newValue = Math.round(newValue / step) * step;\n        }\n        return getBoundedValue(newValue + minimumValue, maximumValue, minimumValue);\n    }, [containerSize.width, maximumValue, minimumValue, step, thumbSize.width]);\n    const getOnTouchValue = useCallback(({ nativeEvent }) => {\n        const location = isVertical\n            ? nativeEvent.locationY\n            : nativeEvent.locationX;\n        return getValueForTouch(location);\n    }, [getValueForTouch, isVertical]);\n    const getThumbLeft = useCallback((v) => {\n        const ratio = (v - minimumValue) / (maximumValue - minimumValue);\n        return ratio * (containerSize.width - thumbSize.width);\n    }, [containerSize.width, maximumValue, minimumValue, thumbSize.width]);\n    const getTouchOverflowSize = useCallback(() => allMeasured\n        ? {\n            height: Math.max(0, thumbTouchSize.height - containerSize.height),\n            width: Math.max(0, thumbTouchSize.width - thumbSize.width),\n        }\n        : { height: 0, width: 0 }, [\n        allMeasured,\n        containerSize.height,\n        thumbSize.width,\n        thumbTouchSize.height,\n        thumbTouchSize.width,\n    ]);\n    const getCurrentValue = useCallback(() => animatedValue.current.__getValue(), []);\n    const getThumbTouchRect = useCallback(() => {\n        const touchOverflowSize = getTouchOverflowSize();\n        const height = touchOverflowSize.height / 2 +\n            (containerSize.height - thumbTouchSize.height) / 2;\n        const width = touchOverflowSize.width / 2 +\n            getThumbLeft(getCurrentValue()) +\n            (thumbSize.width - thumbTouchSize.width) / 2;\n        return isVertical\n            ? new Rect(height, width, thumbTouchSize.width, thumbTouchSize.height)\n            : new Rect(width, height, thumbTouchSize.width, thumbTouchSize.height);\n    }, [\n        containerSize.height,\n        getCurrentValue,\n        getThumbLeft,\n        getTouchOverflowSize,\n        isVertical,\n        thumbSize.width,\n        thumbTouchSize.height,\n        thumbTouchSize.width,\n    ]);\n    const getValue = useCallback((gestureState) => {\n        const delta = (isVertical ? gestureState.moveY : gestureState.moveX) -\n            gestureStartPosition.current;\n        const location = _previousLeft.current + delta;\n        return getValueForTouch(location);\n    }, [getValueForTouch, isVertical]);\n    const fireChangeEvent = useCallback((event) => {\n        const v = getCurrentValue();\n        if (event === EventTypes.onSlidingStart) {\n            onSlidingStart?.(v);\n        }\n        else if (event === EventTypes.onSlidingComplete) {\n            onSlidingComplete?.(v);\n        }\n        else if (event === EventTypes.onValueChange) {\n            onValueChange?.(v);\n        }\n    }, [getCurrentValue, onSlidingComplete, onSlidingStart, onValueChange]);\n    const handlePanResponderGrant = useCallback((e, gestureState) => {\n        _previousLeft.current = getThumbLeft(getCurrentValue());\n        gestureStartPosition.current = isVertical\n            ? gestureState.y0\n            : gestureState.x0;\n        fireChangeEvent(EventTypes.onSlidingStart);\n    }, [fireChangeEvent, getCurrentValue, getThumbLeft, isVertical]);\n    const handlePanResponderMove = useCallback((_, gestureState) => {\n        if (!disabled) {\n            setCurrentValue(getValue(gestureState));\n            fireChangeEvent(EventTypes.onValueChange);\n        }\n    }, [disabled, fireChangeEvent, getValue, setCurrentValue]);\n    const handlePanResponderEnd = useCallback(() => {\n        if (!disabled) {\n            fireChangeEvent(EventTypes.onSlidingComplete);\n        }\n    }, [disabled, fireChangeEvent]);\n    const thumbHitTest = useCallback(({ nativeEvent }) => {\n        const thumbTouchRect = getThumbTouchRect();\n        return thumbTouchRect.containsPoint(nativeEvent.locationX, nativeEvent.locationY);\n    }, [getThumbTouchRect]);\n    const handleStartShouldSetPanResponder = useCallback((e) => {\n        if (!allowTouchTrack) {\n            return thumbHitTest(e);\n        }\n        setCurrentValue(getOnTouchValue(e));\n        fireChangeEvent(EventTypes.onValueChange);\n        return true;\n    }, [\n        allowTouchTrack,\n        fireChangeEvent,\n        getOnTouchValue,\n        setCurrentValue,\n        thumbHitTest,\n    ]);\n    const getTouchOverflowStyle = useCallback(() => {\n        const { width, height } = getTouchOverflowSize();\n        const touchOverflowStyle = {};\n        const verticalMargin = -height / 2;\n        touchOverflowStyle.marginTop = verticalMargin;\n        touchOverflowStyle.marginBottom = verticalMargin;\n        const horizontalMargin = -width / 2;\n        touchOverflowStyle.marginLeft = horizontalMargin;\n        touchOverflowStyle.marginRight = horizontalMargin;\n        if (debugTouchArea === true) {\n            touchOverflowStyle.backgroundColor = 'orange';\n            touchOverflowStyle.opacity = 0.5;\n        }\n        return touchOverflowStyle;\n    }, [debugTouchArea, getTouchOverflowSize]);\n    const renderDebugThumbTouchRect = useCallback((thumbLeft) => {\n        const thumbTouchRect = getThumbTouchRect();\n        const positionStyle = {\n            left: thumbLeft,\n            top: thumbTouchRect.y,\n            width: thumbTouchRect.width,\n            height: thumbTouchRect.height,\n        };\n        return React.createElement(Animated.View, { style: positionStyle, pointerEvents: \"none\" });\n    }, [getThumbTouchRect]);\n    const getMinimumTrackStyles = useCallback((thumbStart) => {\n        const minimumTrackStyle = {\n            position: 'absolute',\n        };\n        if (!allMeasured) {\n            minimumTrackStyle.height = 0;\n            minimumTrackStyle.width = 0;\n        }\n        else if (isVertical) {\n            minimumTrackStyle.height = Animated.add(thumbStart, thumbSize.height / 2);\n            minimumTrackStyle.marginLeft = trackSize.width * TRACK_STYLE;\n        }\n        else {\n            minimumTrackStyle.width = Animated.add(thumbStart, thumbSize.width / 2);\n            minimumTrackStyle.marginTop = trackSize.height * TRACK_STYLE;\n        }\n        return minimumTrackStyle;\n    }, [\n        allMeasured,\n        isVertical,\n        thumbSize.height,\n        thumbSize.width,\n        trackSize.height,\n        trackSize.width,\n    ]);\n    const panResponder = useMemo(() => PanResponder.create({\n        onStartShouldSetPanResponder: handleStartShouldSetPanResponder,\n        onMoveShouldSetPanResponder: handleMoveShouldSetPanResponder,\n        onPanResponderGrant: handlePanResponderGrant,\n        onPanResponderMove: handlePanResponderMove,\n        onPanResponderRelease: handlePanResponderEnd,\n        onPanResponderTerminationRequest: handlePanResponderRequestEnd,\n        onPanResponderTerminate: handlePanResponderEnd,\n    }), [\n        handleStartShouldSetPanResponder,\n        handlePanResponderGrant,\n        handlePanResponderMove,\n        handlePanResponderEnd,\n    ]);\n    const mainStyles = containerStyle ?? styles;\n    const appliedTrackStyle = StyleSheet.flatten([styles.track, trackStyle]);\n    const thumbStart = animatedValue.current.interpolate({\n        inputRange: [minimumValue, maximumValue],\n        outputRange: [0, containerSize.width - thumbSize.width],\n    });\n    const minimumTrackStyle = {\n        ...getMinimumTrackStyles(thumbStart),\n        backgroundColor: minimumTrackTintColor,\n    };\n    const touchOverflowStyle = getTouchOverflowStyle();\n    return (React.createElement(View, { testID: \"RNE__Slider_Container\", ...other, style: StyleSheet.flatten([\n            isVertical\n                ? mainStyles.containerVertical\n                : mainStyles.containerHorizontal,\n            style,\n        ]), onLayout: measureContainer, accessibilityRole: \"adjustable\", accessibilityValue: {\n            min: minimumValue,\n            max: maximumValue,\n            now: getCurrentValue(),\n        } },\n        React.createElement(View, { testID: \"RNE__Slider_Track_maximum\", style: StyleSheet.flatten([\n                mainStyles.track,\n                isVertical ? mainStyles.trackVertical : mainStyles.trackHorizontal,\n                appliedTrackStyle,\n                { backgroundColor: maximumTrackTintColor },\n            ]), onLayout: measureTrack }),\n        React.createElement(Animated.View, { testID: \"RNE__Slider_Track_minimum\", style: StyleSheet.flatten([\n                mainStyles.track,\n                isVertical ? mainStyles.trackVertical : mainStyles.trackHorizontal,\n                appliedTrackStyle,\n                minimumTrackStyle,\n            ]) }),\n        React.createElement(SliderThumb, { isVisible: allMeasured, onLayout: measureThumb, style: thumbStyle, color: thumbTintColor, start: thumbStart, vertical: isVertical, ...thumbProps }),\n        React.createElement(View, { testID: \"RNE__Slider_TouchArea\", style: StyleSheet.flatten([styles.touchArea, touchOverflowStyle]), ...panResponder.panHandlers }, debugTouchArea === true && renderDebugThumbTouchRect(thumbStart))));\n};\nSlider.defaultProps = {\n    value: 0,\n    minimumValue: 0,\n    maximumValue: 1,\n    step: 0,\n    minimumTrackTintColor: '#3f3f3f',\n    maximumTrackTintColor: '#b3b3b3',\n    allowTouchTrack: false,\n    thumbTintColor: 'red',\n    thumbTouchSize: { width: THUMB_SIZE, height: THUMB_SIZE },\n    debugTouchArea: false,\n    animationType: 'timing',\n    orientation: 'horizontal',\n};\nconst styles = StyleSheet.create({\n    containerHorizontal: {\n        height: 40,\n        justifyContent: 'center',\n    },\n    containerVertical: {\n        width: 40,\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    track: {\n        borderRadius: TRACK_SIZE / 2,\n    },\n    trackHorizontal: {\n        height: TRACK_SIZE,\n    },\n    trackVertical: {\n        flex: 1,\n        width: TRACK_SIZE,\n    },\n    touchArea: {\n        position: 'absolute',\n        backgroundColor: 'transparent',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n    },\n    debugThumbTouchArea: {\n        position: 'absolute',\n        backgroundColor: 'green',\n        opacity: 0.5,\n    },\n});\nSlider.displayName = 'Slider';\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}