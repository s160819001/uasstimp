{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { Text, Button, Card, Icon, Image, Dialog, ButtonGroup } from '@rneui/base';\nimport React, { Component, useEffect } from \"react\";\nimport style from \"../assets/style\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { FAB } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { FlatList } from \"react-native-gesture-handler\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Home = function (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  var _super = _createSuper(Home);\n\n  function Home() {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _super.call(this);\n\n    _this.like = function (ori, meme_id) {\n      var method = \"\";\n\n      if (ori == \"heart\") {\n        method = \"remove\";\n      } else if (ori == \"heart-outline\") method = \"insert\";\n\n      console.log(method);\n      var options = {\n        method: 'POST',\n        headers: new Headers({\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }),\n        body: \"meme=\" + meme_id + \"&\" + \"user=\" + global.activeuser + \"&\" + \"method=\" + method\n      };\n\n      try {\n        fetch('https://ubaya.fun/react/160819001/likes.php', options).then(function (response) {\n          return response.json();\n        }).then(function (resjson) {\n          console.log(resjson);\n\n          if (resjson.result == \"success\") {\n            _this.fetchData();\n          }\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    _this.state = {\n      tes: \"Menunggu API\",\n      refreshing: false,\n      is_fetch: false,\n      data: [],\n      datalike: [],\n      datacomment: [],\n      dataview: [],\n      selectedIndex: 0\n    };\n\n    _this.fetchData();\n\n    _this.fetchDataComment();\n\n    _this.fetchDataLike();\n\n    _this.fetchDataView();\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"viewAdd\",\n    value: function viewAdd(banyak, idmeme) {\n      var _this2 = this;\n\n      var options = {\n        method: 'POST',\n        headers: new Headers({\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }),\n        body: \"view=\" + (banyak + 1) + \"&\" + \"meme_id=\" + idmeme\n      };\n\n      try {\n        fetch('https://ubaya.fun/react/160819001/addview.php', options).then(function (response) {\n          return response.json();\n        }).then(function (resjson) {\n          console.log(resjson);\n\n          if (resjson.result == \"success\") {\n            _this2.fetchData();\n          }\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, {\n    key: \"setSelectedIndex\",\n    value: function setSelectedIndex(value) {\n      this.setState({\n        selectedIndex: value\n      });\n      console.log(this.state.selectedIndex);\n    }\n  }, {\n    key: \"fetchData\",\n    value: function fetchData() {\n      var _this3 = this;\n\n      var options = {\n        method: 'POST',\n        headers: new Headers({\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }),\n        body: \"user=\" + global.activeuser\n      };\n\n      try {\n        fetch('https://ubaya.fun/react/160819001/get_memes.php', options).then(function (response) {\n          return response.json();\n        }).then(function (resjson) {\n          _this3.setState(_this3.state = {\n            tes: resjson.result,\n            data: resjson.data,\n            is_fetch: true\n          });\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, {\n    key: \"fetchDataLike\",\n    value: function fetchDataLike() {\n      var _this4 = this;\n\n      var options = {\n        method: 'POST',\n        headers: new Headers({\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }),\n        body: \"user=\" + global.activeuser\n      };\n\n      try {\n        fetch('https://ubaya.fun/react/160819001/get_memes_like.php', options).then(function (response) {\n          return response.json();\n        }).then(function (resjson) {\n          _this4.setState(_this4.state = {\n            tes: resjson.result,\n            datalike: resjson.data,\n            is_fetch: true\n          });\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, {\n    key: \"fetchDataComment\",\n    value: function fetchDataComment() {\n      var _this5 = this;\n\n      var options = {\n        method: 'POST',\n        headers: new Headers({\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }),\n        body: \"user=\" + global.activeuser\n      };\n\n      try {\n        fetch('https://ubaya.fun/react/160819001/get_memes_comment.php', options).then(function (response) {\n          return response.json();\n        }).then(function (resjson) {\n          _this5.setState(_this5.state = {\n            tes: resjson.result,\n            datacomment: resjson.data,\n            is_fetch: true\n          });\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, {\n    key: \"fetchDataView\",\n    value: function fetchDataView() {\n      var _this6 = this;\n\n      var options = {\n        method: 'POST',\n        headers: new Headers({\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }),\n        body: \"user=\" + global.activeuser\n      };\n\n      try {\n        fetch('https://ubaya.fun/react/160819001/get_memes_view.php', options).then(function (response) {\n          return response.json();\n        }).then(function (resjson) {\n          _this6.setState(_this6.state = {\n            tes: resjson.result,\n            dataview: resjson.data,\n            is_fetch: true\n          });\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, {\n    key: \"showdata\",\n    value: function showdata(data) {\n      var _this7 = this;\n\n      return _jsx(FlatList, {\n        data: data,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _jsx(View, {\n            children: _jsxs(Card, {\n              containerStyle: style.card,\n              children: [_jsxs(View, {\n                style: {\n                  position: 'relative'\n                },\n                children: [_jsx(Text, {\n                  style: style.text_atas,\n                  children: item.teksatas\n                }), _jsx(Image, {\n                  containerStyle: {\n                    aspectRatio: 1\n                  },\n                  source: {\n                    uri: item.url\n                  }\n                }), _jsx(Text, {\n                  style: style.text_bawah,\n                  children: item.teksbawah\n                })]\n              }), _jsxs(View, {\n                style: {\n                  marginTop: 5,\n                  position: 'relative',\n                  flexDirection: 'row'\n                },\n                children: [_jsx(Button, {\n                  icon: _jsx(Ionicons, {\n                    name: item.like,\n                    size: 30,\n                    color: \"white\"\n                  }),\n                  buttonStyle: {\n                    backgroundColor: 'rgba(0,0,0,0)'\n                  },\n                  onPress: function onPress() {\n                    return _this7.like(item.like, item.id);\n                  }\n                }), _jsxs(Text, {\n                  style: {\n                    alignSelf: 'center',\n                    fontSize: 16,\n                    color: '#fff'\n                  },\n                  children: [item.numoflike, \" likes\"]\n                }), _jsx(Ionicons, {\n                  name: \"eye\",\n                  size: 35,\n                  color: \"white\",\n                  style: {\n                    alignSelf: 'center',\n                    marginLeft: 20\n                  }\n                }), _jsxs(Text, {\n                  style: {\n                    alignSelf: 'center',\n                    fontSize: 18,\n                    color: '#fff'\n                  },\n                  children: [\" \", item.view]\n                }), _jsx(Button, {\n                  icon: _jsx(Ionicons, {\n                    name: \"chatbubble-ellipses\",\n                    size: 30,\n                    color: \"white\"\n                  }),\n                  buttonStyle: {\n                    backgroundColor: 'rgba(0,0,0,0)'\n                  },\n                  containerStyle: {\n                    position: 'absolute',\n                    right: 0\n                  },\n                  onPress: function onPress() {\n                    _this7.viewAdd(item.view, item.id);\n\n                    var navigation = _this7.props.navigation;\n                    navigation.navigate(\"Meme Detail\", {\n                      idmeme: item.id\n                    });\n                  }\n                })]\n              })]\n            })\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n\n      if (!this.state.is_fetch) {\n        this.fetchData();\n        this.fetchDataLike();\n        this.fetchDataComment();\n        this.fetchDataView();\n        return _jsx(Dialog, {\n          children: _jsx(Dialog.Loading, {})\n        });\n      } else {\n        return _jsxs(View, {\n          style: style.container,\n          children: [_jsxs(View, {\n            children: [_jsx(Icon, {\n              name: \"time\",\n              type: \"ionicon\",\n              color: \"#fff\",\n              onPress: this.showdata(this.state.data)\n            }), \",\", _jsx(Icon, {\n              name: \"heart\",\n              type: \"ionicon\",\n              color: \"#fff\",\n              onPress: this.showdata(this.state.datalike)\n            }), \",\", _jsx(Icon, {\n              name: \"chatbubble-ellipses\",\n              type: \"ionicon\",\n              color: \"#fff\"\n            }), \",\", _jsx(Icon, {\n              name: \"eye\",\n              type: \"ionicon\",\n              color: \"#fff\"\n            }), _jsx(ButtonGroup, {\n              buttons: [_jsx(Icon, {\n                name: \"time\",\n                type: \"ionicon\",\n                color: \"#fff\",\n                onPress: this.showdata(this.state.data)\n              }), _jsx(Icon, {\n                name: \"heart\",\n                type: \"ionicon\",\n                color: \"#fff\",\n                onPress: this.showdata(this.state.datalike)\n              }), _jsx(Icon, {\n                name: \"chatbubble-ellipses\",\n                type: \"ionicon\",\n                color: \"#fff\"\n              }), _jsx(Icon, {\n                name: \"eye\",\n                type: \"ionicon\",\n                color: \"#fff\"\n              })],\n              selectedIndex: this.state.selectedIndex,\n              onPress: function onPress(value) {\n                _this8.setSelectedIndex(value);\n              },\n              containerStyle: {\n                borderRadius: 10\n              },\n              buttonStyle: {\n                backgroundColor: '#a1346f'\n              },\n              selectedButtonStyle: {\n                backgroundColor: '#917f54'\n              }\n            })]\n          }), _jsx(ScrollView, {\n            style: style.container,\n            contentContainerStyle: {\n              paddingBottom: 85\n            },\n            refreshControl: _jsx(RefreshControl, {\n              refreshing: this.state.refreshing,\n              onRefresh: function onRefresh() {\n                var options = {\n                  method: 'POST',\n                  headers: new Headers({\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                  }),\n                  body: \"user=\" + global.activeuser\n                };\n\n                try {\n                  _this8.setState({\n                    refreshing: true\n                  });\n\n                  fetch('https://ubaya.fun/react/160819001/get_memes.php', options).then(function (response) {\n                    return response.json();\n                  }).then(function (resjson) {\n                    _this8.setState(_this8.state = {\n                      tes: resjson.result,\n                      data: resjson.data,\n                      is_fetch: true,\n                      refreshing: false\n                    });\n                  });\n                } catch (error) {\n                  console.log(error);\n                }\n              }\n            }),\n            children: this.showdata(this.state.data)\n          }), _jsx(FAB, {\n            icon: \"plus\",\n            style: style.fab,\n            mode: \"elevated\",\n            onPress: function onPress() {\n              var navigation = _this8.props.navigation;\n              navigation.navigate(\"Create Your Meme\");\n            }\n          })]\n        });\n      }\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nexport default function (props) {\n  var navigation = useNavigation();\n  return _jsx(Home, _objectSpread(_objectSpread({}, props), {}, {\n    navigation: navigation\n  }));\n}\n;","map":{"version":3,"names":["Text","Button","Card","Icon","Image","Dialog","ButtonGroup","React","Component","useEffect","style","Ionicons","FAB","useNavigation","FlatList","Home","like","ori","meme_id","method","console","log","options","headers","Headers","body","global","activeuser","fetch","then","response","json","resjson","result","fetchData","error","state","tes","refreshing","is_fetch","data","datalike","datacomment","dataview","selectedIndex","fetchDataComment","fetchDataLike","fetchDataView","banyak","idmeme","value","setState","item","id","toString","card","position","text_atas","teksatas","aspectRatio","uri","url","text_bawah","teksbawah","marginTop","flexDirection","backgroundColor","alignSelf","fontSize","color","numoflike","marginLeft","view","right","viewAdd","navigation","props","navigate","container","showdata","setSelectedIndex","borderRadius","paddingBottom","fab"],"sources":["C:/Users/CHRIS/Documents/Kuliah/Semester7/STIMP/UAS/ZIP/uasstimp-master/screens/home.js"],"sourcesContent":["import { View, ScrollView, RefreshControl } from \"react-native\";\nimport { Text, Button, Card, Icon, Image, Dialog, ButtonGroup } from '@rneui/base';\nimport React, { Component, useEffect } from \"react\";\nimport style from \"../assets/style\";\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport { FAB } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { FlatList } from \"react-native-gesture-handler\";\n\nclass Home extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            tes: \"Menunggu API\",\n            refreshing: false,\n            is_fetch: false,\n            data: [],\n            datalike:[],\n            datacomment:[],\n            dataview:[],\n            selectedIndex: 0,\n        }\n        this.fetchData();\n        this.fetchDataComment();\n        this.fetchDataLike();\n        this.fetchDataView();\n    }\n\n    like = (ori, meme_id) => {\n        var method = \"\"\n        if (ori == \"heart\") {\n            method = \"remove\"\n        } else if (ori == \"heart-outline\")\n            method = \"insert\"\n        console.log(method)\n        const options = {\n            method: 'POST',\n            headers: new Headers({\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }),\n            body: \"meme=\" + meme_id + \"&\" + \"user=\" + global.activeuser + \"&\" + \"method=\" + method\n        };\n        try {\n            // this.setState({refreshing:true});\n            fetch('https://ubaya.fun/react/160819001/likes.php', options)\n                .then(response => response.json())\n                .then(resjson => {\n                    console.log(resjson)\n                    if (resjson.result == \"success\") {\n                        this.fetchData();\n                    }\n                    // this.setState(\n                    //     this.state = {\n                    //         tes: resjson.result,\n                    //         //   tes:resjson.data[0].url,\n                    //         data: resjson.data,\n                    //         is_fetch: true,\n                    //     })\n                })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    viewAdd(banyak,idmeme) {\n        const options = {\n            method: 'POST',\n            headers: new Headers({\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }),\n            body: \"view=\" + (banyak+1) + \"&\" +\"meme_id=\" + idmeme\n        };\n        try {\n            // this.setState({refreshing:true});\n            fetch('https://ubaya.fun/react/160819001/addview.php', options)\n                .then(response => response.json())\n                .then(resjson => {\n                    console.log(resjson)\n                    if (resjson.result == \"success\") {\n                        this.fetchData();\n                    }\n                    // this.setState(\n                    //     this.state = {\n                    //         tes: resjson.result,\n                    //         //   tes:resjson.data[0].url,\n                    //         data: resjson.data,\n                    //         is_fetch: true,\n                    //     })\n                })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    setSelectedIndex(value) {\n        this.setState({ selectedIndex: value })\n        console.log(this.state.selectedIndex)\n    }\n\n    fetchData() {\n        const options = {\n            method: 'POST',\n            headers: new Headers({\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }),\n            body: \"user=\" + global.activeuser\n        };\n        try {\n            // this.setState({refreshing:true});\n            fetch('https://ubaya.fun/react/160819001/get_memes.php', options)\n                .then(response => response.json())\n                .then(resjson => {\n                    this.setState(\n                        this.state = {\n                            tes: resjson.result,\n                            //   tes:resjson.data[0].url,\n                            data: resjson.data,\n                            is_fetch: true,\n                        })\n                })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    fetchDataLike() {\n        const options = {\n            method: 'POST',\n            headers: new Headers({\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }),\n            body: \"user=\" + global.activeuser\n        };\n        try {\n            // this.setState({refreshing:true});\n            fetch('https://ubaya.fun/react/160819001/get_memes_like.php', options)\n                .then(response => response.json())\n                .then(resjson => {\n                    this.setState(\n                        this.state = {\n                            tes: resjson.result,\n                            //   tes:resjson.data[0].url,\n                            datalike: resjson.data,\n                            is_fetch: true,\n                        })\n                })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    fetchDataComment() {\n        const options = {\n            method: 'POST',\n            headers: new Headers({\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }),\n            body: \"user=\" + global.activeuser\n        };\n        try {\n            // this.setState({refreshing:true});\n            fetch('https://ubaya.fun/react/160819001/get_memes_comment.php', options)\n                .then(response => response.json())\n                .then(resjson => {\n                    this.setState(\n                        this.state = {\n                            tes: resjson.result,\n                            //   tes:resjson.data[0].url,\n                            datacomment: resjson.data,\n                            is_fetch: true,\n                        })\n                })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    fetchDataView() {\n        const options = {\n            method: 'POST',\n            headers: new Headers({\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }),\n            body: \"user=\" + global.activeuser\n        };\n        try {\n            // this.setState({refreshing:true});\n            fetch('https://ubaya.fun/react/160819001/get_memes_view.php', options)\n                .then(response => response.json())\n                .then(resjson => {\n                    this.setState(\n                        this.state = {\n                            tes: resjson.result,\n                            //   tes:resjson.data[0].url,\n                            dataview: resjson.data,\n                            is_fetch: true,\n                        })\n                })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    showdata(data) {\n        return <FlatList\n            data={data}\n            keyExtractor={(item) => item.id.toString()}\n            renderItem={({ item }) => (\n                <View>\n                    <Card containerStyle={style.card}>\n                        <View style={{\n                            position: 'relative'\n                        }}>\n                            <Text style={style.text_atas}>{item.teksatas}</Text>\n                            <Image\n                                containerStyle={{\n                                    aspectRatio: 1,\n                                }}\n                                source={{\n                                    uri:\n                                        item.url,\n                                }}\n                            />\n                            <Text style={style.text_bawah}>{item.teksbawah}</Text>\n                        </View>\n                        <View style={{\n                            marginTop: 5,\n                            position: 'relative',\n                            flexDirection: 'row'\n                        }}>\n\n                            <Button\n                                icon={\n                                    <Ionicons\n                                        name={item.like}\n                                        size={30}\n                                        color=\"white\"\n                                    />\n                                }\n                                buttonStyle={{\n                                    backgroundColor: 'rgba(0,0,0,0)',\n                                }}\n                                onPress={() => this.like(item.like, item.id)}\n                            />\n                            <Text style={{\n                                alignSelf: 'center',\n                                fontSize: 16,\n                                color: '#fff'\n                            }}>{item.numoflike} likes</Text>\n                            <Ionicons\n                                name=\"eye\"\n                                size={35}\n                                color=\"white\"\n                                style={{ alignSelf: 'center', marginLeft: 20 }}\n                            />\n                            <Text style={{\n                                alignSelf: 'center',\n                                fontSize: 18,\n                                color: '#fff'\n                            }}> {item.view}</Text>\n                            {/* <Text style={{\n                                alignSelf: 'center',\n                                fontSize: 16,\n                                color: '#fff',\n                                backgroundColor:'red'\n                            }}>&nbsp;&nbsp;&nbsp;<Icon\n                                    name='eye'\n                                    type='ionicon'\n                                    color='#fff'\n                                    size={30} />20</Text> */}\n                            <Button\n                                icon={\n                                    <Ionicons\n                                        name=\"chatbubble-ellipses\"\n                                        size={30}\n                                        color=\"white\"\n                                    />\n                                }\n                                buttonStyle={{\n                                    backgroundColor: 'rgba(0,0,0,0)'\n                                }}\n                                containerStyle={{\n                                    position: 'absolute',\n                                    right: 0\n                                }}\n                                onPress={() => {\n                                    this.viewAdd(item.view,item.id)\n                                    const { navigation } = this.props;\n                                    navigation.navigate(\"Meme Detail\", { idmeme: item.id })\n                                }}\n                                \n                            />\n                        </View>\n                    </Card>\n\n                </View>\n            )}\n        />\n    }\n    render() {\n        if (!this.state.is_fetch) {\n            this.fetchData();\n            this.fetchDataLike();\n            this.fetchDataComment();\n            this.fetchDataView();\n            // return <Text>{this.state.tes}</Text>\n            return <Dialog><Dialog.Loading /></Dialog>\n        } else {\n            return <View style={style.container}>\n                <View>\n                    {/* <Text style={{ textAlign: 'center', marginTop:5, fontSize:11 }}>Sort By</Text> */}\n                    <Icon\n                                name='time'\n                                type='ionicon'\n                                color='#fff'\n                                onPress={this.showdata(this.state.data)} \n                                />,\n                            <Icon\n                                name='heart'\n                                type='ionicon'\n                                color='#fff'\n                                onPress={this.showdata(this.state.datalike)}/>,\n                            <Icon\n                                name='chatbubble-ellipses'\n                                type='ionicon'\n                                color='#fff' />,\n                            <Icon\n                                name='eye'\n                                type='ionicon'\n                                color='#fff' />\n                    <ButtonGroup\n                        buttons={[\n                            <Icon\n                                name='time'\n                                type='ionicon'\n                                color='#fff'\n                                onPress={this.showdata(this.state.data)} \n                                />,\n                            <Icon\n                                name='heart'\n                                type='ionicon'\n                                color='#fff'\n                                onPress={this.showdata(this.state.datalike)}/>,\n                            <Icon\n                                name='chatbubble-ellipses'\n                                type='ionicon'\n                                color='#fff' />,\n                            <Icon\n                                name='eye'\n                                type='ionicon'\n                                color='#fff' />]}\n                        selectedIndex={this.state.selectedIndex}\n                        onPress={(value) => {\n                            this.setSelectedIndex(value);\n                        }}\n                        containerStyle={{ borderRadius: 10 }}\n                        buttonStyle={{ backgroundColor: '#a1346f' }}\n                        selectedButtonStyle={{ backgroundColor: '#917f54' }}\n                    />\n                </View>\n                <ScrollView style={style.container} contentContainerStyle={{ paddingBottom: 85 }} refreshControl={\n                    <RefreshControl\n                        refreshing={this.state.refreshing}\n                        onRefresh={() => {\n                            const options = {\n                                method: 'POST',\n                                headers: new Headers({\n                                    'Content-Type': 'application/x-www-form-urlencoded'\n                                }),\n                                body: \"user=\" + global.activeuser\n                            };\n                            try {\n                                this.setState({ refreshing: true });\n                                fetch('https://ubaya.fun/react/160819001/get_memes.php', options)\n                                    .then(response => response.json())\n                                    .then(resjson => {\n                                        this.setState(\n                                            this.state = {\n                                                tes: resjson.result,\n                                                //   tes:resjson.data[0].url,\n                                                data: resjson.data,\n                                                is_fetch: true,\n                                                refreshing: false\n                                            })\n                                    })\n                            } catch (error) {\n                                console.log(error);\n                            }\n                        }}\n                    />\n                }>\n                    {this.showdata(this.state.data)}\n                </ScrollView>\n                <FAB\n                    icon=\"plus\"\n                    style={style.fab}\n                    mode='elevated'\n                    onPress={() => {\n                        const { navigation } = this.props;\n                        navigation.navigate(\"Create Your Meme\")\n                    }} />\n            </View>\n        }\n    }\n}\n\nexport default function (props) {\n    const navigation = useNavigation();\n    return <Home {...props} navigation={navigation} />;\n};"],"mappings":";;;;;;;;;;;;;;;;;;AACA,SAASA,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,IAA7B,EAAmCC,KAAnC,EAA0CC,MAA1C,EAAkDC,WAAlD,QAAqE,aAArE;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,QAAT,QAAyB,8BAAzB;;;;IAEMC,I;;;;;EACF,gBAAc;IAAA;;IAAA;;IACV;;IADU,MAmBdC,IAnBc,GAmBP,UAACC,GAAD,EAAMC,OAAN,EAAkB;MACrB,IAAIC,MAAM,GAAG,EAAb;;MACA,IAAIF,GAAG,IAAI,OAAX,EAAoB;QAChBE,MAAM,GAAG,QAAT;MACH,CAFD,MAEO,IAAIF,GAAG,IAAI,eAAX,EACHE,MAAM,GAAG,QAAT;;MACJC,OAAO,CAACC,GAAR,CAAYF,MAAZ;MACA,IAAMG,OAAO,GAAG;QACZH,MAAM,EAAE,MADI;QAEZI,OAAO,EAAE,IAAIC,OAAJ,CAAY;UACjB,gBAAgB;QADC,CAAZ,CAFG;QAKZC,IAAI,EAAE,UAAUP,OAAV,GAAoB,GAApB,GAA0B,OAA1B,GAAoCQ,MAAM,CAACC,UAA3C,GAAwD,GAAxD,GAA8D,SAA9D,GAA0ER;MALpE,CAAhB;;MAOA,IAAI;QAEAS,KAAK,CAAC,6CAAD,EAAgDN,OAAhD,CAAL,CACKO,IADL,CACU,UAAAC,QAAQ;UAAA,OAAIA,QAAQ,CAACC,IAAT,EAAJ;QAAA,CADlB,EAEKF,IAFL,CAEU,UAAAG,OAAO,EAAI;UACbZ,OAAO,CAACC,GAAR,CAAYW,OAAZ;;UACA,IAAIA,OAAO,CAACC,MAAR,IAAkB,SAAtB,EAAiC;YAC7B,MAAKC,SAAL;UACH;QAQJ,CAdL;MAeH,CAjBD,CAiBE,OAAOC,KAAP,EAAc;QACZf,OAAO,CAACC,GAAR,CAAYc,KAAZ;MACH;IACJ,CArDa;;IAGV,MAAKC,KAAL,GAAa;MACTC,GAAG,EAAE,cADI;MAETC,UAAU,EAAE,KAFH;MAGTC,QAAQ,EAAE,KAHD;MAITC,IAAI,EAAE,EAJG;MAKTC,QAAQ,EAAC,EALA;MAMTC,WAAW,EAAC,EANH;MAOTC,QAAQ,EAAC,EAPA;MAQTC,aAAa,EAAE;IARN,CAAb;;IAUA,MAAKV,SAAL;;IACA,MAAKW,gBAAL;;IACA,MAAKC,aAAL;;IACA,MAAKC,aAAL;;IAhBU;EAiBb;;;;WAsCD,iBAAQC,MAAR,EAAeC,MAAf,EAAuB;MAAA;;MACnB,IAAM3B,OAAO,GAAG;QACZH,MAAM,EAAE,MADI;QAEZI,OAAO,EAAE,IAAIC,OAAJ,CAAY;UACjB,gBAAgB;QADC,CAAZ,CAFG;QAKZC,IAAI,EAAE,WAAWuB,MAAM,GAAC,CAAlB,IAAuB,GAAvB,GAA4B,UAA5B,GAAyCC;MALnC,CAAhB;;MAOA,IAAI;QAEArB,KAAK,CAAC,+CAAD,EAAkDN,OAAlD,CAAL,CACKO,IADL,CACU,UAAAC,QAAQ;UAAA,OAAIA,QAAQ,CAACC,IAAT,EAAJ;QAAA,CADlB,EAEKF,IAFL,CAEU,UAAAG,OAAO,EAAI;UACbZ,OAAO,CAACC,GAAR,CAAYW,OAAZ;;UACA,IAAIA,OAAO,CAACC,MAAR,IAAkB,SAAtB,EAAiC;YAC7B,MAAI,CAACC,SAAL;UACH;QAQJ,CAdL;MAeH,CAjBD,CAiBE,OAAOC,KAAP,EAAc;QACZf,OAAO,CAACC,GAAR,CAAYc,KAAZ;MACH;IACJ;;;WAED,0BAAiBe,KAAjB,EAAwB;MACpB,KAAKC,QAAL,CAAc;QAAEP,aAAa,EAAEM;MAAjB,CAAd;MACA9B,OAAO,CAACC,GAAR,CAAY,KAAKe,KAAL,CAAWQ,aAAvB;IACH;;;WAED,qBAAY;MAAA;;MACR,IAAMtB,OAAO,GAAG;QACZH,MAAM,EAAE,MADI;QAEZI,OAAO,EAAE,IAAIC,OAAJ,CAAY;UACjB,gBAAgB;QADC,CAAZ,CAFG;QAKZC,IAAI,EAAE,UAAUC,MAAM,CAACC;MALX,CAAhB;;MAOA,IAAI;QAEAC,KAAK,CAAC,iDAAD,EAAoDN,OAApD,CAAL,CACKO,IADL,CACU,UAAAC,QAAQ;UAAA,OAAIA,QAAQ,CAACC,IAAT,EAAJ;QAAA,CADlB,EAEKF,IAFL,CAEU,UAAAG,OAAO,EAAI;UACb,MAAI,CAACmB,QAAL,CACI,MAAI,CAACf,KAAL,GAAa;YACTC,GAAG,EAAEL,OAAO,CAACC,MADJ;YAGTO,IAAI,EAAER,OAAO,CAACQ,IAHL;YAITD,QAAQ,EAAE;UAJD,CADjB;QAOH,CAVL;MAWH,CAbD,CAaE,OAAOJ,KAAP,EAAc;QACZf,OAAO,CAACC,GAAR,CAAYc,KAAZ;MACH;IACJ;;;WAED,yBAAgB;MAAA;;MACZ,IAAMb,OAAO,GAAG;QACZH,MAAM,EAAE,MADI;QAEZI,OAAO,EAAE,IAAIC,OAAJ,CAAY;UACjB,gBAAgB;QADC,CAAZ,CAFG;QAKZC,IAAI,EAAE,UAAUC,MAAM,CAACC;MALX,CAAhB;;MAOA,IAAI;QAEAC,KAAK,CAAC,sDAAD,EAAyDN,OAAzD,CAAL,CACKO,IADL,CACU,UAAAC,QAAQ;UAAA,OAAIA,QAAQ,CAACC,IAAT,EAAJ;QAAA,CADlB,EAEKF,IAFL,CAEU,UAAAG,OAAO,EAAI;UACb,MAAI,CAACmB,QAAL,CACI,MAAI,CAACf,KAAL,GAAa;YACTC,GAAG,EAAEL,OAAO,CAACC,MADJ;YAGTQ,QAAQ,EAAET,OAAO,CAACQ,IAHT;YAITD,QAAQ,EAAE;UAJD,CADjB;QAOH,CAVL;MAWH,CAbD,CAaE,OAAOJ,KAAP,EAAc;QACZf,OAAO,CAACC,GAAR,CAAYc,KAAZ;MACH;IACJ;;;WACD,4BAAmB;MAAA;;MACf,IAAMb,OAAO,GAAG;QACZH,MAAM,EAAE,MADI;QAEZI,OAAO,EAAE,IAAIC,OAAJ,CAAY;UACjB,gBAAgB;QADC,CAAZ,CAFG;QAKZC,IAAI,EAAE,UAAUC,MAAM,CAACC;MALX,CAAhB;;MAOA,IAAI;QAEAC,KAAK,CAAC,yDAAD,EAA4DN,OAA5D,CAAL,CACKO,IADL,CACU,UAAAC,QAAQ;UAAA,OAAIA,QAAQ,CAACC,IAAT,EAAJ;QAAA,CADlB,EAEKF,IAFL,CAEU,UAAAG,OAAO,EAAI;UACb,MAAI,CAACmB,QAAL,CACI,MAAI,CAACf,KAAL,GAAa;YACTC,GAAG,EAAEL,OAAO,CAACC,MADJ;YAGTS,WAAW,EAAEV,OAAO,CAACQ,IAHZ;YAITD,QAAQ,EAAE;UAJD,CADjB;QAOH,CAVL;MAWH,CAbD,CAaE,OAAOJ,KAAP,EAAc;QACZf,OAAO,CAACC,GAAR,CAAYc,KAAZ;MACH;IACJ;;;WAED,yBAAgB;MAAA;;MACZ,IAAMb,OAAO,GAAG;QACZH,MAAM,EAAE,MADI;QAEZI,OAAO,EAAE,IAAIC,OAAJ,CAAY;UACjB,gBAAgB;QADC,CAAZ,CAFG;QAKZC,IAAI,EAAE,UAAUC,MAAM,CAACC;MALX,CAAhB;;MAOA,IAAI;QAEAC,KAAK,CAAC,sDAAD,EAAyDN,OAAzD,CAAL,CACKO,IADL,CACU,UAAAC,QAAQ;UAAA,OAAIA,QAAQ,CAACC,IAAT,EAAJ;QAAA,CADlB,EAEKF,IAFL,CAEU,UAAAG,OAAO,EAAI;UACb,MAAI,CAACmB,QAAL,CACI,MAAI,CAACf,KAAL,GAAa;YACTC,GAAG,EAAEL,OAAO,CAACC,MADJ;YAGTU,QAAQ,EAAEX,OAAO,CAACQ,IAHT;YAITD,QAAQ,EAAE;UAJD,CADjB;QAOH,CAVL;MAWH,CAbD,CAaE,OAAOJ,KAAP,EAAc;QACZf,OAAO,CAACC,GAAR,CAAYc,KAAZ;MACH;IACJ;;;WAED,kBAASK,IAAT,EAAe;MAAA;;MACX,OAAO,KAAC,QAAD;QACH,IAAI,EAAEA,IADH;QAEH,YAAY,EAAE,sBAACY,IAAD;UAAA,OAAUA,IAAI,CAACC,EAAL,CAAQC,QAAR,EAAV;QAAA,CAFX;QAGH,UAAU,EAAE;UAAA,IAAGF,IAAH,QAAGA,IAAH;UAAA,OACR,KAAC,IAAD;YAAA,UACI,MAAC,IAAD;cAAM,cAAc,EAAE1C,KAAK,CAAC6C,IAA5B;cAAA,WACI,MAAC,IAAD;gBAAM,KAAK,EAAE;kBACTC,QAAQ,EAAE;gBADD,CAAb;gBAAA,WAGI,KAAC,IAAD;kBAAM,KAAK,EAAE9C,KAAK,CAAC+C,SAAnB;kBAAA,UAA+BL,IAAI,CAACM;gBAApC,EAHJ,EAII,KAAC,KAAD;kBACI,cAAc,EAAE;oBACZC,WAAW,EAAE;kBADD,CADpB;kBAII,MAAM,EAAE;oBACJC,GAAG,EACCR,IAAI,CAACS;kBAFL;gBAJZ,EAJJ,EAaI,KAAC,IAAD;kBAAM,KAAK,EAAEnD,KAAK,CAACoD,UAAnB;kBAAA,UAAgCV,IAAI,CAACW;gBAArC,EAbJ;cAAA,EADJ,EAgBI,MAAC,IAAD;gBAAM,KAAK,EAAE;kBACTC,SAAS,EAAE,CADF;kBAETR,QAAQ,EAAE,UAFD;kBAGTS,aAAa,EAAE;gBAHN,CAAb;gBAAA,WAMI,KAAC,MAAD;kBACI,IAAI,EACA,KAAC,QAAD;oBACI,IAAI,EAAEb,IAAI,CAACpC,IADf;oBAEI,IAAI,EAAE,EAFV;oBAGI,KAAK,EAAC;kBAHV,EAFR;kBAQI,WAAW,EAAE;oBACTkD,eAAe,EAAE;kBADR,CARjB;kBAWI,OAAO,EAAE;oBAAA,OAAM,MAAI,CAAClD,IAAL,CAAUoC,IAAI,CAACpC,IAAf,EAAqBoC,IAAI,CAACC,EAA1B,CAAN;kBAAA;gBAXb,EANJ,EAmBI,MAAC,IAAD;kBAAM,KAAK,EAAE;oBACTc,SAAS,EAAE,QADF;oBAETC,QAAQ,EAAE,EAFD;oBAGTC,KAAK,EAAE;kBAHE,CAAb;kBAAA,WAIIjB,IAAI,CAACkB,SAJT;gBAAA,EAnBJ,EAwBI,KAAC,QAAD;kBACI,IAAI,EAAC,KADT;kBAEI,IAAI,EAAE,EAFV;kBAGI,KAAK,EAAC,OAHV;kBAII,KAAK,EAAE;oBAAEH,SAAS,EAAE,QAAb;oBAAuBI,UAAU,EAAE;kBAAnC;gBAJX,EAxBJ,EA8BI,MAAC,IAAD;kBAAM,KAAK,EAAE;oBACTJ,SAAS,EAAE,QADF;oBAETC,QAAQ,EAAE,EAFD;oBAGTC,KAAK,EAAE;kBAHE,CAAb;kBAAA,gBAIKjB,IAAI,CAACoB,IAJV;gBAAA,EA9BJ,EA6CI,KAAC,MAAD;kBACI,IAAI,EACA,KAAC,QAAD;oBACI,IAAI,EAAC,qBADT;oBAEI,IAAI,EAAE,EAFV;oBAGI,KAAK,EAAC;kBAHV,EAFR;kBAQI,WAAW,EAAE;oBACTN,eAAe,EAAE;kBADR,CARjB;kBAWI,cAAc,EAAE;oBACZV,QAAQ,EAAE,UADE;oBAEZiB,KAAK,EAAE;kBAFK,CAXpB;kBAeI,OAAO,EAAE,mBAAM;oBACX,MAAI,CAACC,OAAL,CAAatB,IAAI,CAACoB,IAAlB,EAAuBpB,IAAI,CAACC,EAA5B;;oBACA,IAAQsB,UAAR,GAAuB,MAAI,CAACC,KAA5B,CAAQD,UAAR;oBACAA,UAAU,CAACE,QAAX,CAAoB,aAApB,EAAmC;sBAAE5B,MAAM,EAAEG,IAAI,CAACC;oBAAf,CAAnC;kBACH;gBAnBL,EA7CJ;cAAA,EAhBJ;YAAA;UADJ,EADQ;QAAA;MAHT,EAAP;IA8FH;;;WACD,kBAAS;MAAA;;MACL,IAAI,CAAC,KAAKjB,KAAL,CAAWG,QAAhB,EAA0B;QACtB,KAAKL,SAAL;QACA,KAAKY,aAAL;QACA,KAAKD,gBAAL;QACA,KAAKE,aAAL;QAEA,OAAO,KAAC,MAAD;UAAA,UAAQ,KAAC,MAAD,CAAQ,OAAR;QAAR,EAAP;MACH,CAPD,MAOO;QACH,OAAO,MAAC,IAAD;UAAM,KAAK,EAAErC,KAAK,CAACoE,SAAnB;UAAA,WACH,MAAC,IAAD;YAAA,WAEI,KAAC,IAAD;cACY,IAAI,EAAC,MADjB;cAEY,IAAI,EAAC,SAFjB;cAGY,KAAK,EAAC,MAHlB;cAIY,OAAO,EAAE,KAAKC,QAAL,CAAc,KAAK3C,KAAL,CAAWI,IAAzB;YAJrB,EAFJ,OAQY,KAAC,IAAD;cACI,IAAI,EAAC,OADT;cAEI,IAAI,EAAC,SAFT;cAGI,KAAK,EAAC,MAHV;cAII,OAAO,EAAE,KAAKuC,QAAL,CAAc,KAAK3C,KAAL,CAAWK,QAAzB;YAJb,EARZ,OAaY,KAAC,IAAD;cACI,IAAI,EAAC,qBADT;cAEI,IAAI,EAAC,SAFT;cAGI,KAAK,EAAC;YAHV,EAbZ,OAiBY,KAAC,IAAD;cACI,IAAI,EAAC,KADT;cAEI,IAAI,EAAC,SAFT;cAGI,KAAK,EAAC;YAHV,EAjBZ,EAqBI,KAAC,WAAD;cACI,OAAO,EAAE,CACL,KAAC,IAAD;gBACI,IAAI,EAAC,MADT;gBAEI,IAAI,EAAC,SAFT;gBAGI,KAAK,EAAC,MAHV;gBAII,OAAO,EAAE,KAAKsC,QAAL,CAAc,KAAK3C,KAAL,CAAWI,IAAzB;cAJb,EADK,EAOL,KAAC,IAAD;gBACI,IAAI,EAAC,OADT;gBAEI,IAAI,EAAC,SAFT;gBAGI,KAAK,EAAC,MAHV;gBAII,OAAO,EAAE,KAAKuC,QAAL,CAAc,KAAK3C,KAAL,CAAWK,QAAzB;cAJb,EAPK,EAYL,KAAC,IAAD;gBACI,IAAI,EAAC,qBADT;gBAEI,IAAI,EAAC,SAFT;gBAGI,KAAK,EAAC;cAHV,EAZK,EAgBL,KAAC,IAAD;gBACI,IAAI,EAAC,KADT;gBAEI,IAAI,EAAC,SAFT;gBAGI,KAAK,EAAC;cAHV,EAhBK,CADb;cAqBI,aAAa,EAAE,KAAKL,KAAL,CAAWQ,aArB9B;cAsBI,OAAO,EAAE,iBAACM,KAAD,EAAW;gBAChB,MAAI,CAAC8B,gBAAL,CAAsB9B,KAAtB;cACH,CAxBL;cAyBI,cAAc,EAAE;gBAAE+B,YAAY,EAAE;cAAhB,CAzBpB;cA0BI,WAAW,EAAE;gBAAEf,eAAe,EAAE;cAAnB,CA1BjB;cA2BI,mBAAmB,EAAE;gBAAEA,eAAe,EAAE;cAAnB;YA3BzB,EArBJ;UAAA,EADG,EAoDH,KAAC,UAAD;YAAY,KAAK,EAAExD,KAAK,CAACoE,SAAzB;YAAoC,qBAAqB,EAAE;cAAEI,aAAa,EAAE;YAAjB,CAA3D;YAAkF,cAAc,EAC5F,KAAC,cAAD;cACI,UAAU,EAAE,KAAK9C,KAAL,CAAWE,UAD3B;cAEI,SAAS,EAAE,qBAAM;gBACb,IAAMhB,OAAO,GAAG;kBACZH,MAAM,EAAE,MADI;kBAEZI,OAAO,EAAE,IAAIC,OAAJ,CAAY;oBACjB,gBAAgB;kBADC,CAAZ,CAFG;kBAKZC,IAAI,EAAE,UAAUC,MAAM,CAACC;gBALX,CAAhB;;gBAOA,IAAI;kBACA,MAAI,CAACwB,QAAL,CAAc;oBAAEb,UAAU,EAAE;kBAAd,CAAd;;kBACAV,KAAK,CAAC,iDAAD,EAAoDN,OAApD,CAAL,CACKO,IADL,CACU,UAAAC,QAAQ;oBAAA,OAAIA,QAAQ,CAACC,IAAT,EAAJ;kBAAA,CADlB,EAEKF,IAFL,CAEU,UAAAG,OAAO,EAAI;oBACb,MAAI,CAACmB,QAAL,CACI,MAAI,CAACf,KAAL,GAAa;sBACTC,GAAG,EAAEL,OAAO,CAACC,MADJ;sBAGTO,IAAI,EAAER,OAAO,CAACQ,IAHL;sBAITD,QAAQ,EAAE,IAJD;sBAKTD,UAAU,EAAE;oBALH,CADjB;kBAQH,CAXL;gBAYH,CAdD,CAcE,OAAOH,KAAP,EAAc;kBACZf,OAAO,CAACC,GAAR,CAAYc,KAAZ;gBACH;cACJ;YA3BL,EADJ;YAAA,UA+BK,KAAK4C,QAAL,CAAc,KAAK3C,KAAL,CAAWI,IAAzB;UA/BL,EApDG,EAqFH,KAAC,GAAD;YACI,IAAI,EAAC,MADT;YAEI,KAAK,EAAE9B,KAAK,CAACyE,GAFjB;YAGI,IAAI,EAAC,UAHT;YAII,OAAO,EAAE,mBAAM;cACX,IAAQR,UAAR,GAAuB,MAAI,CAACC,KAA5B,CAAQD,UAAR;cACAA,UAAU,CAACE,QAAX,CAAoB,kBAApB;YACH;UAPL,EArFG;QAAA,EAAP;MA8FH;IACJ;;;;EA1YctE,KAAK,CAACC,S;;AA6YzB,eAAe,UAAUoE,KAAV,EAAiB;EAC5B,IAAMD,UAAU,GAAG9D,aAAa,EAAhC;EACA,OAAO,KAAC,IAAD,kCAAU+D,KAAV;IAAiB,UAAU,EAAED;EAA7B,GAAP;AACH;AAAA"},"metadata":{},"sourceType":"module"}