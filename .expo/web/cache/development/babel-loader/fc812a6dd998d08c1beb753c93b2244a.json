{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport View from \"react-native-web/dist/exports/View\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport { LinearProgress, Text, Button, Slider, Dialog } from '@rneui/base';\nimport React from \"react\";\nimport style from \"../assets/style\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport rgbHex from 'rgb-hex';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ColorMixer = function (_React$Component) {\n  _inherits(ColorMixer, _React$Component);\n\n  var _super = _createSuper(ColorMixer);\n\n  function ColorMixer() {\n    var _this;\n\n    _classCallCheck(this, ColorMixer);\n\n    _this = _super.call(this);\n    _this.batas = 255;\n\n    _this.doSave = function () {\n      var _ref = _asyncToGenerator(function* (username, skor) {\n        try {\n          var storage = yield AsyncStorage.getItem('result');\n\n          if (storage != null) {\n            console.debug('storage:' + storage);\n            var arr = JSON.parse(storage);\n            console.debug('arr:' + arr);\n            var item = [username, skor];\n            console.debug('item:' + item);\n            arr.push(item);\n            yield AsyncStorage.setItem('result', JSON.stringify(arr));\n          } else if (storage == null) {\n            var _item = [[username, skor]];\n            console.debug('item:' + _item);\n            yield AsyncStorage.setItem('result', JSON.stringify(_item));\n          }\n\n          alert('data berhasil disimpan');\n\n          _this.setState({\n            result: true\n          });\n        } catch (e) {}\n      });\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      count: _this.batas,\n      time: 0,\n      hintUsed: true,\n      hintR: false,\n      hintG: false,\n      hintB: false,\n      oneSecInterval: setInterval(function () {\n        if (_this.state.count >= 0 && !global.confirmgiveup && !_this.state.result) {\n          _this.setState(_this.state = {\n            count: _this.state.count - 1,\n            time: _this.state.time + 1\n          });\n        }\n\n        if (_this.state.skor >= 100 && _this.state.hintR == false) {\n          _this.setState(_this.state = {\n            hintUsed: false\n          });\n        } else if (_this.state.skor >= 100 && _this.state.hintG == false) {\n          _this.setState(_this.state = {\n            hintUsed: false\n          });\n        } else if (_this.state.skor >= 100 && _this.state.hintB == false) {\n          _this.setState(_this.state = {\n            hintUsed: false\n          });\n        } else if (_this.state.hintR == true && _this.state.hintG == true && _this.state.hintB == true) {\n          _this.setState(_this.state = {\n            hintUsed: true\n          });\n        } else if (_this.state.skor < 100) {\n          _this.setState(_this.state = {\n            hintUsed: true\n          });\n        }\n\n        if (global.confirmgiveup) {\n          _this.setState(_this.state = {\n            confirmgiveup: true\n          });\n        }\n      }, 1000),\n      redVal: 255,\n      greenVal: 255,\n      blueVal: 255,\n      hint: '',\n      hintMultiplier: 1,\n      guessMultiplier: 0,\n      result: false,\n      skor: 1000,\n      tebakan: 0,\n      totalTebakan: 0,\n      numberRed: Math.floor(Math.random() * 255) + 1,\n      numberGreen: Math.floor(Math.random() * 255) + 1,\n      numberBlue: Math.floor(Math.random() * 255) + 1,\n      nomor: 0,\n      hintuse: 0,\n      average: 0,\n      username: global.activeuser\n    };\n    return _this;\n  }\n\n  _createClass(ColorMixer, [{\n    key: \"answerCheck\",\n    value: function answerCheck() {\n      this.state.tebakan++;\n      this.state.totalTebakan++;\n      var total;\n      var no;\n      var skorsoal;\n\n      if (this.state.redVal == this.state.numberRed && this.state.greenVal == this.state.numberGreen && this.state.blueVal == this.state.numberBlue) {\n        if (this.state.tebakan >= 5) this.state.guessMultiplier = 1;else if (this.state.tebakan < 5) this.state.guessMultiplier = 5 - this.state.tebakan;\n        skorsoal = this.state.hintMultiplier * this.state.guessMultiplier * this.state.count;\n        console.debug('hintmul:' + this.state.hintMultiplier);\n        console.debug('guessmul:' + this.state.guessMultiplier);\n        console.debug('sisawaktu:' + this.state.count);\n        console.debug('skorsoalini' + skorsoal);\n        total = this.state.skor + skorsoal;\n        console.debug('finalscore:' + total);\n        no = this.state.nomor + 1;\n        console.debug('nomorsoalberhasil' + no);\n        this.setState(this.state = {\n          skor: total,\n          count: this.batas,\n          hintR: false,\n          hintG: false,\n          hintB: false,\n          nomor: no,\n          redVal: 255,\n          greenVal: 255,\n          blueVal: 255,\n          hint: '',\n          hintMultiplier: 1,\n          guessMultiplier: 0,\n          hintUsed: false,\n          tebakan: 0,\n          numberRed: Math.floor(Math.random() * 255) + 1,\n          numberGreen: Math.floor(Math.random() * 255) + 1,\n          numberBlue: Math.floor(Math.random() * 255) + 1\n        });\n        console.debug(this.state.numberRed);\n        console.debug(this.state.numberGreen);\n        console.debug(this.state.numberBlue);\n      } else {\n        alert(\"Wrong color mix, try again \" + global.activeuser + \" :)\");\n      }\n    }\n  }, {\n    key: \"restart\",\n    value: function restart() {\n      this.setState(this.state = {\n        count: this.batas,\n        hintR: false,\n        hintG: false,\n        hintB: false,\n        time: 0,\n        redVal: 255,\n        greenVal: 255,\n        blueVal: 255,\n        hint: '',\n        hintMultiplier: 1,\n        guessMultiplier: 0,\n        result: false,\n        hintUsed: true,\n        skor: 0,\n        tebakan: 0,\n        totalTebakan: 0,\n        numberRed: Math.floor(Math.random() * 255) + 1,\n        numberGreen: Math.floor(Math.random() * 255) + 1,\n        numberBlue: Math.floor(Math.random() * 255) + 1,\n        nomor: 0,\n        hintuse: 0,\n        average: 0\n      });\n    }\n  }, {\n    key: \"cekHint\",\n    value: function cekHint(acak) {\n      console.debug(acak);\n      var hasilacak = acak[Math.floor(Math.random() * acak.length)];\n      console.debug(hasilacak);\n\n      switch (hasilacak) {\n        case this.state.numberRed:\n          console.debug('masuk red');\n\n          if (!this.state.hintR) {\n            this.state.hintR = true;\n            this.state.hint += ' ' + this.state.numberRed;\n          } else {\n            this.cekHint([this.state.numberRed, this.state.numberGreen, this.state.numberBlue]);\n          }\n\n          break;\n\n        case this.state.numberGreen:\n          console.debug('masuk green');\n\n          if (!this.state.hintG) {\n            this.state.hintG = true;\n            this.state.hint += ' ' + this.state.numberGreen;\n          } else {\n            this.cekHint([this.state.numberRed, this.state.numberGreen, this.state.numberBlue]);\n          }\n\n          break;\n\n        case this.state.numberBlue:\n          console.debug('masuk blue');\n\n          if (!this.state.hintB) {\n            this.state.hintB = true;\n            this.state.hint += ' ' + this.state.numberBlue;\n          } else {\n            this.cekHint([this.state.numberRed, this.state.numberGreen, this.state.numberBlue]);\n          }\n\n          break;\n      }\n    }\n  }, {\n    key: \"buyHint\",\n    value: function buyHint() {\n      var u = this.state.hintuse + 1;\n      this.state.skor = this.state.skor - 100;\n      this.cekHint([this.state.numberRed, this.state.numberGreen, this.state.numberBlue]);\n      this.setState(this.state = {\n        count: (this.state.count / 2).toFixed(0),\n        hintMultiplier: 0.5,\n        hintuse: u\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.count > 0 && !global.giveup && !this.state.result) {\n        return _jsxs(View, {\n          style: style.container,\n          children: [_jsxs(View, {\n            style: style.linear_progress,\n            children: [_jsx(LinearProgress, {\n              variant: \"determinate\",\n              value: 1 - this.state.count / this.batas,\n              color: \"rgb(\" + this.state.numberRed + \",\" + this.state.numberGreen + \",\" + this.state.numberBlue + \")\",\n              style: style.linear_progress\n            }), _jsx(Text, {\n              style: style.text_linear_progress,\n              children: toHHMMSS(this.state.count)\n            })]\n          }), _jsxs(Text, {\n            style: style.text_score,\n            children: [\"Score: \", this.state.skor]\n          }), _jsxs(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              alignItems: 'flex-start',\n              marginTop: 20\n            },\n            children: [_jsxs(View, {\n              style: {\n                width: '50%'\n              },\n              children: [_jsx(Text, {\n                style: {\n                  fontSize: 18,\n                  color: '#265e80',\n                  width: '100%',\n                  textAlign: 'center'\n                },\n                children: \"Guess this color!\"\n              }), _jsx(View, {\n                style: {\n                  width: 100,\n                  height: 100,\n                  margin: 10,\n                  backgroundColor: \"rgb(\" + this.state.numberRed + \",\" + this.state.numberGreen + \",\" + this.state.numberBlue + \")\",\n                  alignSelf: 'center',\n                  borderColor: '#000',\n                  borderWidth: 2\n                }\n              })]\n            }), _jsxs(View, {\n              style: {\n                width: '50%'\n              },\n              children: [_jsx(Text, {\n                style: {\n                  fontSize: 18,\n                  color: '#265e80',\n                  width: '100%',\n                  textAlign: 'center'\n                },\n                children: \"Your color\"\n              }), _jsx(View, {\n                style: {\n                  width: 100,\n                  height: 100,\n                  margin: 10,\n                  backgroundColor: 'rgba(' + this.state.redVal + ',' + this.state.greenVal + ',' + this.state.blueVal + ',1)',\n                  alignSelf: 'center',\n                  borderColor: '#000',\n                  borderWidth: 2\n                }\n              })]\n            })]\n          }), _jsxs(View, {\n            children: [_jsx(Text, {\n              style: {\n                fontSize: 18,\n                color: '#265e80',\n                margin: 20,\n                alignSelf: 'center'\n              },\n              children: this.state.hint\n            }), _jsx(Button, {\n              title: \"Buy Hint\",\n              onPress: function onPress() {\n                _this2.buyHint();\n              },\n              buttonStyle: style.btn_style,\n              containerStyle: style.btn_container,\n              disabled: this.state.hintUsed\n            })]\n          }), _jsxs(View, {\n            style: style.container,\n            children: [_jsxs(View, {\n              style: style.slider_container,\n              children: [_jsxs(Text, {\n                style: {\n                  fontSize: 18,\n                  color: 'red',\n                  margin: 20,\n                  alignSelf: 'center'\n                },\n                children: [\"Red: \", this.state.redVal]\n              }), _jsx(Slider, {\n                value: this.state.redVal,\n                minimumValue: 0,\n                maximumValue: 255,\n                step: 1,\n                thumbStyle: {\n                  backgroundColor: 'red'\n                },\n                onValueChange: function onValueChange(value) {\n                  _this2.setState({\n                    redVal: value\n                  });\n                }\n              })]\n            }), _jsxs(View, {\n              style: style.slider_container,\n              children: [_jsxs(Text, {\n                style: {\n                  fontSize: 18,\n                  color: 'green',\n                  margin: 20,\n                  alignSelf: 'center'\n                },\n                children: [\"Green: \", this.state.greenVal]\n              }), _jsx(Slider, {\n                value: this.state.greenVal,\n                minimumValue: 0,\n                maximumValue: 255,\n                step: 1,\n                thumbStyle: {\n                  backgroundColor: 'green'\n                },\n                onValueChange: function onValueChange(value) {\n                  _this2.setState({\n                    greenVal: value\n                  });\n                }\n              })]\n            }), _jsxs(View, {\n              style: style.slider_container,\n              children: [_jsxs(Text, {\n                style: {\n                  fontSize: 18,\n                  color: 'blue',\n                  margin: 20,\n                  alignSelf: 'center'\n                },\n                children: [\"Blue: \", this.state.blueVal]\n              }), _jsx(Slider, {\n                value: this.state.blueVal,\n                minimumValue: 0,\n                maximumValue: 255,\n                step: 1,\n                thumbStyle: {\n                  backgroundColor: 'blue'\n                },\n                onValueChange: function onValueChange(value) {\n                  _this2.setState({\n                    blueVal: value\n                  });\n                }\n              })]\n            })]\n          }), _jsx(View, {\n            style: {\n              bottom: 40\n            },\n            children: _jsx(Button, {\n              title: \"Guess Color\",\n              buttonStyle: style.btn_style,\n              containerStyle: style.btn_container,\n              onPress: function onPress() {\n                _this2.answerCheck();\n              }\n            })\n          })]\n        });\n      } else if (this.state.count <= 0 && !this.state.result) {\n        return _jsxs(Dialog, {\n          isVisible: true,\n          overlayStyle: style.dialog,\n          children: [_jsx(Dialog.Title, {\n            title: \"GAME OVER\"\n          }), _jsx(Text, {\n            children: \"Good Game Great Eyes!\"\n          }), _jsx(Dialog.Actions, {\n            children: _jsx(Dialog.Button, {\n              title: \"SHOW RESULT\",\n              onPress: function onPress() {\n                return _this2.doSave(global.activeuser, _this2.state.skor);\n              }\n            })\n          })]\n        });\n      } else if (global.giveup == true && !this.state.result) {\n        return _jsxs(Dialog, {\n          isVisible: true,\n          overlayStyle: style.dialog,\n          children: [_jsx(Dialog.Title, {\n            title: \"GAME OVER\"\n          }), _jsx(Text, {\n            children: \"Good Game Great Eyes!\"\n          }), _jsx(Dialog.Actions, {\n            children: _jsx(Dialog.Button, {\n              title: \"SHOW RESULT\",\n              onPress: function onPress() {\n                return _this2.doSave(global.activeuser, _this2.state.skor);\n              }\n            })\n          })]\n        });\n      } else if (this.state.result == true) {\n        global.giveup = false;\n        this.props.navigation.setOptions({\n          title: 'Result'\n        });\n        var avegues = 0;\n        if (this.state.nomor == 0) avegues = (this.state.totalTebakan / 1).toFixed(2);else if (this.state.totalTebakan != 0 || this.state.nomor != 0) avegues = (this.state.totalTebakan / this.state.nomor).toFixed(2);\n        return _jsxs(View, {\n          style: style.container,\n          children: [_jsxs(Text, {\n            style: style.text_judul,\n            children: [\"Final Score : \", this.state.skor]\n          }), _jsxs(Text, {\n            style: style.text_body,\n            children: [\"Total time played : \", toHHMMSS(this.state.time), '\\n', '\\n', \"Color mixed : \", this.state.nomor, '\\n', '\\n', \"Average guesses : \", avegues, '\\n', '\\n', \"Hints used : \", this.state.hintuse]\n          }), _jsxs(View, {\n            style: {\n              flexDirection: 'row',\n              flexWrap: 'wrap',\n              justifyContent: 'space-evenly',\n              marginTop: 15\n            },\n            children: [_jsx(Button, {\n              title: 'HIGH SCORES',\n              buttonStyle: style.btn_style,\n              containerStyle: {\n                width: '42%',\n                margin: 5\n              },\n              onPress: function onPress() {\n                return _this2.props.navigation.navigate(\"HighScore\");\n              }\n            }), _jsx(Button, {\n              title: 'PLAY AGAIN',\n              buttonStyle: style.btn_style,\n              containerStyle: {\n                width: '42%',\n                margin: 5\n              },\n              onPress: function onPress() {\n                return _this2.restart();\n              }\n            })]\n          }), _jsx(Button, {\n            title: 'MAIN MENU',\n            buttonStyle: style.btn_style,\n            containerStyle: style.btn_container,\n            onPress: function onPress() {\n              return _this2.props.navigation.navigate(\"Home\");\n            }\n          })]\n        });\n      }\n    }\n  }]);\n\n  return ColorMixer;\n}(React.Component);\n\nexport { ColorMixer as default };\n\nfunction toHHMMSS(v) {\n  var sec_num = parseInt(v, 10);\n  var hours = Math.floor(sec_num / 3600);\n  var minutes = Math.floor((sec_num - hours * 3600) / 60);\n  var seconds = sec_num - hours * 3600 - minutes * 60;\n\n  if (hours < 10) {\n    hours = \"0\" + hours;\n  }\n\n  if (minutes < 10) {\n    minutes = \"0\" + minutes;\n  }\n\n  if (seconds < 10) {\n    seconds = \"0\" + seconds;\n  }\n\n  return hours + ':' + minutes + ':' + seconds;\n}","map":{"version":3,"names":["LinearProgress","Text","Button","Slider","Dialog","React","style","AsyncStorage","rgbHex","ColorMixer","batas","doSave","username","skor","storage","getItem","console","debug","arr","JSON","parse","item","push","setItem","stringify","alert","setState","result","e","state","count","time","hintUsed","hintR","hintG","hintB","oneSecInterval","setInterval","global","confirmgiveup","redVal","greenVal","blueVal","hint","hintMultiplier","guessMultiplier","tebakan","totalTebakan","numberRed","Math","floor","random","numberGreen","numberBlue","nomor","hintuse","average","activeuser","total","no","skorsoal","acak","hasilacak","length","cekHint","u","toFixed","giveup","container","linear_progress","text_linear_progress","toHHMMSS","text_score","flexDirection","flexWrap","alignItems","marginTop","width","fontSize","color","textAlign","height","margin","backgroundColor","alignSelf","borderColor","borderWidth","buyHint","btn_style","btn_container","slider_container","value","bottom","answerCheck","dialog","props","navigation","setOptions","title","avegues","text_judul","text_body","justifyContent","navigate","restart","Component","v","sec_num","parseInt","hours","minutes","seconds"],"sources":["/Users/davidkurniawan/Library/Mobile Documents/com~apple~CloudDocs/Documents/Semester 7/STMP/uts/fix/utsstimp/screens/colormixer.js"],"sourcesContent":["import { View, NativeModules } from \"react-native\";\nimport { LinearProgress, Text, Button, Slider, Dialog } from '@rneui/base';\nimport React from \"react\";\nimport style from \"../assets/style\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport rgbHex from 'rgb-hex';\n\nexport default class ColorMixer extends React.Component {\n    batas = 255;\n    // qRed = Math.floor(Math.random() * 255) + 1;\n    // qBlue = Math.floor(Math.random() * 255) + 1;\n    // qGreen = Math.floor(Math.random() * 255) + 1;\n\n\n    constructor() {\n        super();\n        this.state = {\n            count: this.batas,\n            time: 0,\n            hintUsed: true,\n            hintR: false,\n            hintG: false,\n            hintB: false,\n            oneSecInterval: setInterval(() => {\n                // jika waktu masih ada dan confirm dialog give up tidak tampil waktu hitung mundur dan total waktu main tambah 1\n                if (this.state.count >= 0 && !global.confirmgiveup && !this.state.result) {\n                    this.setState(\n                        this.state = {\n                            count: this.state.count - 1,\n                            time: this.state.time + 1\n                        }\n                    )\n                }\n                // jika skor di state >=100 dan hintR/G/B salah satunya belum muncul\n                if (this.state.skor >= 100 && this.state.hintR == false) {\n                    this.setState(\n                        this.state = {\n                            hintUsed: false\n                        }\n                    )\n                } else if (this.state.skor >= 100 && this.state.hintG == false) {\n                    this.setState(\n                        this.state = {\n                            hintUsed: false\n                        }\n                    )\n                } else if (this.state.skor >= 100 && this.state.hintB == false) {\n                    this.setState(\n                        this.state = {\n                            hintUsed: false\n                        }\n                    )\n                } else if (this.state.hintR == true && this.state.hintG == true && this.state.hintB == true) {\n                    this.setState(\n                        this.state = {\n                            hintUsed: true\n                        }\n                    )\n                } else if (this.state.skor < 100) {\n                    this.setState(\n                        this.state = {\n                            hintUsed: true\n                        }\n                    )\n                }\n                //jika confirm dialog giveup tampil, setstate agar rendernya jalan\n                if (global.confirmgiveup) {\n                    this.setState(\n                        this.state = {\n                            confirmgiveup: true\n                        }\n                    )\n                }\n            }, 1000),\n            redVal: 255,\n            greenVal: 255,\n            blueVal: 255,\n            hint: '',\n            hintMultiplier: 1,\n            guessMultiplier: 0,\n            //tampilan result di set false\n            result: false,\n            // skorPenampung: 0,\n            skor: 1000,\n            tebakan: 0,\n            totalTebakan: 0,\n            numberRed: Math.floor(Math.random() * 255) + 1,\n            numberGreen: Math.floor(Math.random() * 255) + 1,\n            numberBlue: Math.floor(Math.random() * 255) + 1,\n            nomor: 0,\n            hintuse: 0,\n            average: 0,\n            username: global.activeuser,\n        }\n    }\n\n\n\n    doSave = async (username, skor) => {\n        try {\n            // var item = { name: username, score: skor };\n            const storage = await AsyncStorage.getItem('result');\n            if (storage != null) {\n                console.debug('storage:' + storage);\n                let arr = JSON.parse(storage);\n                console.debug('arr:' + arr);\n                let item = [username, skor];\n                console.debug('item:' + item);\n                arr.push(item);\n                await AsyncStorage.setItem('result', JSON.stringify(arr));\n            } else if (storage == null) {\n                let item = [[username, skor]];\n                console.debug('item:' + item);\n                await AsyncStorage.setItem('result', JSON.stringify(item));\n            }\n            alert('data berhasil disimpan');\n            this.setState({\n                result: true\n\n            })\n\n        } catch (e) {\n            // saving error\n        }\n    }\n\n    answerCheck() {\n        this.state.tebakan++;\n        this.state.totalTebakan++;\n        var total;\n        var no;\n        var skorsoal;\n\n        // var penampung;\n        // var g;\n\n        //jika jawaban benar\n        if (this.state.redVal == this.state.numberRed && this.state.greenVal == this.state.numberGreen && this.state.blueVal == this.state.numberBlue) {\n            if (this.state.tebakan >= 5)\n                this.state.guessMultiplier = 1;\n            else if (this.state.tebakan < 5)\n                this.state.guessMultiplier = 5 - this.state.tebakan;\n            skorsoal = this.state.hintMultiplier * this.state.guessMultiplier * this.state.count;\n            console.debug('hintmul:' + this.state.hintMultiplier);\n            console.debug('guessmul:' + this.state.guessMultiplier);\n            console.debug('sisawaktu:' + this.state.count);\n            console.debug('skorsoalini' + skorsoal);\n            total = this.state.skor + skorsoal;\n            console.debug('finalscore:' + total);\n            no = this.state.nomor + 1;\n            console.debug('nomorsoalberhasil' + no);\n            this.setState(\n                this.state = {\n                    skor: total,\n                    count: this.batas,\n                    hintR: false,\n                    hintG: false,\n                    hintB: false,\n                    nomor: no,\n                    redVal: 255,\n                    greenVal: 255,\n                    blueVal: 255,\n                    hint: '',\n                    hintMultiplier: 1,\n                    guessMultiplier: 0,\n                    // skorPenampung: 0,\n                    hintUsed: false,\n                    tebakan: 0,\n                    numberRed: Math.floor(Math.random() * 255) + 1,\n                    numberGreen: Math.floor(Math.random() * 255) + 1,\n                    numberBlue: Math.floor(Math.random() * 255) + 1\n                }\n            )\n            console.debug(this.state.numberRed);\n            console.debug(this.state.numberGreen);\n            console.debug(this.state.numberBlue);\n        }\n        //jika jawaban salah\n        else {\n            alert(\"Wrong color mix, try again \" + global.activeuser + \" :)\");\n        }\n\n        // // jika button guess dipencet >=5 dalam sebuah soal (nyoba jawab ke 5x dst.)\n        // if (this.state.tebakan >= 5) {\n        //     //jika jawaban benar\n        //     if (this.state.redVal == this.state.numberRed && this.state.greenVal == this.state.numberGreen && this.state.blueVal == this.state.numberBlue) {\n        //         //guessmultiplier jadi ==1\n        //         this.setState(\n        //             this.state = {\n        //                 guessMultiplier: 1,\n        //             }\n        //         )\n        //         //penampung = skor untuk soal saat itu\n        //         penampung = this.state.hintMultiplier * this.state.guessMultiplier * this.state.count;\n        //         //isi state skorpenampung dengan skor soal saat itu\n        //         this.state.skorPenampung = penampung;\n        //         //var total = state skor ditambah skor barusan\n        //         total = this.state.skor + this.state.skorPenampung.toFixed(0);\n        //         //var nomor = state nomor +1\n        //         no = this.state.nomor + 1;\n        //         this.setState(\n        //             this.state = {\n        //                 // skorPenampung: penampung,\n        //                 skor: total,\n        //                 count: this.batas,\n        //                 nomor: no,\n        //                 redVal: 255,\n        //                 greenVal: 255,\n        //                 blueVal: 255,\n        //                 hint: '',\n        //                 skorPenampung: 0,\n        //                 hintMultiplier: 1,\n        //                 guessMultiplier: 0,\n        //                 hintUsed: false,\n        //                 tebakan: 0,\n        //                 numberRed: Math.floor(Math.random() * 255) + 1,\n        //                 numberGreen: Math.floor(Math.random() * 255) + 1,\n        //                 numberBlue: Math.floor(Math.random() * 255) + 1\n        //             }\n        //         )\n        //         console.debug(this.state.numberRed);\n        //         console.debug(this.state.numberGreen);\n        //         console.debug(this.state.numberBlue);\n        //     }\n        //     else {\n        //         alert(\"Wrong color mix, try again \" + global.activeuser + \" :)\");\n        //     }\n        // }\n        // // nyoba jawab 1-4x dalam sebuah soal\n        // else {\n        //     //jika jawaban benar\n        //     if (this.state.redVal == this.state.numberRed && this.state.greenVal == this.state.numberGreen && this.state.blueVal == this.state.numberBlue) {\n        //         this.state.guessMultiplier = 5 - this.state.tebakan;\n        //         penampung = this.state.hintMultiplier * this.state.guessMultiplier * this.state.count;\n        //         this.state.skorPenampung = penampung;\n        //         total = this.state.skor + this.state.skorPenampung;\n        //         no = this.state.nomor + 1;\n        //         this.setState(\n        //             this.state = {\n\n        //                 skor: total,\n        //                 count: this.batas,\n        //                 nomor: no,\n        //                 redVal: 255,\n        //                 greenVal: 255,\n        //                 blueVal: 255,\n        //                 hint: '',\n        //                 hintMultiplier: 1,\n        //                 guessMultiplier: 0,\n        //                 skorPenampung: 0,\n        //                 hintUsed: false,\n        //                 tebakan: 0,\n        //                 numberRed: Math.floor(Math.random() * 255) + 1,\n        //                 numberGreen: Math.floor(Math.random() * 255) + 1,\n        //                 numberBlue: Math.floor(Math.random() * 255) + 1\n        //             }\n        //         )\n        //         console.debug(this.state.numberRed);\n        //         console.debug(this.state.numberGreen);\n        //         console.debug(this.state.numberBlue);\n        //     }\n        //     else {\n        //         alert(\"Wrong color mix, try again \" + global.activeuser + \" :)\");\n        //     }\n        // }\n    }\n\n    restart() {\n        this.setState(\n            this.state = {\n                count: this.batas,\n                hintR: false,\n                hintG: false,\n                hintB: false,\n                time: 0,\n                redVal: 255,\n                greenVal: 255,\n                blueVal: 255,\n                hint: '',\n                hintMultiplier: 1,\n                guessMultiplier: 0,\n                result: false,\n                hintUsed: true,\n                // skorPenampung: 0,\n                skor: 0,\n                tebakan: 0,\n                totalTebakan: 0,\n                numberRed: Math.floor(Math.random() * 255) + 1,\n                numberGreen: Math.floor(Math.random() * 255) + 1,\n                numberBlue: Math.floor(Math.random() * 255) + 1,\n                nomor: 0,\n                hintuse: 0,\n                average: 0,\n\n            }\n        )\n    }\n\n    cekHint(acak) {\n        console.debug(acak);\n        var hasilacak = acak[Math.floor(Math.random() * acak.length)];\n        console.debug(hasilacak);\n        switch (hasilacak) {\n            case this.state.numberRed:\n                console.debug('masuk red');\n                if (!this.state.hintR) {\n                    this.state.hintR = true;\n                    this.state.hint += ' ' + this.state.numberRed;\n                } else {\n                    this.cekHint([this.state.numberRed, this.state.numberGreen, this.state.numberBlue]);\n                }\n                break;\n            case this.state.numberGreen:\n                console.debug('masuk green');\n                if (!this.state.hintG) {\n                    this.state.hintG = true;\n                    this.state.hint += ' ' + this.state.numberGreen;\n                } else {\n                    this.cekHint([this.state.numberRed, this.state.numberGreen, this.state.numberBlue]);\n                }\n                break;\n            case this.state.numberBlue:\n                console.debug('masuk blue');\n                if (!this.state.hintB) {\n                    this.state.hintB = true;\n                    this.state.hint += ' ' + this.state.numberBlue;\n                } else {\n                    this.cekHint([this.state.numberRed, this.state.numberGreen, this.state.numberBlue]);\n                }\n                break;\n        }\n    }\n\n    buyHint() {\n        var u = this.state.hintuse + 1;\n        this.state.skor = this.state.skor - 100;\n\n        this.cekHint([this.state.numberRed, this.state.numberGreen, this.state.numberBlue]);\n\n        this.setState(\n            this.state = {\n                // hintUsed: true,\n                count: (this.state.count / 2).toFixed(0),\n                // hint: \"Hint : #\" + rgbHex(this.state.numberRed, this.state.numberGreen, this.state.numberBlue),\n                // hint: \"Hint : \" + 'red(' + this.state.numberRed + ',' + this.state.numberGreen + ',' + this.state.numberBlue + ')',\n                //+','+this.state.numberBlue+','+this.state.numberBlue\n                //ambil salah satu colorVal dari state soal\n                //disini nanti juga setskornya diminus\n                hintMultiplier: 0.5,\n                hintuse: u\n            }\n        )\n    }\n\n    render() {\n        // jika waktu masih ada dan belum giveup tampilkan game\n        if (this.state.count > 0 && !global.giveup && !this.state.result) {\n            return (\n                //#region GAMEON\n                <View style={style.container}>\n                    <View style={style.linear_progress}>\n                        <LinearProgress variant='determinate'\n                            value={1 - (this.state.count / this.batas)}\n                            color={\"rgb(\" + this.state.numberRed + \",\" + this.state.numberGreen + \",\" + this.state.numberBlue + \")\"}\n                            //warna e mengikuti soal\n                            style={style.linear_progress} />\n                        <Text style={style.text_linear_progress}>{toHHMMSS(this.state.count)}</Text>\n                    </View>\n                    <Text style={style.text_score}>Score: {this.state.skor}</Text>\n\n                    {/* ---Start Soal Area--- */}\n                    <View style={{\n                        flexDirection: 'row',\n                        flexWrap: 'wrap',\n                        alignItems: 'flex-start',\n                        marginTop: 20,\n                    }}>\n                        <View style={{\n                            width: '50%',\n                        }}>\n                            <Text style={{\n                                fontSize: 18,\n                                color: '#265e80',\n                                width: '100%',\n                                textAlign: 'center',\n                            }}>Guess this color!</Text>\n                            <View style={{\n                                width: 100,\n                                height: 100,\n                                margin: 10,\n                                backgroundColor: \"rgb(\" + this.state.numberRed + \",\" + this.state.numberGreen + \",\" + this.state.numberBlue + \")\",\n                                alignSelf: 'center',\n                                borderColor: '#000',\n                                borderWidth: 2,\n                            }}></View>\n                        </View>\n                        <View style={{\n                            width: '50%',\n                        }}>\n                            <Text style={{\n                                fontSize: 18,\n                                color: '#265e80',\n                                width: '100%',\n                                textAlign: 'center',\n                            }}>Your color</Text>\n                            <View style={{\n                                width: 100,\n                                height: 100,\n                                margin: 10,\n                                backgroundColor: 'rgba(' + this.state.redVal + ',' + this.state.greenVal + ',' + this.state.blueVal + ',1)',\n                                alignSelf: 'center',\n                                borderColor: '#000',\n                                borderWidth: 2,\n                            }}></View>\n                        </View>\n                    </View>\n                    {/* ---End Soal Area--- */}\n                    {/* ---Start Hint Area--- */}\n                    <View>\n                        <Text style={{\n                            fontSize: 18,\n                            color: '#265e80',\n                            margin: 20,\n                            alignSelf: 'center',\n                        }}>{this.state.hint}</Text>\n                        <Button\n                            title=\"Buy Hint\"\n                            onPress={() => { this.buyHint() }}\n                            buttonStyle={style.btn_style}\n                            containerStyle={style.btn_container}\n                            disabled={this.state.hintUsed} />\n                    </View>\n                    {/* ---End Hint Area--- */}\n                    {/* ---Start Container Slider--- */}\n                    <View style={style.container}>\n                        {/* ---Start Red Slider--- */}\n                        <View style={style.slider_container}>\n                            <Text\n                                style={{\n                                    fontSize: 18,\n                                    color: 'red',\n                                    margin: 20,\n                                    alignSelf: 'center',\n                                }}\n                            >\n                                Red: {this.state.redVal}\n                            </Text>\n                            <Slider\n                                value={this.state.redVal}\n                                minimumValue={0}\n                                maximumValue={255}\n                                step={1}\n                                thumbStyle={{\n                                    backgroundColor: 'red',\n                                }}\n                                onValueChange={(value) => {\n                                    this.setState({\n                                        redVal: value\n                                    })\n                                }}\n\n                            ></Slider>\n                        </View>\n                        {/* ---End Red Slider--- */}\n                        {/* ---Start Green Slider--- */}\n                        <View style={style.slider_container}>\n                            <Text\n                                style={{\n                                    fontSize: 18,\n                                    color: 'green',\n                                    margin: 20,\n                                    alignSelf: 'center',\n                                }}\n                            >\n                                Green: {this.state.greenVal}\n                            </Text>\n                            <Slider\n                                value={this.state.greenVal}\n                                minimumValue={0}\n                                maximumValue={255}\n                                step={1}\n                                thumbStyle={{\n                                    backgroundColor: 'green',\n                                }}\n                                onValueChange={(value) => {\n                                    this.setState({\n                                        greenVal: value\n                                    })\n                                }}\n\n                            ></Slider>\n                        </View>\n                        {/* ---End Green Slider--- */}\n                        {/* ---Start Blue Slider--- */}\n                        <View style={style.slider_container}>\n                            <Text\n                                style={{\n                                    fontSize: 18,\n                                    color: 'blue',\n                                    margin: 20,\n                                    alignSelf: 'center',\n                                }}\n                            >\n                                Blue: {this.state.blueVal}\n                            </Text>\n                            <Slider\n                                value={this.state.blueVal}\n                                minimumValue={0}\n                                maximumValue={255}\n                                step={1}\n                                thumbStyle={{\n                                    backgroundColor: 'blue',\n                                }}\n                                onValueChange={(value) => {\n                                    this.setState({\n                                        blueVal: value\n                                    })\n                                }}\n\n                            ></Slider>\n                        </View>\n\n                        {/* ---End Blue Slider--- */}\n                    </View>\n                    {/* ---End Container Slider--- */}\n                    <View style={{\n                        bottom: 40,\n                    }}>\n                        <Button\n                            title=\"Guess Color\"\n                            buttonStyle={style.btn_style}\n                            containerStyle={style.btn_container}\n                            onPress={() => { this.answerCheck() }}\n                        />\n                    </View>\n                </View>\n                //#endregion\n            )\n        }\n        // jika waktu habis dan result tidak tampil, tampilkan dialog \n        else if (this.state.count <= 0 && !this.state.result) {\n            return (\n                //#region GAMEOVER\n                <Dialog\n                    isVisible={true}\n                    overlayStyle={style.dialog}\n                >\n                    <Dialog.Title title=\"GAME OVER\" />\n                    <Text>Good Game Great Eyes!</Text>\n                    <Dialog.Actions>\n                        <Dialog.Button title=\"SHOW RESULT\" onPress={() =>\n                            this.doSave(global.activeuser, this.state.skor)\n                        } />\n                    </Dialog.Actions>\n                </Dialog>\n                //#endregion\n            )\n        }\n        // jika give up dan result tidak tampil, tampilkan dialog\n        else if (global.giveup == true && !this.state.result) {\n            return (\n                //#region GAMEOVER\n                <Dialog\n                    isVisible={true}\n                    overlayStyle={style.dialog}\n                >\n                    <Dialog.Title title=\"GAME OVER\" />\n                    <Text>Good Game Great Eyes!</Text>\n                    <Dialog.Actions>\n                        <Dialog.Button title=\"SHOW RESULT\" onPress={() =>\n                            this.doSave(global.activeuser, this.state.skor)\n                        } />\n                    </Dialog.Actions>\n                </Dialog>\n                //#endregion\n            )\n        }\n        // jika tampilan result true, tampilkan result\n        else if (this.state.result == true) {\n            global.giveup = false;\n            this.props.navigation.setOptions({ title: 'Result' })\n            var avegues = 0;\n            if (this.state.nomor == 0)\n                avegues = (this.state.totalTebakan / 1).toFixed(2);\n            else if (this.state.totalTebakan != 0 || this.state.nomor != 0)\n                avegues = (this.state.totalTebakan / this.state.nomor).toFixed(2);\n            return (\n                <View style={style.container}>\n                    <Text style={style.text_judul}>\n                        Final Score : {this.state.skor}\n                    </Text>\n                    <Text style={style.text_body}>\n                        Total time played : {toHHMMSS(this.state.time)}{'\\n'}{'\\n'}\n                        Color mixed : {this.state.nomor}{'\\n'}{'\\n'}\n                        Average guesses : {avegues}{'\\n'}{'\\n'}\n                        Hints used : {this.state.hintuse}\n                    </Text>\n                    <View style={{\n                        flexDirection: 'row',\n                        flexWrap: 'wrap',\n                        justifyContent: 'space-evenly',\n                        marginTop: 15,\n                    }}>\n\n                        <Button title={'HIGH SCORES'}\n                            buttonStyle={style.btn_style}\n                            containerStyle={{ width: '42%', margin: 5 }}\n                            onPress={() => this.props.navigation.navigate(\"HighScore\")}\n                        />\n\n                        <Button title={'PLAY AGAIN'}\n                            buttonStyle={style.btn_style}\n                            containerStyle={{ width: '42%', margin: 5 }}\n                            onPress={() => this.restart()} />\n                    </View>\n                    <Button title={'MAIN MENU'}\n                        buttonStyle={style.btn_style}\n                        containerStyle={style.btn_container}\n                        onPress={() => this.props.navigation.navigate(\"Home\")} />\n                </View>\n            )\n        }\n\n    }\n}\n\nfunction toHHMMSS(v) {\n    var sec_num = parseInt(v, 10);\n    var hours = Math.floor(sec_num / 3600);\n    var minutes = Math.floor((sec_num - (hours * 3600)) / 60);\n    var seconds = sec_num - (hours * 3600) - (minutes * 60);\n\n    if (hours < 10) { hours = \"0\" + hours; }\n    if (minutes < 10) { minutes = \"0\" + minutes; }\n    if (seconds < 10) { seconds = \"0\" + seconds; }\n    return hours + ':' + minutes + ':' + seconds;\n}"],"mappings":";;;;;;;;;;;;;AACA,SAASA,cAAT,EAAyBC,IAAzB,EAA+BC,MAA/B,EAAuCC,MAAvC,EAA+CC,MAA/C,QAA6D,aAA7D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,MAAP,MAAmB,SAAnB;;;;IAEqBC,U;;;;;EAOjB,sBAAc;IAAA;;IAAA;;IACV;IADU,MANdC,KAMc,GANN,GAMM;;IAAA,MAoFdC,MApFc;MAAA,6BAoFL,WAAOC,QAAP,EAAiBC,IAAjB,EAA0B;QAC/B,IAAI;UAEA,IAAMC,OAAO,SAASP,YAAY,CAACQ,OAAb,CAAqB,QAArB,CAAtB;;UACA,IAAID,OAAO,IAAI,IAAf,EAAqB;YACjBE,OAAO,CAACC,KAAR,CAAc,aAAaH,OAA3B;YACA,IAAII,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWN,OAAX,CAAV;YACAE,OAAO,CAACC,KAAR,CAAc,SAASC,GAAvB;YACA,IAAIG,IAAI,GAAG,CAACT,QAAD,EAAWC,IAAX,CAAX;YACAG,OAAO,CAACC,KAAR,CAAc,UAAUI,IAAxB;YACAH,GAAG,CAACI,IAAJ,CAASD,IAAT;YACA,MAAMd,YAAY,CAACgB,OAAb,CAAqB,QAArB,EAA+BJ,IAAI,CAACK,SAAL,CAAeN,GAAf,CAA/B,CAAN;UACH,CARD,MAQO,IAAIJ,OAAO,IAAI,IAAf,EAAqB;YACxB,IAAIO,KAAI,GAAG,CAAC,CAACT,QAAD,EAAWC,IAAX,CAAD,CAAX;YACAG,OAAO,CAACC,KAAR,CAAc,UAAUI,KAAxB;YACA,MAAMd,YAAY,CAACgB,OAAb,CAAqB,QAArB,EAA+BJ,IAAI,CAACK,SAAL,CAAeH,KAAf,CAA/B,CAAN;UACH;;UACDI,KAAK,CAAC,wBAAD,CAAL;;UACA,MAAKC,QAAL,CAAc;YACVC,MAAM,EAAE;UADE,CAAd;QAKH,CAtBD,CAsBE,OAAOC,CAAP,EAAU,CAEX;MACJ,CA9Ga;;MAAA;QAAA;MAAA;IAAA;;IAEV,MAAKC,KAAL,GAAa;MACTC,KAAK,EAAE,MAAKpB,KADH;MAETqB,IAAI,EAAE,CAFG;MAGTC,QAAQ,EAAE,IAHD;MAITC,KAAK,EAAE,KAJE;MAKTC,KAAK,EAAE,KALE;MAMTC,KAAK,EAAE,KANE;MAOTC,cAAc,EAAEC,WAAW,CAAC,YAAM;QAE9B,IAAI,MAAKR,KAAL,CAAWC,KAAX,IAAoB,CAApB,IAAyB,CAACQ,MAAM,CAACC,aAAjC,IAAkD,CAAC,MAAKV,KAAL,CAAWF,MAAlE,EAA0E;UACtE,MAAKD,QAAL,CACI,MAAKG,KAAL,GAAa;YACTC,KAAK,EAAE,MAAKD,KAAL,CAAWC,KAAX,GAAmB,CADjB;YAETC,IAAI,EAAE,MAAKF,KAAL,CAAWE,IAAX,GAAkB;UAFf,CADjB;QAMH;;QAED,IAAI,MAAKF,KAAL,CAAWhB,IAAX,IAAmB,GAAnB,IAA0B,MAAKgB,KAAL,CAAWI,KAAX,IAAoB,KAAlD,EAAyD;UACrD,MAAKP,QAAL,CACI,MAAKG,KAAL,GAAa;YACTG,QAAQ,EAAE;UADD,CADjB;QAKH,CAND,MAMO,IAAI,MAAKH,KAAL,CAAWhB,IAAX,IAAmB,GAAnB,IAA0B,MAAKgB,KAAL,CAAWK,KAAX,IAAoB,KAAlD,EAAyD;UAC5D,MAAKR,QAAL,CACI,MAAKG,KAAL,GAAa;YACTG,QAAQ,EAAE;UADD,CADjB;QAKH,CANM,MAMA,IAAI,MAAKH,KAAL,CAAWhB,IAAX,IAAmB,GAAnB,IAA0B,MAAKgB,KAAL,CAAWM,KAAX,IAAoB,KAAlD,EAAyD;UAC5D,MAAKT,QAAL,CACI,MAAKG,KAAL,GAAa;YACTG,QAAQ,EAAE;UADD,CADjB;QAKH,CANM,MAMA,IAAI,MAAKH,KAAL,CAAWI,KAAX,IAAoB,IAApB,IAA4B,MAAKJ,KAAL,CAAWK,KAAX,IAAoB,IAAhD,IAAwD,MAAKL,KAAL,CAAWM,KAAX,IAAoB,IAAhF,EAAsF;UACzF,MAAKT,QAAL,CACI,MAAKG,KAAL,GAAa;YACTG,QAAQ,EAAE;UADD,CADjB;QAKH,CANM,MAMA,IAAI,MAAKH,KAAL,CAAWhB,IAAX,GAAkB,GAAtB,EAA2B;UAC9B,MAAKa,QAAL,CACI,MAAKG,KAAL,GAAa;YACTG,QAAQ,EAAE;UADD,CADjB;QAKH;;QAED,IAAIM,MAAM,CAACC,aAAX,EAA0B;UACtB,MAAKb,QAAL,CACI,MAAKG,KAAL,GAAa;YACTU,aAAa,EAAE;UADN,CADjB;QAKH;MACJ,CAlD0B,EAkDxB,IAlDwB,CAPlB;MA0DTC,MAAM,EAAE,GA1DC;MA2DTC,QAAQ,EAAE,GA3DD;MA4DTC,OAAO,EAAE,GA5DA;MA6DTC,IAAI,EAAE,EA7DG;MA8DTC,cAAc,EAAE,CA9DP;MA+DTC,eAAe,EAAE,CA/DR;MAiETlB,MAAM,EAAE,KAjEC;MAmETd,IAAI,EAAE,IAnEG;MAoETiC,OAAO,EAAE,CApEA;MAqETC,YAAY,EAAE,CArEL;MAsETC,SAAS,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,IAAkC,CAtEpC;MAuETC,WAAW,EAAEH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,IAAkC,CAvEtC;MAwETE,UAAU,EAAEJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,IAAkC,CAxErC;MAyETG,KAAK,EAAE,CAzEE;MA0ETC,OAAO,EAAE,CA1EA;MA2ETC,OAAO,EAAE,CA3EA;MA4ET5C,QAAQ,EAAE0B,MAAM,CAACmB;IA5ER,CAAb;IAFU;EAgFb;;;;WAgCD,uBAAc;MACV,KAAK5B,KAAL,CAAWiB,OAAX;MACA,KAAKjB,KAAL,CAAWkB,YAAX;MACA,IAAIW,KAAJ;MACA,IAAIC,EAAJ;MACA,IAAIC,QAAJ;;MAMA,IAAI,KAAK/B,KAAL,CAAWW,MAAX,IAAqB,KAAKX,KAAL,CAAWmB,SAAhC,IAA6C,KAAKnB,KAAL,CAAWY,QAAX,IAAuB,KAAKZ,KAAL,CAAWuB,WAA/E,IAA8F,KAAKvB,KAAL,CAAWa,OAAX,IAAsB,KAAKb,KAAL,CAAWwB,UAAnI,EAA+I;QAC3I,IAAI,KAAKxB,KAAL,CAAWiB,OAAX,IAAsB,CAA1B,EACI,KAAKjB,KAAL,CAAWgB,eAAX,GAA6B,CAA7B,CADJ,KAEK,IAAI,KAAKhB,KAAL,CAAWiB,OAAX,GAAqB,CAAzB,EACD,KAAKjB,KAAL,CAAWgB,eAAX,GAA6B,IAAI,KAAKhB,KAAL,CAAWiB,OAA5C;QACJc,QAAQ,GAAG,KAAK/B,KAAL,CAAWe,cAAX,GAA4B,KAAKf,KAAL,CAAWgB,eAAvC,GAAyD,KAAKhB,KAAL,CAAWC,KAA/E;QACAd,OAAO,CAACC,KAAR,CAAc,aAAa,KAAKY,KAAL,CAAWe,cAAtC;QACA5B,OAAO,CAACC,KAAR,CAAc,cAAc,KAAKY,KAAL,CAAWgB,eAAvC;QACA7B,OAAO,CAACC,KAAR,CAAc,eAAe,KAAKY,KAAL,CAAWC,KAAxC;QACAd,OAAO,CAACC,KAAR,CAAc,gBAAgB2C,QAA9B;QACAF,KAAK,GAAG,KAAK7B,KAAL,CAAWhB,IAAX,GAAkB+C,QAA1B;QACA5C,OAAO,CAACC,KAAR,CAAc,gBAAgByC,KAA9B;QACAC,EAAE,GAAG,KAAK9B,KAAL,CAAWyB,KAAX,GAAmB,CAAxB;QACAtC,OAAO,CAACC,KAAR,CAAc,sBAAsB0C,EAApC;QACA,KAAKjC,QAAL,CACI,KAAKG,KAAL,GAAa;UACThB,IAAI,EAAE6C,KADG;UAET5B,KAAK,EAAE,KAAKpB,KAFH;UAGTuB,KAAK,EAAE,KAHE;UAITC,KAAK,EAAE,KAJE;UAKTC,KAAK,EAAE,KALE;UAMTmB,KAAK,EAAEK,EANE;UAOTnB,MAAM,EAAE,GAPC;UAQTC,QAAQ,EAAE,GARD;UASTC,OAAO,EAAE,GATA;UAUTC,IAAI,EAAE,EAVG;UAWTC,cAAc,EAAE,CAXP;UAYTC,eAAe,EAAE,CAZR;UAcTb,QAAQ,EAAE,KAdD;UAeTc,OAAO,EAAE,CAfA;UAgBTE,SAAS,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,IAAkC,CAhBpC;UAiBTC,WAAW,EAAEH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,IAAkC,CAjBtC;UAkBTE,UAAU,EAAEJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,IAAkC;QAlBrC,CADjB;QAsBAnC,OAAO,CAACC,KAAR,CAAc,KAAKY,KAAL,CAAWmB,SAAzB;QACAhC,OAAO,CAACC,KAAR,CAAc,KAAKY,KAAL,CAAWuB,WAAzB;QACApC,OAAO,CAACC,KAAR,CAAc,KAAKY,KAAL,CAAWwB,UAAzB;MACH,CAvCD,MAyCK;QACD5B,KAAK,CAAC,gCAAgCa,MAAM,CAACmB,UAAvC,GAAoD,KAArD,CAAL;MACH;IAqFJ;;;WAED,mBAAU;MACN,KAAK/B,QAAL,CACI,KAAKG,KAAL,GAAa;QACTC,KAAK,EAAE,KAAKpB,KADH;QAETuB,KAAK,EAAE,KAFE;QAGTC,KAAK,EAAE,KAHE;QAITC,KAAK,EAAE,KAJE;QAKTJ,IAAI,EAAE,CALG;QAMTS,MAAM,EAAE,GANC;QAOTC,QAAQ,EAAE,GAPD;QAQTC,OAAO,EAAE,GARA;QASTC,IAAI,EAAE,EATG;QAUTC,cAAc,EAAE,CAVP;QAWTC,eAAe,EAAE,CAXR;QAYTlB,MAAM,EAAE,KAZC;QAaTK,QAAQ,EAAE,IAbD;QAeTnB,IAAI,EAAE,CAfG;QAgBTiC,OAAO,EAAE,CAhBA;QAiBTC,YAAY,EAAE,CAjBL;QAkBTC,SAAS,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,IAAkC,CAlBpC;QAmBTC,WAAW,EAAEH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,IAAkC,CAnBtC;QAoBTE,UAAU,EAAEJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,IAAkC,CApBrC;QAqBTG,KAAK,EAAE,CArBE;QAsBTC,OAAO,EAAE,CAtBA;QAuBTC,OAAO,EAAE;MAvBA,CADjB;IA4BH;;;WAED,iBAAQK,IAAR,EAAc;MACV7C,OAAO,CAACC,KAAR,CAAc4C,IAAd;MACA,IAAIC,SAAS,GAAGD,IAAI,CAACZ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBU,IAAI,CAACE,MAAhC,CAAD,CAApB;MACA/C,OAAO,CAACC,KAAR,CAAc6C,SAAd;;MACA,QAAQA,SAAR;QACI,KAAK,KAAKjC,KAAL,CAAWmB,SAAhB;UACIhC,OAAO,CAACC,KAAR,CAAc,WAAd;;UACA,IAAI,CAAC,KAAKY,KAAL,CAAWI,KAAhB,EAAuB;YACnB,KAAKJ,KAAL,CAAWI,KAAX,GAAmB,IAAnB;YACA,KAAKJ,KAAL,CAAWc,IAAX,IAAmB,MAAM,KAAKd,KAAL,CAAWmB,SAApC;UACH,CAHD,MAGO;YACH,KAAKgB,OAAL,CAAa,CAAC,KAAKnC,KAAL,CAAWmB,SAAZ,EAAuB,KAAKnB,KAAL,CAAWuB,WAAlC,EAA+C,KAAKvB,KAAL,CAAWwB,UAA1D,CAAb;UACH;;UACD;;QACJ,KAAK,KAAKxB,KAAL,CAAWuB,WAAhB;UACIpC,OAAO,CAACC,KAAR,CAAc,aAAd;;UACA,IAAI,CAAC,KAAKY,KAAL,CAAWK,KAAhB,EAAuB;YACnB,KAAKL,KAAL,CAAWK,KAAX,GAAmB,IAAnB;YACA,KAAKL,KAAL,CAAWc,IAAX,IAAmB,MAAM,KAAKd,KAAL,CAAWuB,WAApC;UACH,CAHD,MAGO;YACH,KAAKY,OAAL,CAAa,CAAC,KAAKnC,KAAL,CAAWmB,SAAZ,EAAuB,KAAKnB,KAAL,CAAWuB,WAAlC,EAA+C,KAAKvB,KAAL,CAAWwB,UAA1D,CAAb;UACH;;UACD;;QACJ,KAAK,KAAKxB,KAAL,CAAWwB,UAAhB;UACIrC,OAAO,CAACC,KAAR,CAAc,YAAd;;UACA,IAAI,CAAC,KAAKY,KAAL,CAAWM,KAAhB,EAAuB;YACnB,KAAKN,KAAL,CAAWM,KAAX,GAAmB,IAAnB;YACA,KAAKN,KAAL,CAAWc,IAAX,IAAmB,MAAM,KAAKd,KAAL,CAAWwB,UAApC;UACH,CAHD,MAGO;YACH,KAAKW,OAAL,CAAa,CAAC,KAAKnC,KAAL,CAAWmB,SAAZ,EAAuB,KAAKnB,KAAL,CAAWuB,WAAlC,EAA+C,KAAKvB,KAAL,CAAWwB,UAA1D,CAAb;UACH;;UACD;MA3BR;IA6BH;;;WAED,mBAAU;MACN,IAAIY,CAAC,GAAG,KAAKpC,KAAL,CAAW0B,OAAX,GAAqB,CAA7B;MACA,KAAK1B,KAAL,CAAWhB,IAAX,GAAkB,KAAKgB,KAAL,CAAWhB,IAAX,GAAkB,GAApC;MAEA,KAAKmD,OAAL,CAAa,CAAC,KAAKnC,KAAL,CAAWmB,SAAZ,EAAuB,KAAKnB,KAAL,CAAWuB,WAAlC,EAA+C,KAAKvB,KAAL,CAAWwB,UAA1D,CAAb;MAEA,KAAK3B,QAAL,CACI,KAAKG,KAAL,GAAa;QAETC,KAAK,EAAE,CAAC,KAAKD,KAAL,CAAWC,KAAX,GAAmB,CAApB,EAAuBoC,OAAvB,CAA+B,CAA/B,CAFE;QAQTtB,cAAc,EAAE,GARP;QASTW,OAAO,EAAEU;MATA,CADjB;IAaH;;;WAED,kBAAS;MAAA;;MAEL,IAAI,KAAKpC,KAAL,CAAWC,KAAX,GAAmB,CAAnB,IAAwB,CAACQ,MAAM,CAAC6B,MAAhC,IAA0C,CAAC,KAAKtC,KAAL,CAAWF,MAA1D,EAAkE;QAC9D,OAEI,MAAC,IAAD;UAAM,KAAK,EAAErB,KAAK,CAAC8D,SAAnB;UAAA,WACI,MAAC,IAAD;YAAM,KAAK,EAAE9D,KAAK,CAAC+D,eAAnB;YAAA,WACI,KAAC,cAAD;cAAgB,OAAO,EAAC,aAAxB;cACI,KAAK,EAAE,IAAK,KAAKxC,KAAL,CAAWC,KAAX,GAAmB,KAAKpB,KADxC;cAEI,KAAK,EAAE,SAAS,KAAKmB,KAAL,CAAWmB,SAApB,GAAgC,GAAhC,GAAsC,KAAKnB,KAAL,CAAWuB,WAAjD,GAA+D,GAA/D,GAAqE,KAAKvB,KAAL,CAAWwB,UAAhF,GAA6F,GAFxG;cAII,KAAK,EAAE/C,KAAK,CAAC+D;YAJjB,EADJ,EAMI,KAAC,IAAD;cAAM,KAAK,EAAE/D,KAAK,CAACgE,oBAAnB;cAAA,UAA0CC,QAAQ,CAAC,KAAK1C,KAAL,CAAWC,KAAZ;YAAlD,EANJ;UAAA,EADJ,EASI,MAAC,IAAD;YAAM,KAAK,EAAExB,KAAK,CAACkE,UAAnB;YAAA,sBAAuC,KAAK3C,KAAL,CAAWhB,IAAlD;UAAA,EATJ,EAYI,MAAC,IAAD;YAAM,KAAK,EAAE;cACT4D,aAAa,EAAE,KADN;cAETC,QAAQ,EAAE,MAFD;cAGTC,UAAU,EAAE,YAHH;cAITC,SAAS,EAAE;YAJF,CAAb;YAAA,WAMI,MAAC,IAAD;cAAM,KAAK,EAAE;gBACTC,KAAK,EAAE;cADE,CAAb;cAAA,WAGI,KAAC,IAAD;gBAAM,KAAK,EAAE;kBACTC,QAAQ,EAAE,EADD;kBAETC,KAAK,EAAE,SAFE;kBAGTF,KAAK,EAAE,MAHE;kBAITG,SAAS,EAAE;gBAJF,CAAb;gBAAA;cAAA,EAHJ,EASI,KAAC,IAAD;gBAAM,KAAK,EAAE;kBACTH,KAAK,EAAE,GADE;kBAETI,MAAM,EAAE,GAFC;kBAGTC,MAAM,EAAE,EAHC;kBAITC,eAAe,EAAE,SAAS,KAAKtD,KAAL,CAAWmB,SAApB,GAAgC,GAAhC,GAAsC,KAAKnB,KAAL,CAAWuB,WAAjD,GAA+D,GAA/D,GAAqE,KAAKvB,KAAL,CAAWwB,UAAhF,GAA6F,GAJrG;kBAKT+B,SAAS,EAAE,QALF;kBAMTC,WAAW,EAAE,MANJ;kBAOTC,WAAW,EAAE;gBAPJ;cAAb,EATJ;YAAA,EANJ,EAyBI,MAAC,IAAD;cAAM,KAAK,EAAE;gBACTT,KAAK,EAAE;cADE,CAAb;cAAA,WAGI,KAAC,IAAD;gBAAM,KAAK,EAAE;kBACTC,QAAQ,EAAE,EADD;kBAETC,KAAK,EAAE,SAFE;kBAGTF,KAAK,EAAE,MAHE;kBAITG,SAAS,EAAE;gBAJF,CAAb;gBAAA;cAAA,EAHJ,EASI,KAAC,IAAD;gBAAM,KAAK,EAAE;kBACTH,KAAK,EAAE,GADE;kBAETI,MAAM,EAAE,GAFC;kBAGTC,MAAM,EAAE,EAHC;kBAITC,eAAe,EAAE,UAAU,KAAKtD,KAAL,CAAWW,MAArB,GAA8B,GAA9B,GAAoC,KAAKX,KAAL,CAAWY,QAA/C,GAA0D,GAA1D,GAAgE,KAAKZ,KAAL,CAAWa,OAA3E,GAAqF,KAJ7F;kBAKT0C,SAAS,EAAE,QALF;kBAMTC,WAAW,EAAE,MANJ;kBAOTC,WAAW,EAAE;gBAPJ;cAAb,EATJ;YAAA,EAzBJ;UAAA,EAZJ,EA2DI,MAAC,IAAD;YAAA,WACI,KAAC,IAAD;cAAM,KAAK,EAAE;gBACTR,QAAQ,EAAE,EADD;gBAETC,KAAK,EAAE,SAFE;gBAGTG,MAAM,EAAE,EAHC;gBAITE,SAAS,EAAE;cAJF,CAAb;cAAA,UAKI,KAAKvD,KAAL,CAAWc;YALf,EADJ,EAOI,KAAC,MAAD;cACI,KAAK,EAAC,UADV;cAEI,OAAO,EAAE,mBAAM;gBAAE,MAAI,CAAC4C,OAAL;cAAgB,CAFrC;cAGI,WAAW,EAAEjF,KAAK,CAACkF,SAHvB;cAII,cAAc,EAAElF,KAAK,CAACmF,aAJ1B;cAKI,QAAQ,EAAE,KAAK5D,KAAL,CAAWG;YALzB,EAPJ;UAAA,EA3DJ,EA2EI,MAAC,IAAD;YAAM,KAAK,EAAE1B,KAAK,CAAC8D,SAAnB;YAAA,WAEI,MAAC,IAAD;cAAM,KAAK,EAAE9D,KAAK,CAACoF,gBAAnB;cAAA,WACI,MAAC,IAAD;gBACI,KAAK,EAAE;kBACHZ,QAAQ,EAAE,EADP;kBAEHC,KAAK,EAAE,KAFJ;kBAGHG,MAAM,EAAE,EAHL;kBAIHE,SAAS,EAAE;gBAJR,CADX;gBAAA,oBAQU,KAAKvD,KAAL,CAAWW,MARrB;cAAA,EADJ,EAWI,KAAC,MAAD;gBACI,KAAK,EAAE,KAAKX,KAAL,CAAWW,MADtB;gBAEI,YAAY,EAAE,CAFlB;gBAGI,YAAY,EAAE,GAHlB;gBAII,IAAI,EAAE,CAJV;gBAKI,UAAU,EAAE;kBACR2C,eAAe,EAAE;gBADT,CALhB;gBAQI,aAAa,EAAE,uBAACQ,KAAD,EAAW;kBACtB,MAAI,CAACjE,QAAL,CAAc;oBACVc,MAAM,EAAEmD;kBADE,CAAd;gBAGH;cAZL,EAXJ;YAAA,EAFJ,EA+BI,MAAC,IAAD;cAAM,KAAK,EAAErF,KAAK,CAACoF,gBAAnB;cAAA,WACI,MAAC,IAAD;gBACI,KAAK,EAAE;kBACHZ,QAAQ,EAAE,EADP;kBAEHC,KAAK,EAAE,OAFJ;kBAGHG,MAAM,EAAE,EAHL;kBAIHE,SAAS,EAAE;gBAJR,CADX;gBAAA,sBAQY,KAAKvD,KAAL,CAAWY,QARvB;cAAA,EADJ,EAWI,KAAC,MAAD;gBACI,KAAK,EAAE,KAAKZ,KAAL,CAAWY,QADtB;gBAEI,YAAY,EAAE,CAFlB;gBAGI,YAAY,EAAE,GAHlB;gBAII,IAAI,EAAE,CAJV;gBAKI,UAAU,EAAE;kBACR0C,eAAe,EAAE;gBADT,CALhB;gBAQI,aAAa,EAAE,uBAACQ,KAAD,EAAW;kBACtB,MAAI,CAACjE,QAAL,CAAc;oBACVe,QAAQ,EAAEkD;kBADA,CAAd;gBAGH;cAZL,EAXJ;YAAA,EA/BJ,EA4DI,MAAC,IAAD;cAAM,KAAK,EAAErF,KAAK,CAACoF,gBAAnB;cAAA,WACI,MAAC,IAAD;gBACI,KAAK,EAAE;kBACHZ,QAAQ,EAAE,EADP;kBAEHC,KAAK,EAAE,MAFJ;kBAGHG,MAAM,EAAE,EAHL;kBAIHE,SAAS,EAAE;gBAJR,CADX;gBAAA,qBAQW,KAAKvD,KAAL,CAAWa,OARtB;cAAA,EADJ,EAWI,KAAC,MAAD;gBACI,KAAK,EAAE,KAAKb,KAAL,CAAWa,OADtB;gBAEI,YAAY,EAAE,CAFlB;gBAGI,YAAY,EAAE,GAHlB;gBAII,IAAI,EAAE,CAJV;gBAKI,UAAU,EAAE;kBACRyC,eAAe,EAAE;gBADT,CALhB;gBAQI,aAAa,EAAE,uBAACQ,KAAD,EAAW;kBACtB,MAAI,CAACjE,QAAL,CAAc;oBACVgB,OAAO,EAAEiD;kBADC,CAAd;gBAGH;cAZL,EAXJ;YAAA,EA5DJ;UAAA,EA3EJ,EAsKI,KAAC,IAAD;YAAM,KAAK,EAAE;cACTC,MAAM,EAAE;YADC,CAAb;YAAA,UAGI,KAAC,MAAD;cACI,KAAK,EAAC,aADV;cAEI,WAAW,EAAEtF,KAAK,CAACkF,SAFvB;cAGI,cAAc,EAAElF,KAAK,CAACmF,aAH1B;cAII,OAAO,EAAE,mBAAM;gBAAE,MAAI,CAACI,WAAL;cAAoB;YAJzC;UAHJ,EAtKJ;QAAA,EAFJ;MAqLH,CAtLD,MAwLK,IAAI,KAAKhE,KAAL,CAAWC,KAAX,IAAoB,CAApB,IAAyB,CAAC,KAAKD,KAAL,CAAWF,MAAzC,EAAiD;QAClD,OAEI,MAAC,MAAD;UACI,SAAS,EAAE,IADf;UAEI,YAAY,EAAErB,KAAK,CAACwF,MAFxB;UAAA,WAII,KAAC,MAAD,CAAQ,KAAR;YAAc,KAAK,EAAC;UAApB,EAJJ,EAKI,KAAC,IAAD;YAAA;UAAA,EALJ,EAMI,KAAC,MAAD,CAAQ,OAAR;YAAA,UACI,KAAC,MAAD,CAAQ,MAAR;cAAe,KAAK,EAAC,aAArB;cAAmC,OAAO,EAAE;gBAAA,OACxC,MAAI,CAACnF,MAAL,CAAY2B,MAAM,CAACmB,UAAnB,EAA+B,MAAI,CAAC5B,KAAL,CAAWhB,IAA1C,CADwC;cAAA;YAA5C;UADJ,EANJ;QAAA,EAFJ;MAgBH,CAjBI,MAmBA,IAAIyB,MAAM,CAAC6B,MAAP,IAAiB,IAAjB,IAAyB,CAAC,KAAKtC,KAAL,CAAWF,MAAzC,EAAiD;QAClD,OAEI,MAAC,MAAD;UACI,SAAS,EAAE,IADf;UAEI,YAAY,EAAErB,KAAK,CAACwF,MAFxB;UAAA,WAII,KAAC,MAAD,CAAQ,KAAR;YAAc,KAAK,EAAC;UAApB,EAJJ,EAKI,KAAC,IAAD;YAAA;UAAA,EALJ,EAMI,KAAC,MAAD,CAAQ,OAAR;YAAA,UACI,KAAC,MAAD,CAAQ,MAAR;cAAe,KAAK,EAAC,aAArB;cAAmC,OAAO,EAAE;gBAAA,OACxC,MAAI,CAACnF,MAAL,CAAY2B,MAAM,CAACmB,UAAnB,EAA+B,MAAI,CAAC5B,KAAL,CAAWhB,IAA1C,CADwC;cAAA;YAA5C;UADJ,EANJ;QAAA,EAFJ;MAgBH,CAjBI,MAmBA,IAAI,KAAKgB,KAAL,CAAWF,MAAX,IAAqB,IAAzB,EAA+B;QAChCW,MAAM,CAAC6B,MAAP,GAAgB,KAAhB;QACA,KAAK4B,KAAL,CAAWC,UAAX,CAAsBC,UAAtB,CAAiC;UAAEC,KAAK,EAAE;QAAT,CAAjC;QACA,IAAIC,OAAO,GAAG,CAAd;QACA,IAAI,KAAKtE,KAAL,CAAWyB,KAAX,IAAoB,CAAxB,EACI6C,OAAO,GAAG,CAAC,KAAKtE,KAAL,CAAWkB,YAAX,GAA0B,CAA3B,EAA8BmB,OAA9B,CAAsC,CAAtC,CAAV,CADJ,KAEK,IAAI,KAAKrC,KAAL,CAAWkB,YAAX,IAA2B,CAA3B,IAAgC,KAAKlB,KAAL,CAAWyB,KAAX,IAAoB,CAAxD,EACD6C,OAAO,GAAG,CAAC,KAAKtE,KAAL,CAAWkB,YAAX,GAA0B,KAAKlB,KAAL,CAAWyB,KAAtC,EAA6CY,OAA7C,CAAqD,CAArD,CAAV;QACJ,OACI,MAAC,IAAD;UAAM,KAAK,EAAE5D,KAAK,CAAC8D,SAAnB;UAAA,WACI,MAAC,IAAD;YAAM,KAAK,EAAE9D,KAAK,CAAC8F,UAAnB;YAAA,6BACmB,KAAKvE,KAAL,CAAWhB,IAD9B;UAAA,EADJ,EAII,MAAC,IAAD;YAAM,KAAK,EAAEP,KAAK,CAAC+F,SAAnB;YAAA,mCACyB9B,QAAQ,CAAC,KAAK1C,KAAL,CAAWE,IAAZ,CADjC,EACoD,IADpD,EAC0D,IAD1D,oBAEmB,KAAKF,KAAL,CAAWyB,KAF9B,EAEqC,IAFrC,EAE2C,IAF3C,wBAGuB6C,OAHvB,EAGgC,IAHhC,EAGsC,IAHtC,mBAIkB,KAAKtE,KAAL,CAAW0B,OAJ7B;UAAA,EAJJ,EAUI,MAAC,IAAD;YAAM,KAAK,EAAE;cACTkB,aAAa,EAAE,KADN;cAETC,QAAQ,EAAE,MAFD;cAGT4B,cAAc,EAAE,cAHP;cAIT1B,SAAS,EAAE;YAJF,CAAb;YAAA,WAOI,KAAC,MAAD;cAAQ,KAAK,EAAE,aAAf;cACI,WAAW,EAAEtE,KAAK,CAACkF,SADvB;cAEI,cAAc,EAAE;gBAAEX,KAAK,EAAE,KAAT;gBAAgBK,MAAM,EAAE;cAAxB,CAFpB;cAGI,OAAO,EAAE;gBAAA,OAAM,MAAI,CAACa,KAAL,CAAWC,UAAX,CAAsBO,QAAtB,CAA+B,WAA/B,CAAN;cAAA;YAHb,EAPJ,EAaI,KAAC,MAAD;cAAQ,KAAK,EAAE,YAAf;cACI,WAAW,EAAEjG,KAAK,CAACkF,SADvB;cAEI,cAAc,EAAE;gBAAEX,KAAK,EAAE,KAAT;gBAAgBK,MAAM,EAAE;cAAxB,CAFpB;cAGI,OAAO,EAAE;gBAAA,OAAM,MAAI,CAACsB,OAAL,EAAN;cAAA;YAHb,EAbJ;UAAA,EAVJ,EA4BI,KAAC,MAAD;YAAQ,KAAK,EAAE,WAAf;YACI,WAAW,EAAElG,KAAK,CAACkF,SADvB;YAEI,cAAc,EAAElF,KAAK,CAACmF,aAF1B;YAGI,OAAO,EAAE;cAAA,OAAM,MAAI,CAACM,KAAL,CAAWC,UAAX,CAAsBO,QAAtB,CAA+B,MAA/B,CAAN;YAAA;UAHb,EA5BJ;QAAA,EADJ;MAmCH;IAEJ;;;;EAxmBmClG,KAAK,CAACoG,S;;SAAzBhG,U;;AA2mBrB,SAAS8D,QAAT,CAAkBmC,CAAlB,EAAqB;EACjB,IAAIC,OAAO,GAAGC,QAAQ,CAACF,CAAD,EAAI,EAAJ,CAAtB;EACA,IAAIG,KAAK,GAAG5D,IAAI,CAACC,KAAL,CAAWyD,OAAO,GAAG,IAArB,CAAZ;EACA,IAAIG,OAAO,GAAG7D,IAAI,CAACC,KAAL,CAAW,CAACyD,OAAO,GAAIE,KAAK,GAAG,IAApB,IAA6B,EAAxC,CAAd;EACA,IAAIE,OAAO,GAAGJ,OAAO,GAAIE,KAAK,GAAG,IAAnB,GAA4BC,OAAO,GAAG,EAApD;;EAEA,IAAID,KAAK,GAAG,EAAZ,EAAgB;IAAEA,KAAK,GAAG,MAAMA,KAAd;EAAsB;;EACxC,IAAIC,OAAO,GAAG,EAAd,EAAkB;IAAEA,OAAO,GAAG,MAAMA,OAAhB;EAA0B;;EAC9C,IAAIC,OAAO,GAAG,EAAd,EAAkB;IAAEA,OAAO,GAAG,MAAMA,OAAhB;EAA0B;;EAC9C,OAAOF,KAAK,GAAG,GAAR,GAAcC,OAAd,GAAwB,GAAxB,GAA8BC,OAArC;AACH"},"metadata":{},"sourceType":"module"}