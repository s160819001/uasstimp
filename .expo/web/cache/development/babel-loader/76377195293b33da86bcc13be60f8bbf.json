{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport View from \"react-native-web/dist/exports/View\";\nimport { LinearProgress, Text, Button, Slider } from '@rneui/base';\nimport React from \"react\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport style from \"../assets/style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ColorMixer = function (_React$Component) {\n  _inherits(ColorMixer, _React$Component);\n\n  var _super = _createSuper(ColorMixer);\n\n  function ColorMixer() {\n    var _this;\n\n    _classCallCheck(this, ColorMixer);\n\n    _this = _super.call(this);\n    _this.batas = 255;\n    _this.state = {\n      count: _this.batas,\n      oneSecInterval: setInterval(function () {\n        _this.setState(_this.state = {\n          count: _this.state.count - 1\n        });\n      }, 1000),\n      redVal: 0,\n      greenVal: 0,\n      blueVal: 0,\n      hint: ''\n    };\n    return _this;\n  }\n\n  _createClass(ColorMixer, [{\n    key: \"showHint\",\n    value: function showHint() {\n      this.setState(this.state = {\n        hint: \"Hint : \" + 'xxx'\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        style: style.container,\n        children: [_jsxs(View, {\n          style: style.linear_progress,\n          children: [_jsx(LinearProgress, {\n            variant: \"determinate\",\n            value: 1 - this.state.count / this.batas,\n            color: \"primary\",\n            style: style.linear_progress\n          }), _jsx(Text, {\n            style: style.text_linear_progress,\n            children: toHHMMSS(this.state.count)\n          })]\n        }), _jsx(Text, {\n          style: style.text_score,\n          children: \"Score: (score di state)\"\n        }), _jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            alignItems: 'flex-start',\n            marginTop: 20\n          },\n          children: [_jsxs(View, {\n            style: {\n              width: '50%'\n            },\n            children: [_jsx(Text, {\n              style: {\n                fontSize: 18,\n                color: '#265e80',\n                width: '100%',\n                textAlign: 'center'\n              },\n              children: \"Guess this color!\"\n            }), _jsx(View, {\n              style: {\n                width: 100,\n                height: 100,\n                margin: 10,\n                backgroundColor: \"#a1346f\",\n                alignSelf: 'center',\n                borderColor: '#000',\n                borderWidth: 2\n              }\n            })]\n          }), _jsxs(View, {\n            style: {\n              width: '50%'\n            },\n            children: [_jsx(Text, {\n              style: {\n                fontSize: 18,\n                color: '#265e80',\n                width: '100%',\n                textAlign: 'center'\n              },\n              children: \"Your color\"\n            }), _jsx(View, {\n              style: {\n                width: 100,\n                height: 100,\n                margin: 10,\n                backgroundColor: 'rgba(' + this.state.redVal + ',' + this.state.greenVal + ',' + this.state.blueVal + ',1)',\n                alignSelf: 'center',\n                borderColor: '#000',\n                borderWidth: 2\n              }\n            })]\n          })]\n        }), _jsxs(View, {\n          children: [_jsx(Text, {\n            style: {\n              fontSize: 18,\n              color: '#265e80',\n              margin: 20,\n              alignSelf: 'center'\n            },\n            children: this.state.hint\n          }), _jsx(Button, {\n            title: \"Show Hint\",\n            onPress: function onPress() {\n              _this2.showHint();\n            },\n            buttonStyle: style.btn_style,\n            containerStyle: style.btn_container\n          })]\n        }), _jsxs(View, {\n          style: style.container,\n          children: [_jsxs(View, {\n            style: style.slider_container,\n            children: [_jsxs(Text, {\n              style: {\n                fontSize: 18,\n                color: 'red',\n                margin: 20,\n                alignSelf: 'center'\n              },\n              children: [\"Red: \", this.state.redVal]\n            }), _jsx(Slider, {\n              value: this.state.value,\n              minimumValue: 0,\n              maximumValue: 255,\n              step: 1,\n              thumbStyle: {\n                backgroundColor: 'red'\n              },\n              onValueChange: function onValueChange(value) {\n                _this2.setState({\n                  redVal: value\n                });\n              }\n            })]\n          }), _jsxs(View, {\n            style: style.slider_container,\n            children: [_jsxs(Text, {\n              style: {\n                fontSize: 18,\n                color: 'green',\n                margin: 20,\n                alignSelf: 'center'\n              },\n              children: [\"Green: \", this.state.greenVal]\n            }), _jsx(Slider, {\n              minimumValue: 0,\n              maximumValue: 255,\n              step: 1,\n              thumbStyle: {\n                backgroundColor: 'green'\n              },\n              onValueChange: function onValueChange(value) {\n                _this2.setState({\n                  greenVal: value\n                });\n              }\n            })]\n          }), _jsxs(View, {\n            style: style.slider_container,\n            children: [_jsxs(Text, {\n              style: {\n                fontSize: 18,\n                color: 'blue',\n                margin: 20,\n                alignSelf: 'center'\n              },\n              children: [\"Blue: \", this.state.blueVal]\n            }), _jsx(Slider, {\n              minimumValue: 0,\n              maximumValue: 255,\n              step: 1,\n              thumbStyle: {\n                backgroundColor: 'blue'\n              },\n              onValueChange: function onValueChange(value) {\n                _this2.setState({\n                  blueVal: value\n                });\n              }\n            })]\n          })]\n        }), _jsx(View, {\n          style: {\n            bottom: 20\n          },\n          children: _jsx(Button, {\n            title: \"Guess Color\",\n            buttonStyle: style.btn_style,\n            containerStyle: style.btn_container\n          })\n        })]\n      });\n    }\n  }]);\n\n  return ColorMixer;\n}(React.Component);\n\nexport { ColorMixer as default };\n\nfunction toHHMMSS(v) {\n  var sec_num = parseInt(v, 10);\n  var hours = Math.floor(sec_num / 3600);\n  var minutes = Math.floor((sec_num - hours * 3600) / 60);\n  var seconds = sec_num - hours * 3600 - minutes * 60;\n\n  if (hours < 10) {\n    hours = \"0\" + hours;\n  }\n\n  if (minutes < 10) {\n    minutes = \"0\" + minutes;\n  }\n\n  if (seconds < 10) {\n    seconds = \"0\" + seconds;\n  }\n\n  return hours + ':' + minutes + ':' + seconds;\n}","map":{"version":3,"names":["LinearProgress","Text","Button","Slider","React","Ionicons","style","ColorMixer","batas","state","count","oneSecInterval","setInterval","setState","redVal","greenVal","blueVal","hint","container","linear_progress","text_linear_progress","toHHMMSS","text_score","flexDirection","flexWrap","alignItems","marginTop","width","fontSize","color","textAlign","height","margin","backgroundColor","alignSelf","borderColor","borderWidth","showHint","btn_style","btn_container","slider_container","value","bottom","Component","v","sec_num","parseInt","hours","Math","floor","minutes","seconds"],"sources":["/Users/davidkurniawan/Library/Mobile Documents/com~apple~CloudDocs/Documents/Semester 7/STMP/uts/fix/utsstimp/screens/colormixer.js"],"sourcesContent":["import { View, } from \"react-native\";\nimport { LinearProgress, Text, Button, Slider } from '@rneui/base';\nimport React from \"react\";\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport style from \"../assets/style\";\n\nexport default class ColorMixer extends React.Component {\n    batas = 255;\n\n    constructor() {\n        super();\n        this.state = {\n            count: this.batas,\n            oneSecInterval: setInterval(() => {\n                this.setState(\n                    this.state = {\n                        count: this.state.count - 1\n                    })\n            }, 1000),\n            redVal: 0,\n            greenVal: 0,\n            blueVal: 0,\n            hint: '',\n        }\n    }\n\n    showHint() {\n        this.setState(\n            this.state = {\n                hint: \"Hint : \"+'xxx'\n                //ambil salah satu colorVal dari state soal\n                //disini nanti juga setskornya diminus\n            }\n        )\n    }\n\n    render() {\n        return (\n            //#region GAMEON\n            <View style={style.container}>\n                <View style={style.linear_progress}>\n                    <LinearProgress variant='determinate'\n                        value={1 - (this.state.count / this.batas)}\n                        color=\"primary\"\n                        //warna e mengikuti soal\n                        style={style.linear_progress} />\n                    <Text style={style.text_linear_progress}>{toHHMMSS(this.state.count)}</Text>\n                </View>\n                <Text style={style.text_score}>Score: (score di state)</Text>\n                <View style={{\n                    flexDirection: 'row',\n                    flexWrap: 'wrap',\n                    alignItems: 'flex-start',\n                    marginTop: 20,\n                }}>\n                    <View style={{\n                        width: '50%',\n                    }}>\n                        <Text style={{\n                            fontSize: 18,\n                            color: '#265e80',\n                            width: '100%',\n                            textAlign: 'center',\n                        }}>Guess this color!</Text>\n                        <View style={{\n                            width: 100,\n                            height: 100,\n                            margin: 10,\n                            backgroundColor: \"#a1346f\",\n                            alignSelf: 'center',\n                            borderColor: '#000',\n                            borderWidth: 2,\n                        }}></View>\n                    </View>\n                    <View style={{\n                        width: '50%',\n                    }}>\n                        <Text style={{\n                            fontSize: 18,\n                            color: '#265e80',\n                            width: '100%',\n                            textAlign: 'center',\n                        }}>Your color</Text>\n                        <View style={{\n                            width: 100,\n                            height: 100,\n                            margin: 10,\n                            backgroundColor: 'rgba(' + this.state.redVal + ',' + this.state.greenVal + ',' + this.state.blueVal + ',1)',\n                            alignSelf: 'center',\n                            borderColor: '#000',\n                            borderWidth: 2,\n                        }}></View>\n                    </View>\n                </View>\n                <View>\n                    <Text style={{\n                        fontSize: 18,\n                        color: '#265e80',\n                        margin: 20,\n                        alignSelf: 'center',\n                    }}>{this.state.hint}</Text>\n                    <Button\n                        title=\"Show Hint\"\n                        onPress={() => { this.showHint() }}\n                        buttonStyle={style.btn_style}\n                        containerStyle={style.btn_container} />\n                </View>\n                {/* ---Start Container Slider--- */}\n                <View style={style.container}>\n                    {/* ---Start Red Slider--- */}\n                    <View style={style.slider_container}>\n                        <Text\n                            style={{\n                                fontSize: 18,\n                                color: 'red',\n                                margin: 20,\n                                alignSelf: 'center',\n                            }}\n                        >\n                            Red: {this.state.redVal}\n                        </Text>\n                        <Slider\n                            value={this.state.value}\n                            minimumValue={0}\n                            maximumValue={255}\n                            step={1}\n                            thumbStyle={{\n                                backgroundColor: 'red',\n                            }}\n                            onValueChange={(value) => {\n                                this.setState({\n                                    redVal: value\n                                })\n                            }}\n\n                        ></Slider>\n                    </View>\n                    {/* ---End Red Slider--- */}\n                    {/* ---Start Green Slider--- */}\n                    <View style={style.slider_container}>\n                        <Text\n                            style={{\n                                fontSize: 18,\n                                color: 'green',\n                                margin: 20,\n                                alignSelf: 'center',\n                            }}\n                        >\n                            Green: {this.state.greenVal}\n                        </Text>\n                        <Slider\n                            minimumValue={0}\n                            maximumValue={255}\n                            step={1}\n                            thumbStyle={{\n                                backgroundColor: 'green',\n                            }}\n                            onValueChange={(value) => {\n                                this.setState({\n                                    greenVal: value\n                                })\n                            }}\n\n                        ></Slider>\n                    </View>\n                    {/* ---End Green Slider--- */}\n                    {/* ---Start Blue Slider--- */}\n                    <View style={style.slider_container}>\n                        <Text\n                            style={{\n                                fontSize: 18,\n                                color: 'blue',\n                                margin: 20,\n                                alignSelf: 'center',\n                            }}\n                        >\n                            Blue: {this.state.blueVal}\n                        </Text>\n                        <Slider\n                            minimumValue={0}\n                            maximumValue={255}\n                            step={1}\n                            thumbStyle={{\n                                backgroundColor: 'blue',\n                            }}\n                            onValueChange={(value) => {\n                                this.setState({\n                                    blueVal: value\n                                })\n                            }}\n\n                        ></Slider>\n                    </View>\n                    {/* ---End Blue Slider--- */}\n                </View>\n                {/* ---End Container Slider--- */}\n                <View style={{\n                    bottom: 20,\n                }}>\n                    <Button\n                        title=\"Guess Color\"\n                        buttonStyle={style.btn_style}\n                        containerStyle={style.btn_container} />\n                </View>\n            </View>\n            //#endregion\n\n            //#region GAMEOVER\n            // <View style={style.container}>\n\n            // </View>\n            //#endregion\n        )\n    }\n}\n\nfunction toHHMMSS(v) {\n    var sec_num = parseInt(v, 10);\n    var hours = Math.floor(sec_num / 3600);\n    var minutes = Math.floor((sec_num - (hours * 3600)) / 60);\n    var seconds = sec_num - (hours * 3600) - (minutes * 60);\n\n    if (hours < 10) { hours = \"0\" + hours; }\n    if (minutes < 10) { minutes = \"0\" + minutes; }\n    if (seconds < 10) { seconds = \"0\" + seconds; }\n    return hours + ':' + minutes + ':' + seconds;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}