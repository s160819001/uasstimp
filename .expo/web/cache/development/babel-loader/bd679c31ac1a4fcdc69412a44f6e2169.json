{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Image, Avatar } from '@rneui/base';\nimport { FAB } from 'react-native-paper';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { HeaderBackButton } from '@react-navigation/elements';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList } from '@react-navigation/drawer';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { Button } from '@rneui/base';\nimport { Component } from 'react';\nimport style from \"./assets/style\";\nimport Home from \"./screens/home\";\nimport Login from \"./screens/login\";\nimport Register from \"./screens/register\";\nimport MyCreation from \"./screens/mycreation\";\nimport Leaderboard from \"./screens/leaderboard\";\nimport Settings from \"./screens/settings\";\nimport NewMeme from \"./screens/newmeme\";\nimport Detail from \"./screens/detail\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Drawer = createDrawerNavigator();\nvar Tab = createBottomTabNavigator();\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.fetchData = function () {\n      var options = {\n        method: 'POST',\n        headers: new Headers({\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }),\n        body: \"user_id=\" + _this.state.user_id\n      };\n\n      try {\n        fetch('https://ubaya.fun/react/160819001/getuser.php', options).then(function (response) {\n          return response.json();\n        }).then(function (resjson) {\n          _this.setState(_this.state = {\n            data: resjson.data\n          });\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    _this.cekLogin = _asyncToGenerator(function* () {\n      try {\n        var value = yield AsyncStorage.getItem('username');\n        global.activeuser = value;\n        console.debug(value);\n\n        if (value !== null) {\n          return value;\n        }\n      } catch (e) {}\n    });\n    _this.state = {\n      islogin: false,\n      tes: \"Menunggu API\",\n      data: [],\n      user_id: ''\n    };\n    global.giveup = false;\n    global.confirmgiveup = false;\n\n    _this.cekLogin().then(function (item) {\n      if (item != null) {\n        console.log(item);\n\n        _this.setState(_this.state = {\n          islogin: true,\n          user_id: item\n        });\n\n        _this.fetchData();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"CustomDrawerContent\",\n    value: function CustomDrawerContent(props) {\n      return _jsx(View, {\n        style: style.drawer,\n        children: _jsxs(DrawerContentScrollView, _objectSpread(_objectSpread({}, props), {}, {\n          contentContainerStyle: {\n            backgroundColor: '#265e80',\n            marginTop: -65\n          },\n          children: [_jsxs(View, {\n            style: style.drawer_header,\n            children: [_jsx(Image, {\n              containerStyle: {\n                aspectRatio: 1,\n                width: '100%'\n              },\n              blurRadius: 20,\n              source: {\n                uri: 'https://picsum.photos/2048/2048'\n              }\n            }), _jsxs(Text, {\n              style: style.text_drawer_header,\n              children: [_jsx(Avatar, {\n                rounded: true,\n                size: 'large',\n                source: {\n                  uri: 'http://placekitten.com/300/300'\n                }\n              }), '\\n', _jsx(Text, {\n                style: {\n                  fontSize: 16,\n                  fontWeight: '300'\n                }\n              }), '\\n', global.activeuser, '\\n']\n            })]\n          }), _jsx(View, {\n            style: style.drawer,\n            children: _jsx(DrawerItemList, _objectSpread({}, props))\n          }), _jsx(FAB, {\n            icon: \"logout\",\n            style: {\n              position: 'absolute',\n              margin: 16,\n              right: 0,\n              top: 110,\n              borderRadius: 100\n            },\n            mode: \"elevated\",\n            onPress: doLogout\n          })]\n        }))\n      });\n    }\n  }, {\n    key: \"TabNav\",\n    value: function TabNav() {\n      return _jsxs(Tab.Navigator, {\n        screenOptions: function screenOptions(_ref2) {\n          var route = _ref2.route;\n          return {\n            tabBarIcon: function tabBarIcon(_ref3) {\n              var focused = _ref3.focused;\n              var iconName;\n\n              if (route.name == 'Home') {\n                iconName = 'home';\n                var iconColor = focused ? '#fff' : '#265e80';\n              }\n\n              if (route.name == 'My Creation') {\n                iconName = 'happy';\n                var iconColor = focused ? '#fff' : '#265e80';\n              }\n\n              if (route.name == 'Leaderboard') {\n                iconName = 'podium';\n                var iconColor = focused ? '#fff' : '#265e80';\n              }\n\n              if (route.name == 'Settings') {\n                iconName = 'cog';\n                var iconColor = focused ? '#fff' : '#265e80';\n              }\n\n              return _jsx(Ionicons, {\n                name: iconName,\n                size: 30,\n                color: iconColor\n              });\n            },\n            tabBarActiveTintColor: '#fff',\n            tabBarInactiveTintColor: '#265e80',\n            tabBarStyle: {\n              backgroundColor: '#917f54'\n            }\n          };\n        },\n        children: [_jsx(Tab.Screen, {\n          name: \"Home\",\n          component: NavMeme,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"My Creation\",\n          component: MyCreation,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Leaderboard\",\n          component: Leaderboard,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Settings\",\n          component: Settings,\n          options: {\n            headerShown: false\n          }\n        })]\n      });\n    }\n  }, {\n    key: \"giveup\",\n    value: function giveup() {\n      global.giveup = true;\n      global.confirmgiveup = false;\n    }\n  }, {\n    key: \"cancelgiveup\",\n    value: function cancelgiveup() {\n      global.confirmgiveup = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.islogin) {\n        return _jsx(NavigationContainer, {\n          children: _jsxs(Stack.Navigator, {\n            children: [_jsx(Stack.Screen, {\n              name: \"Login\",\n              component: Login,\n              options: {\n                headerShown: false\n              }\n            }), _jsx(Stack.Screen, {\n              name: \"Create Account\",\n              component: Register,\n              options: {\n                title: '',\n                headerShown: true,\n                headerStyle: {\n                  backgroundColor: '#f1dd96'\n                }\n              }\n            })]\n          })\n        });\n      } else {\n        return _jsx(NavigationContainer, {\n          children: _jsxs(Drawer.Navigator, {\n            initialRouteName: \" \",\n            screenOptions: function screenOptions(_ref4) {\n              var route = _ref4.route;\n              return {\n                drawerIcon: function drawerIcon(_ref5) {\n                  var focused = _ref5.focused;\n                  var iconName;\n\n                  if (route.name == 'Home') {\n                    iconName = 'home';\n                    var iconColor = focused ? 'blue' : 'gray';\n                  }\n\n                  if (route.name == 'My Creation') {\n                    iconName = 'happy';\n                    var iconColor = focused ? 'blue' : 'gray';\n                  }\n\n                  if (route.name == 'Leaderboard') {\n                    iconName = 'podium';\n                    var iconColor = focused ? 'blue' : 'gray';\n                  }\n\n                  if (route.name == 'Settings') {\n                    iconName = 'cog';\n                    var iconColor = focused ? 'blue' : 'gray';\n                  }\n\n                  return _jsx(Ionicons, {\n                    name: iconName,\n                    size: 30,\n                    color: iconColor\n                  });\n                },\n                tabBarActiveTintColor: 'blue',\n                tabBarInactiveTintColor: 'gray'\n              };\n            },\n            children: [_jsx(View, {\n              style: style.drawer,\n              children: _jsxs(DrawerContentScrollView, {\n                contentContainerStyle: {\n                  backgroundColor: '#265e80',\n                  marginTop: -65\n                },\n                children: [_jsxs(View, {\n                  style: style.drawer_header,\n                  children: [_jsx(Image, {\n                    containerStyle: {\n                      aspectRatio: 1,\n                      width: '100%'\n                    },\n                    blurRadius: 20,\n                    source: {\n                      uri: 'https://picsum.photos/2048/2048'\n                    }\n                  }), _jsxs(Text, {\n                    style: style.text_drawer_header,\n                    children: [_jsx(Avatar, {\n                      rounded: true,\n                      size: 'large',\n                      source: {\n                        uri: 'http://placekitten.com/300/300'\n                      }\n                    }), '\\n', _jsx(Text, {\n                      style: {\n                        fontSize: 16,\n                        fontWeight: '300'\n                      }\n                    }), '\\n', global.activeuser, '\\n']\n                  })]\n                }), _jsx(View, {\n                  style: style.drawer,\n                  children: _jsx(DrawerItemList, {})\n                }), _jsx(FAB, {\n                  icon: \"logout\",\n                  style: {\n                    position: 'absolute',\n                    margin: 16,\n                    right: 0,\n                    top: 110,\n                    borderRadius: 100\n                  },\n                  mode: \"elevated\",\n                  onPress: doLogout\n                })]\n              })\n            }), _jsx(Drawer.Screen, {\n              name: \"Home\",\n              component: this.TabNav,\n              options: {\n                headerShown: true,\n                headerTitle: 'Daily Meme Digest',\n                headerStyle: {\n                  backgroundColor: '#917f54'\n                },\n                headerTintColor: '#fff',\n                drawerIcon: function drawerIcon(_ref6) {\n                  var focused = _ref6.focused,\n                      size = _ref6.size;\n                  return _jsx(Ionicons, {\n                    name: \"home\",\n                    size: size,\n                    color: focused ? 'blue' : 'gray'\n                  });\n                }\n              }\n            }), _jsx(Drawer.Screen, {\n              name: \"My Creation\",\n              component: MyCreation,\n              options: {\n                headerShown: true,\n                headerStyle: {\n                  backgroundColor: '#917f54'\n                },\n                headerTintColor: '#fff'\n              }\n            }), _jsx(Drawer.Screen, {\n              name: \"Leaderboard\",\n              component: Leaderboard,\n              options: {\n                headerShown: true,\n                headerStyle: {\n                  backgroundColor: '#917f54'\n                },\n                headerTintColor: '#fff'\n              }\n            }), _jsx(Drawer.Screen, {\n              name: \"Settings\",\n              component: Settings,\n              options: {\n                headerShown: true,\n                headerStyle: {\n                  backgroundColor: '#917f54'\n                },\n                headerTintColor: '#fff'\n              }\n            })]\n          })\n        });\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\n\nvar doLogout = function () {\n  var _ref7 = _asyncToGenerator(function* () {\n    try {\n      yield AsyncStorage.clear();\n      alert('Logged out');\n      NativeModules.DevSettings.reload();\n    } catch (e) {}\n  });\n\n  return function doLogout() {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nfunction NavMeme() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Home\",\n      component: Home,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Create Your Meme\",\n      component: NewMeme\n    }), _jsx(Stack.Screen, {\n      name: \"Meme Detail\",\n      component: Detail\n    })]\n  });\n}","map":{"version":3,"names":["StatusBar","Image","Avatar","FAB","NavigationContainer","HeaderBackButton","createNativeStackNavigator","createBottomTabNavigator","createDrawerNavigator","DrawerContentScrollView","DrawerItemList","AsyncStorage","Ionicons","Button","Component","style","Home","Login","Register","MyCreation","Leaderboard","Settings","NewMeme","Detail","Stack","Drawer","Tab","App","props","fetchData","options","method","headers","Headers","body","state","user_id","fetch","then","response","json","resjson","setState","data","error","console","log","cekLogin","value","getItem","global","activeuser","debug","e","islogin","tes","giveup","confirmgiveup","item","drawer","backgroundColor","marginTop","drawer_header","aspectRatio","width","uri","text_drawer_header","fontSize","fontWeight","position","margin","right","top","borderRadius","doLogout","route","tabBarIcon","focused","iconName","name","iconColor","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarStyle","NavMeme","headerShown","title","headerStyle","drawerIcon","TabNav","headerTitle","headerTintColor","size","clear","alert","NativeModules","DevSettings","reload"],"sources":["C:/Users/CHRIS/Documents/Kuliah/Semester7/STIMP/UAS/ZIP/uasstimp-master/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, NativeModules, Alert } from 'react-native';\nimport { Image, Avatar } from '@rneui/base';\nimport { FAB } from 'react-native-paper';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { HeaderBackButton } from '@react-navigation/elements';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList } from '@react-navigation/drawer';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport { Button } from '@rneui/base';\nimport { Component } from 'react';\n\nimport style from './assets/style';\nimport Home from './screens/home';\nimport Login from './screens/login';\nimport Register from './screens/register';\nimport MyCreation from './screens/mycreation';\nimport Leaderboard from './screens/leaderboard';\nimport Settings from './screens/settings';\nimport NewMeme from './screens/newmeme';\nimport Detail from './screens/detail';\n\nconst Stack = createNativeStackNavigator();\nconst Drawer = createDrawerNavigator();\nconst Tab = createBottomTabNavigator();\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      islogin: false\n      ,tes: \"Menunggu API\",\n      data: [],\n      user_id:'',\n    }\n\n    global.giveup = false;\n    global.confirmgiveup = false;\n\n    this.cekLogin().then((item) => {\n      if (item != null) {\n        console.log(item)\n        this.setState(\n          this.state = {\n            islogin: true,\n            user_id:item\n          });\n          this.fetchData()\n      }\n    });\n   \n  }\n\n\n  fetchData = () => {\n    const options = {\n        method: 'POST',\n        headers: new Headers({\n            'Content-Type': 'application/x-www-form-urlencoded'\n        }),\n        body: \"user_id=\" + this.state.user_id\n    };\n    try {\n        fetch('https://ubaya.fun/react/160819001/getuser.php', options)\n            .then(response => response.json())\n            .then(resjson => {\n                this.setState(\n                    this.state = {\n                        // tes: resjson.result,\n                        //   tes:resjson.data[0].privasi,\n                        data: resjson.data,\n                        // tes: this.state.data.privasi\n                    })\n            });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n  cekLogin = async () => {\n    try {\n      const value = await AsyncStorage.getItem('username');\n      global.activeuser = value;\n      console.debug(value);\n      //  alert(value);\n      if (value !== null) {\n        return value;\n      }\n    } catch (e) {\n      // error reading value\n    }\n  }\n\n  CustomDrawerContent(props) {\n    return (\n      <View style={style.drawer}>\n        <DrawerContentScrollView{...props}\n          contentContainerStyle={{ backgroundColor: '#265e80', marginTop: -65 }}>\n          <View style={style.drawer_header}>\n            <Image\n              containerStyle={{\n                aspectRatio: 1,\n                width: '100%',\n              }}\n              blurRadius={20}\n              source={{\n                uri:\n                  'https://picsum.photos/2048/2048',\n              }}\n            />\n  \n            <Text style={style.text_drawer_header}>\n              <Avatar rounded size={'large'} source={{ uri: 'http://placekitten.com/300/300' }} />{'\\n'}\n              <Text style={{\n                fontSize: 16,\n                fontWeight: '300',\n              }}></Text>{'\\n'}\n              {global.activeuser}{'\\n'}\n  \n            </Text>\n          </View>\n          <View style={style.drawer}>\n            <DrawerItemList{...props} />\n          </View>\n          <FAB\n            icon=\"logout\"\n            style={{\n              position: 'absolute',\n              margin: 16,\n              right: 0,\n              top: 110,\n              borderRadius: 100,\n            }}\n            mode='elevated'\n            onPress={doLogout} />\n        </DrawerContentScrollView>\n      </View>\n    )\n  }\n\n  TabNav() {\n    return (\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused }) => {\n            var iconName;\n            if (route.name == 'Home') { iconName = 'home'; var iconColor = (focused) ? '#fff' : '#265e80'; }\n            if (route.name == 'My Creation') { iconName = 'happy'; var iconColor = (focused) ? '#fff' : '#265e80'; }\n            if (route.name == 'Leaderboard') { iconName = 'podium'; var iconColor = (focused) ? '#fff' : '#265e80'; }\n            if (route.name == 'Settings') { iconName = 'cog'; var iconColor = (focused) ? '#fff' : '#265e80'; }\n            return <Ionicons name={iconName} size={30} color={iconColor} />;\n          },\n          tabBarActiveTintColor: '#fff',\n          tabBarInactiveTintColor: '#265e80',\n          // tabBarActiveBackgroundColor:'#f1dd96',\n          // tabBarInactiveBackgroundColor:'#917f54',\n          tabBarStyle:{backgroundColor:'#917f54'}\n        })}\n      >\n        <Tab.Screen name=\"Home\" component={NavMeme} options={{ headerShown: false }} />\n        <Tab.Screen name=\"My Creation\" component={MyCreation} options={{ headerShown: false }} />\n        <Tab.Screen name=\"Leaderboard\" component={Leaderboard} options={{ headerShown: false }} />\n        <Tab.Screen name=\"Settings\" component={Settings} options={{ headerShown: false }} />\n      </Tab.Navigator>\n    )\n  }\n\n  giveup() {\n    global.giveup = true;\n    global.confirmgiveup = false;\n  }\n  cancelgiveup() {\n    global.confirmgiveup = false;\n  }\n\n\n\n  render() {\n    if (!this.state.islogin) {\n      \n      return (\n        \n        <NavigationContainer><Stack.Navigator>\n          <Stack.Screen name=\"Login\" component={Login} options={{ headerShown: false }} />\n          <Stack.Screen name=\"Create Account\" component={Register}\n            options={{\n              title: '',\n              headerShown: true,\n              headerStyle: {\n                backgroundColor: '#f1dd96',\n              }\n            }} />\n        </Stack.Navigator>\n        </NavigationContainer>);\n    } else {\n      \n      return  (\n        <NavigationContainer>\n\n          <Drawer.Navigator initialRouteName=\" \"\n            screenOptions={({ route }) => ({\n              drawerIcon: ({ focused }) => {\n                var iconName;\n                if (route.name == 'Home') { iconName = 'home'; var iconColor = (focused) ? 'blue' : 'gray'; }\n                if (route.name == 'My Creation') { iconName = 'happy'; var iconColor = (focused) ? 'blue' : 'gray'; }\n                if (route.name == 'Leaderboard') { iconName = 'podium'; var iconColor = (focused) ? 'blue' : 'gray'; }\n                if (route.name == 'Settings') { iconName = 'cog'; var iconColor = (focused) ? 'blue' : 'gray'; }\n                return <Ionicons name={iconName} size={30} color={iconColor} />;\n              },\n              tabBarActiveTintColor: 'blue',\n              tabBarInactiveTintColor: 'gray',\n            })}\n            // drawerContent={props => <CustomDrawerContent {...props} />}\n            >\n            <View style={style.drawer}>\n        <DrawerContentScrollView\n          contentContainerStyle={{ backgroundColor: '#265e80', marginTop: -65 }}>\n          <View style={style.drawer_header}>\n            <Image\n              containerStyle={{\n                aspectRatio: 1,\n                width: '100%',\n              }}\n              blurRadius={20}\n              source={{\n                uri:\n                  'https://picsum.photos/2048/2048',\n              }}\n            />\n  \n            <Text style={style.text_drawer_header}>\n              <Avatar rounded size={'large'} source={{ uri: 'http://placekitten.com/300/300' }} />{'\\n'}\n              <Text style={{\n                fontSize: 16,\n                fontWeight: '300',\n              }}></Text>{'\\n'}\n              {global.activeuser}{'\\n'}\n  \n            </Text>\n          </View>\n          <View style={style.drawer}>\n            <DrawerItemList />\n          </View>\n          <FAB\n            icon=\"logout\"\n            style={{\n              position: 'absolute',\n              margin: 16,\n              right: 0,\n              top: 110,\n              borderRadius: 100,\n            }}\n            mode='elevated'\n            onPress={doLogout} />\n        </DrawerContentScrollView>\n      </View>\n            <Drawer.Screen name=\"Home\"\n              component={this.TabNav}\n\n              options={{\n                headerShown: true,\n                headerTitle: 'Daily Meme Digest',\n                headerStyle: {\n                  backgroundColor: '#917f54',\n                },\n                headerTintColor: '#fff',\n                // drawerItemStyle: { height: 0 }\n                drawerIcon: ({ focused, size }) => (\n                  <Ionicons\n                    name=\"home\"\n                    size={size}\n                    color={focused ? 'blue' : 'gray'}\n                  />\n                )\n              }} />\n            <Drawer.Screen\n              name=\"My Creation\"\n              component={MyCreation}\n              options={{\n                headerShown: true,\n                headerStyle: {\n                  backgroundColor: '#917f54',\n                },\n                headerTintColor: '#fff',\n              }}\n            />\n            <Drawer.Screen\n              name=\"Leaderboard\"\n              component={Leaderboard}\n              options={{\n                headerShown: true,\n                headerStyle: {\n                  backgroundColor: '#917f54',\n                },\n                headerTintColor: '#fff',\n              }}\n            />\n            <Drawer.Screen\n              name=\"Settings\"\n              component={Settings}\n              options={{\n                headerShown: true,\n                headerStyle: {\n                  backgroundColor: '#917f54',\n                },\n                headerTintColor: '#fff',\n              }}\n            />\n          </Drawer.Navigator>\n\n        </NavigationContainer >\n      )\n    }\n  }\n\n}\n\n\n\nconst doLogout = async () => {\n  try {\n    await AsyncStorage.clear()\n    alert('Logged out');\n    NativeModules.DevSettings.reload();\n  } catch (e) {\n  }\n}\n\n// function CustomDrawerContent(props) {\n//   return (\n//     <View style={style.drawer}>\n//       <DrawerContentScrollView{...props}\n//         contentContainerStyle={{ backgroundColor: '#265e80', marginTop: -65 }}>\n//         <View style={style.drawer_header}>\n//           <Image\n//             containerStyle={{\n//               aspectRatio: 1,\n//               width: '100%',\n//             }}\n//             blurRadius={20}\n//             source={{\n//               uri:\n//                 'https://picsum.photos/2048/2048',\n//             }}\n//           />\n\n//           <Text style={style.text_drawer_header}>\n//             <Avatar rounded size={'large'} source={{ uri: 'http://placekitten.com/300/300' }} />{'\\n'}\n//             <Text style={{\n//               fontSize: 16,\n//               fontWeight: '300',\n//             }}></Text>{'\\n'}\n//             {global.activeuser}{'\\n'}\n\n//           </Text>\n//         </View>\n//         <View style={style.drawer}>\n//           <DrawerItemList{...props} />\n//         </View>\n//         <FAB\n//           icon=\"logout\"\n//           style={{\n//             position: 'absolute',\n//             margin: 16,\n//             right: 0,\n//             top: 110,\n//             borderRadius: 100,\n//           }}\n//           mode='elevated'\n//           onPress={doLogout} />\n//       </DrawerContentScrollView>\n//     </View>\n//   )\n// }\n\nfunction NavMeme() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Home\" component={Home} options={{ headerShown: false }} />\n      <Stack.Screen name=\"Create Your Meme\" component={NewMeme} />\n      <Stack.Screen name=\"Meme Detail\" component={Detail}/>\n    </Stack.Navigator>\n  );\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}