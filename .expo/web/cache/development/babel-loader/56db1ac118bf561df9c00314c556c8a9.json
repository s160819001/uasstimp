{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Text, Button, ListItem, Avatar } from '@rneui/base';\nimport React, { Component } from \"react\";\nimport style from \"../assets/style\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { FlatList } from \"react-native-gesture-handler\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Leaderboard = function (_React$Component) {\n  _inherits(Leaderboard, _React$Component);\n\n  var _super = _createSuper(Leaderboard);\n\n  function Leaderboard() {\n    var _this;\n\n    _classCallCheck(this, Leaderboard);\n\n    _this = _super.call(this);\n\n    _this.fetchData = function () {\n      try {\n        fetch('https://ubaya.fun/react/160819001/leaderboard.php').then(function (response) {\n          return response.json();\n        }).then(function (resjson) {\n          _this.setState(_this.state = {\n            tes: resjson.result,\n            data: resjson.data\n          });\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    _this.state = {\n      tes: \"Menunggu API\",\n      data: [],\n      privasi: 0\n    };\n\n    _this.fetchData();\n\n    return _this;\n  }\n\n  _createClass(Leaderboard, [{\n    key: \"getprivasi\",\n    value: function getprivasi() {\n      for (var i = 0; i <= count(this.state.data); i++) {}\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsx(ScrollView, {\n        style: style.container\n      });\n    }\n  }]);\n\n  return Leaderboard;\n}(React.Component);\n\nexport default Leaderboard;","map":{"version":3,"names":["Text","Button","ListItem","Avatar","React","Component","style","Ionicons","FlatList","Leaderboard","fetchData","fetch","then","response","json","resjson","setState","state","tes","result","data","error","console","log","privasi","i","count","container"],"sources":["C:/Users/CHRIS/Documents/Kuliah/Semester7/STIMP/UAS/ZIP/uasstimp-master/screens/leaderboard.js"],"sourcesContent":["import { View, ScrollView } from \"react-native\";\nimport { Text, Button, ListItem, Avatar } from '@rneui/base';\nimport React, { Component } from \"react\";\nimport style from \"../assets/style\";\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport { FlatList } from \"react-native-gesture-handler\";\n\nclass Leaderboard extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            tes: \"Menunggu API\",\n            data: [],\n            privasi:0\n        }\n        this.fetchData();\n    }\n    fetchData = () => {\n        try {\n            fetch('https://ubaya.fun/react/160819001/leaderboard.php')\n                .then(response => response.json())\n                .then(resjson => {\n                    this.setState(\n                        this.state = {\n                            tes: resjson.result,\n                            //   tes:resjson.data[0].url,\n                            data: resjson.data,\n                        })\n                });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    getprivasi(){\n        for(let i = 0; i<=count(this.state.data);i++){\n\n        }\n    }\n    // showdata(data){\n    //     return <FlatList\n    //     data={data}\n    //     // keyExtractor={(item) => item.id.toString()}\n    //     renderItem={({ item }) => (\n   \n            \n    //     )}/>\n    // }\n    render() {\n        return (\n            \n            <ScrollView style={style.container}>\n                {/* {console.log(this.state.data.length)} */}\n                {/* {this.showdata(this.state.data)} */}\n                {/* <FlatList\n        data={this.state.data}\n        // keyExtractor={(item) => item.id.toString()}\n        renderItem={({ item }) => (\n            <ListItem\n            \n            containerStyle={style.listitem}\n        >\n            <Avatar rounded size={'medium'} source={{ uri: item.avatar }} />\n            <ListItem.Content style={{ position: 'relative', flexDirection: 'row', alignItems: 'center' }}>\n                <View style={{ position: 'absolute', left: 0 }}>\n                    <ListItem.Title style={{ color: '#000', }}>\n                        {item.namadepan} {item.namabelakang}\n                    </ListItem.Title>\n                </View>\n                <View style={{ position: 'absolute', right: 0, flexDirection: 'row', alignItems: 'center' }}>\n                    <Ionicons\n                        name=\"heart\"\n                        size={30}\n                        color=\"#917f54\"\n                        style={{ right: 5 }}\n                    />\n                    <ListItem.Title style={{ color: '#000', }}>\n                        {item.totallike}\n                    </ListItem.Title>\n                </View>\n            </ListItem.Content>\n        </ListItem>\n        )}/> */}\n            </ScrollView>\n        )\n    }\n\n}\n\nexport default Leaderboard;"],"mappings":";;;;;;;;;;;;AACA,SAASA,IAAT,EAAeC,MAAf,EAAuBC,QAAvB,EAAiCC,MAAjC,QAA+C,aAA/C;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;AACA,SAASC,QAAT,QAAyB,8BAAzB;;;IAEMC,W;;;;;EACF,uBAAc;IAAA;;IAAA;;IACV;;IADU,MASdC,SATc,GASF,YAAM;MACd,IAAI;QACAC,KAAK,CAAC,mDAAD,CAAL,CACKC,IADL,CACU,UAAAC,QAAQ;UAAA,OAAIA,QAAQ,CAACC,IAAT,EAAJ;QAAA,CADlB,EAEKF,IAFL,CAEU,UAAAG,OAAO,EAAI;UACb,MAAKC,QAAL,CACI,MAAKC,KAAL,GAAa;YACTC,GAAG,EAAEH,OAAO,CAACI,MADJ;YAGTC,IAAI,EAAEL,OAAO,CAACK;UAHL,CADjB;QAMH,CATL;MAUH,CAXD,CAWE,OAAOC,KAAP,EAAc;QACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACH;IACJ,CAxBa;;IAEV,MAAKJ,KAAL,GAAa;MACTC,GAAG,EAAE,cADI;MAETE,IAAI,EAAE,EAFG;MAGTI,OAAO,EAAC;IAHC,CAAb;;IAKA,MAAKd,SAAL;;IAPU;EAQb;;;;WAkBD,sBAAY;MACR,KAAI,IAAIe,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAEC,KAAK,CAAC,KAAKT,KAAL,CAAWG,IAAZ,CAAvB,EAAyCK,CAAC,EAA1C,EAA6C,CAE5C;IACJ;;;WAUD,kBAAS;MACL,OAEI,KAAC,UAAD;QAAY,KAAK,EAAEnB,KAAK,CAACqB;MAAzB,EAFJ;IAoCH;;;;EA9EqBvB,KAAK,CAACC,S;;AAkFhC,eAAeI,WAAf"},"metadata":{},"sourceType":"module"}