{"ast":null,"code":"import { getContext } from \"../utils/getContext.web\";\n\nfunction resampleSingle(canvas, width, height) {\n  var resizeCanvas = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var result = document.createElement('canvas');\n  result.width = canvas.width;\n  result.height = canvas.height;\n  var widthSource = canvas.width;\n  var heightSource = canvas.height;\n  width = Math.round(width);\n  height = Math.round(height);\n  var wRatio = widthSource / width;\n  var hRatio = heightSource / height;\n  var wRatioHalf = Math.ceil(wRatio / 2);\n  var hRatioHalf = Math.ceil(hRatio / 2);\n  var ctx = getContext(canvas);\n  var img = ctx.getImageData(0, 0, widthSource, heightSource);\n  var img2 = ctx.createImageData(width, height);\n  var data = img.data;\n  var data2 = img2.data;\n\n  for (var j = 0; j < height; j++) {\n    for (var i = 0; i < width; i++) {\n      var x2 = (i + j * width) * 4;\n      var weight = 0;\n      var weights = 0;\n      var weightsAlpha = 0;\n      var gx_r = 0;\n      var gx_g = 0;\n      var gx_b = 0;\n      var gx_a = 0;\n      var yCenter = (j + 0.5) * hRatio;\n      var yy_start = Math.floor(j * hRatio);\n      var yy_stop = Math.ceil((j + 1) * hRatio);\n\n      for (var yy = yy_start; yy < yy_stop; yy++) {\n        var dy = Math.abs(yCenter - (yy + 0.5)) / hRatioHalf;\n        var center_x = (i + 0.5) * wRatio;\n        var w0 = dy * dy;\n        var xx_start = Math.floor(i * wRatio);\n        var xx_stop = Math.ceil((i + 1) * wRatio);\n\n        for (var xx = xx_start; xx < xx_stop; xx++) {\n          var dx = Math.abs(center_x - (xx + 0.5)) / wRatioHalf;\n          var w = Math.sqrt(w0 + dx * dx);\n\n          if (w >= 1) {\n            continue;\n          }\n\n          weight = 2 * w * w * w - 3 * w * w + 1;\n          var xPosition = 4 * (xx + yy * widthSource);\n          gx_a += weight * data[xPosition + 3];\n          weightsAlpha += weight;\n\n          if (data[xPosition + 3] < 255) {\n            weight = weight * data[xPosition + 3] / 250;\n          }\n\n          gx_r += weight * data[xPosition];\n          gx_g += weight * data[xPosition + 1];\n          gx_b += weight * data[xPosition + 2];\n          weights += weight;\n        }\n      }\n\n      data2[x2] = gx_r / weights;\n      data2[x2 + 1] = gx_g / weights;\n      data2[x2 + 2] = gx_b / weights;\n      data2[x2 + 3] = gx_a / weightsAlpha;\n    }\n  }\n\n  if (resizeCanvas) {\n    result.width = width;\n    result.height = height;\n  }\n\n  var context = getContext(result);\n  context.putImageData(img2, 0, 0);\n  return result;\n}\n\nexport default (function (canvas, _ref) {\n  var width = _ref.width,\n      height = _ref.height;\n  var imageRatio = canvas.width / canvas.height;\n  var requestedWidth = 0;\n  var requestedHeight = 0;\n\n  if (width !== undefined) {\n    requestedWidth = width;\n    requestedHeight = requestedWidth / imageRatio;\n  }\n\n  if (height !== undefined) {\n    requestedHeight = height;\n\n    if (requestedWidth === 0) {\n      requestedWidth = requestedHeight * imageRatio;\n    }\n  }\n\n  return resampleSingle(canvas, requestedWidth, requestedHeight, true);\n});","map":{"version":3,"mappings":"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","names":["getContext","resampleSingle","canvas","width","height","resizeCanvas","result","document","createElement","widthSource","heightSource","Math","round","wRatio","hRatio","wRatioHalf","ceil","hRatioHalf","ctx","img","getImageData","img2","createImageData","data","data2","j","i","x2","weight","weights","weightsAlpha","gx_r","gx_g","gx_b","gx_a","yCenter","yy_start","floor","yy_stop","yy","dy","abs","center_x","w0","xx_start","xx_stop","xx","dx","w","sqrt","xPosition","context","putImageData","imageRatio","requestedWidth","requestedHeight","undefined"],"sourceRoot":"","sources":["../../src/actions/ResizeAction.web.ts"],"sourcesContent":["import { ActionResize } from '../ImageManipulator.types';\nimport { getContext } from '../utils/getContext.web';\n\n/**\n * Hermite resize - fast image resize/resample using Hermite filter. 1 cpu version!\n * https://stackoverflow.com/a/18320662/4047926\n *\n * @param {HTMLCanvasElement} canvas\n * @param {int} width\n * @param {int} height\n * @param {boolean} resizeCanvas if true, canvas will be resized. Optional.\n */\nfunction resampleSingle(\n  canvas: HTMLCanvasElement,\n  width: number,\n  height: number,\n  resizeCanvas: boolean = false\n): HTMLCanvasElement {\n  const result = document.createElement('canvas');\n  result.width = canvas.width;\n  result.height = canvas.height;\n\n  const widthSource = canvas.width;\n  const heightSource = canvas.height;\n  width = Math.round(width);\n  height = Math.round(height);\n\n  const wRatio = widthSource / width;\n  const hRatio = heightSource / height;\n  const wRatioHalf = Math.ceil(wRatio / 2);\n  const hRatioHalf = Math.ceil(hRatio / 2);\n\n  const ctx = getContext(canvas);\n\n  const img = ctx.getImageData(0, 0, widthSource, heightSource);\n  const img2 = ctx.createImageData(width, height);\n  const data = img.data;\n  const data2 = img2.data;\n\n  for (let j = 0; j < height; j++) {\n    for (let i = 0; i < width; i++) {\n      const x2 = (i + j * width) * 4;\n      let weight = 0;\n      let weights = 0;\n      let weightsAlpha = 0;\n      let gx_r = 0;\n      let gx_g = 0;\n      let gx_b = 0;\n      let gx_a = 0;\n      const yCenter = (j + 0.5) * hRatio;\n      const yy_start = Math.floor(j * hRatio);\n      const yy_stop = Math.ceil((j + 1) * hRatio);\n      for (let yy = yy_start; yy < yy_stop; yy++) {\n        const dy = Math.abs(yCenter - (yy + 0.5)) / hRatioHalf;\n        const center_x = (i + 0.5) * wRatio;\n        const w0 = dy * dy; //pre-calc part of w\n        const xx_start = Math.floor(i * wRatio);\n        const xx_stop = Math.ceil((i + 1) * wRatio);\n        for (let xx = xx_start; xx < xx_stop; xx++) {\n          const dx = Math.abs(center_x - (xx + 0.5)) / wRatioHalf;\n          const w = Math.sqrt(w0 + dx * dx);\n          if (w >= 1) {\n            //pixel too far\n            continue;\n          }\n          //hermite filter\n          weight = 2 * w * w * w - 3 * w * w + 1;\n          const xPosition = 4 * (xx + yy * widthSource);\n          //alpha\n          gx_a += weight * data[xPosition + 3];\n          weightsAlpha += weight;\n          //colors\n          if (data[xPosition + 3] < 255) {\n            weight = (weight * data[xPosition + 3]) / 250;\n          }\n          gx_r += weight * data[xPosition];\n          gx_g += weight * data[xPosition + 1];\n          gx_b += weight * data[xPosition + 2];\n          weights += weight;\n        }\n      }\n      data2[x2] = gx_r / weights;\n      data2[x2 + 1] = gx_g / weights;\n      data2[x2 + 2] = gx_b / weights;\n      data2[x2 + 3] = gx_a / weightsAlpha;\n    }\n  }\n\n  //resize canvas\n  if (resizeCanvas) {\n    result.width = width;\n    result.height = height;\n  }\n\n  //draw\n  const context = getContext(result);\n  context.putImageData(img2, 0, 0);\n\n  return result;\n}\n\nexport default (canvas: HTMLCanvasElement, { width, height }: ActionResize['resize']) => {\n  const imageRatio = canvas.width / canvas.height;\n\n  let requestedWidth: number = 0;\n  let requestedHeight: number = 0;\n  if (width !== undefined) {\n    requestedWidth = width;\n    requestedHeight = requestedWidth / imageRatio;\n  }\n  if (height !== undefined) {\n    requestedHeight = height;\n    if (requestedWidth === 0) {\n      requestedWidth = requestedHeight * imageRatio;\n    }\n  }\n\n  return resampleSingle(canvas, requestedWidth, requestedHeight, true);\n};\n"]},"metadata":{},"sourceType":"module"}