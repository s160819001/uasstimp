{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"checked\", \"Component\", \"iconRight\", \"title\", \"titleProps\", \"center\", \"right\", \"containerStyle\", \"wrapperStyle\", \"textStyle\", \"checkedTitle\", \"fontFamily\", \"theme\", \"onPress\", \"onLongPress\", \"disabled\", \"disabledStyle\", \"disabledTitleStyle\", \"checkedColor\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Text as TextElement } from \"../Text\";\nimport { CheckBoxIcon } from \"./components/CheckBoxIcon\";\nimport { fonts } from \"../helpers\";\nimport { color, defaultTheme } from \"../helpers\";\nexport var CheckBox = function CheckBox(_ref) {\n  var _theme$colors, _theme$colors2, _theme$colors3;\n\n  var _ref$checked = _ref.checked,\n      checked = _ref$checked === void 0 ? false : _ref$checked,\n      _ref$Component = _ref.Component,\n      Component = _ref$Component === void 0 ? Pressable : _ref$Component,\n      _ref$iconRight = _ref.iconRight,\n      iconRight = _ref$iconRight === void 0 ? false : _ref$iconRight,\n      title = _ref.title,\n      _ref$titleProps = _ref.titleProps,\n      titleProps = _ref$titleProps === void 0 ? {} : _ref$titleProps,\n      _ref$center = _ref.center,\n      center = _ref$center === void 0 ? false : _ref$center,\n      _ref$right = _ref.right,\n      right = _ref$right === void 0 ? false : _ref$right,\n      containerStyle = _ref.containerStyle,\n      wrapperStyle = _ref.wrapperStyle,\n      textStyle = _ref.textStyle,\n      checkedTitle = _ref.checkedTitle,\n      fontFamily = _ref.fontFamily,\n      _ref$theme = _ref.theme,\n      theme = _ref$theme === void 0 ? defaultTheme : _ref$theme,\n      onPress = _ref.onPress,\n      onLongPress = _ref.onLongPress,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      disabledStyle = _ref.disabledStyle,\n      disabledTitleStyle = _ref.disabledTitleStyle,\n      _ref$checkedColor = _ref.checkedColor,\n      checkedColor = _ref$checkedColor === void 0 ? theme == null ? void 0 : (_theme$colors = theme.colors) == null ? void 0 : _theme$colors.primary : _ref$checkedColor,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var accessibilityState = {\n    checked: !!checked\n  };\n\n  var iconProps = _objectSpread({\n    checked: checked,\n    onLongPress: onLongPress,\n    checkedColor: checkedColor\n  }, rest);\n\n  return React.createElement(Component, _objectSpread(_objectSpread({\n    accessibilityRole: \"checkbox\",\n    accessibilityState: accessibilityState,\n    testID: \"RNE__CheckBox__Wrapper\"\n  }, rest), {}, {\n    disabled: disabled,\n    onLongPress: onLongPress,\n    onPress: onPress,\n    style: StyleSheet.flatten([{\n      backgroundColor: theme.colors.background,\n      borderColor: theme.colors.white\n    }, styles.container, containerStyle && containerStyle, disabled && disabledStyle])\n  }), React.createElement(View, {\n    style: StyleSheet.flatten([styles.wrapper, right && {\n      justifyContent: 'flex-end'\n    }, center && {\n      justifyContent: 'center'\n    }, wrapperStyle && wrapperStyle])\n  }, !iconRight && React.createElement(CheckBoxIcon, _objectSpread(_objectSpread({}, iconProps), {}, {\n    checkedColor: checkedColor\n  })), React.isValidElement(title) ? title : title !== '' && title && React.createElement(TextElement, _objectSpread({\n    testID: \"RNE__CheckBox__Title\",\n    style: StyleSheet.flatten([_objectSpread({\n      marginLeft: 10,\n      marginRight: 10,\n      color: theme == null ? void 0 : (_theme$colors2 = theme.colors) == null ? void 0 : _theme$colors2.grey1\n    }, Platform.select({\n      android: _objectSpread({}, fonts.android.bold),\n      default: {\n        fontWeight: 'bold'\n      }\n    })), textStyle && textStyle, fontFamily && {\n      fontFamily: fontFamily\n    }, disabled && {\n      color: color(theme == null ? void 0 : (_theme$colors3 = theme.colors) == null ? void 0 : _theme$colors3.disabled).darken(0.3).string()\n    }, disabled && disabledTitleStyle])\n  }, titleProps), checked ? checkedTitle || title : title), iconRight && React.createElement(CheckBoxIcon, _objectSpread(_objectSpread({}, iconProps), {}, {\n    checkedColor: checkedColor\n  }))));\n};\nvar styles = StyleSheet.create({\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  container: {\n    margin: 5,\n    marginLeft: 10,\n    marginRight: 10,\n    padding: 10\n  },\n  containerHasTitle: {\n    borderWidth: 1,\n    borderRadius: 3,\n    backgroundColor: '#fafafa',\n    borderColor: '#ededed'\n  }\n});\nCheckBox.displayName = 'CheckBox';","map":{"version":3,"names":["React","Text","TextElement","CheckBoxIcon","fonts","color","defaultTheme","CheckBox","checked","Component","Pressable","iconRight","title","titleProps","center","right","containerStyle","wrapperStyle","textStyle","checkedTitle","fontFamily","theme","onPress","onLongPress","disabled","disabledStyle","disabledTitleStyle","checkedColor","colors","primary","rest","accessibilityState","iconProps","createElement","accessibilityRole","testID","style","StyleSheet","flatten","backgroundColor","background","borderColor","white","styles","container","View","wrapper","justifyContent","isValidElement","marginLeft","marginRight","grey1","Platform","select","android","bold","default","fontWeight","darken","string","create","flexDirection","alignItems","margin","padding","containerHasTitle","borderWidth","borderRadius","displayName"],"sources":["/Users/davidkurniawan/Library/Mobile Documents/com~apple~CloudDocs/Documents/Semester 7/STMP/uts/fix/utsstimp/node_modules/@rneui/base/dist/CheckBox/CheckBox.js"],"sourcesContent":["import React from 'react';\nimport { StyleSheet, Pressable, View, Platform, } from 'react-native';\nimport { Text as TextElement } from '../Text';\nimport { CheckBoxIcon } from './components/CheckBoxIcon';\nimport { fonts } from '../helpers';\nimport { color, defaultTheme } from '../helpers';\nexport const CheckBox = ({ checked = false, Component = Pressable, iconRight = false, title, titleProps = {}, center = false, right = false, containerStyle, wrapperStyle, textStyle, checkedTitle, fontFamily, theme = defaultTheme, onPress, onLongPress, disabled = false, disabledStyle, disabledTitleStyle, checkedColor = theme?.colors?.primary, ...rest }) => {\n    const accessibilityState = {\n        checked: !!checked,\n    };\n    const iconProps = {\n        checked,\n        onLongPress,\n        checkedColor,\n        ...rest,\n    };\n    return (React.createElement(Component, { accessibilityRole: \"checkbox\", accessibilityState: accessibilityState, testID: \"RNE__CheckBox__Wrapper\", ...rest, disabled: disabled, onLongPress: onLongPress, onPress: onPress, style: StyleSheet.flatten([\n            {\n                backgroundColor: theme.colors.background,\n                borderColor: theme.colors.white,\n            },\n            styles.container,\n            containerStyle && containerStyle,\n            disabled && disabledStyle,\n        ]) },\n        React.createElement(View, { style: StyleSheet.flatten([\n                styles.wrapper,\n                right && { justifyContent: 'flex-end' },\n                center && { justifyContent: 'center' },\n                wrapperStyle && wrapperStyle,\n            ]) },\n            !iconRight && (React.createElement(CheckBoxIcon, { ...iconProps, checkedColor: checkedColor })),\n            React.isValidElement(title)\n                ? title\n                : title !== '' &&\n                    title && (React.createElement(TextElement, { testID: \"RNE__CheckBox__Title\", style: StyleSheet.flatten([\n                        {\n                            marginLeft: 10,\n                            marginRight: 10,\n                            color: theme?.colors?.grey1,\n                            ...Platform.select({\n                                android: {\n                                    ...fonts.android.bold,\n                                },\n                                default: {\n                                    fontWeight: 'bold',\n                                },\n                            }),\n                        },\n                        textStyle && textStyle,\n                        fontFamily && { fontFamily },\n                        disabled && {\n                            color: color(theme?.colors?.disabled)\n                                .darken(0.3)\n                                .string(),\n                        },\n                        disabled && disabledTitleStyle,\n                    ]), ...titleProps }, checked ? checkedTitle || title : title)),\n            iconRight && (React.createElement(CheckBoxIcon, { ...iconProps, checkedColor: checkedColor })))));\n};\nconst styles = StyleSheet.create({\n    wrapper: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    container: {\n        margin: 5,\n        marginLeft: 10,\n        marginRight: 10,\n        padding: 10,\n    },\n    containerHasTitle: {\n        borderWidth: 1,\n        borderRadius: 3,\n        backgroundColor: '#fafafa',\n        borderColor: '#ededed',\n    },\n});\nCheckBox.displayName = 'CheckBox';\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}